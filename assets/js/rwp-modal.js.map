{"version":3,"file":"js/rwp-modal.js","mappings":";;;;;;;;;;;;;;;;;;;;AAA8C;AACE;AAChD;AACmD;AACF;AACM;AACvD;AAC6C;AAC7C;AACA;AAC8B;AAC9B;AACA;AACA;AACA,yBAAyB,oBAAoB,GAAG,qBAAqB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,QAAQ,mDAAE;AACV;AACA;AACO,uBAAuB,sDAAI;AAClC;AACA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,QAAQ;AACrB;AACA,sCAAsC;AACtC,cAAc,+DAAM,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mEAAQ;AAC7B,qBAAqB,mEAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gCAAgC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,kFAAkF,OAAO,EAAE,oBAAoB;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,OAAO,EAAE,iBAAiB;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,sBAAsB,EAAE,gCAAgC;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB,+DAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,0DAA0D,6DAAK;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA,SAAS;AACT;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,6DAAK;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,2BAA2B;AAC3B,YAAY,+EAA+E;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,+DAAM;AAC1B;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,uBAAuB,wDAAO;AAC9B;AACA;AACA;AACA,yDAAyD,KAAK;AAC9D;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,6DAA6D,uCAAuC;AACpG;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,iDAAiD,QAAQ;AACzD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,aAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sDAAO;;;;;;;;;;;ACh7B1B,+DAAe;AACf;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;ACJF;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+BAA+B,cAAc;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA,+BAA+B,oBAAoB;AACnD;;AAEA;AACA;;AAEA;AACA;AACA,2DAA2D,MAAM;;AAEjE;AACA;;AAEA;;AAEA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnLA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA,8CAA8C,KAAK;AACnD;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA,yDAAyD,EAAE,qBAAqB;;AAEhF,0FAA0F,KAAK;;AAE/F;AACA;AACA,2DAA2D,KAAK;;AAEhE;AACA;AACA;;AAEA,4BAA4B,kCAAkC;AAC9D,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACtJA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,8CAA8C,yBAAyB;AACvE;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC1JwD;AAClB;AACA;;AAE/B,kBAAkB,UAAU,yEAAM,uDAAM;;;;;;;;;;;;;;;;;;;;;ACJI;AACM;AACsB;;AAEjC;;AAEK;;AAEN;;AAE7C;AAC8B;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,oGAAoG,OAAO;AAC3G;AACA;AACA;AACA;;AAEA;AACA,QAAQ,mDAAE;AACV;;AAEA;AACA;;AAEA;AACA;;AAEA,uBAAuB,sDAAI;AAC3B;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,iCAAiC;AACjC;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL,UAAU,+DAAM,SAAS;;AAEzB;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB,eAAe;AACf;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,OAAO;AAC5C,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,wBAAwB,2DAAQ;AAChC;AACA,MAAM,+DAAM;AACZ;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,WAAW;;AAEX;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,WAAW;;AAEX;AACA,gEAAgE,KAAK;AACrE;AACA;AACA;AACA,WAAW;AACX,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,QAAQ,GAAG,YAAY;;AAE7D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,6BAA6B,2EAAkB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC;AACvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sCAAsC;AACtC,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA,wDAAwD,sCAAsC;AAC9F;;AAEA;AACA,MAAM;AACN,sBAAsB,MAAM;AAC5B;AACA;;AAEA;AACA,oCAAoC;AACpC,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,qEAAqE,2EAAkB;;AAEvF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,uEAAU;AAClB,QAAQ;AACR,QAAQ,uEAAU;AAClB;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA,UAAU,uEAAU;AACpB,UAAU;AACV,UAAU,uEAAU;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAS;AAClB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qDAAqD,iBAAiB,eAAe,IAAI;;AAEzF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,oBAAoB;AACjC,aAAa,QAAQ;AACrB;AACA,mCAAmC;AACnC;;AAEA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B,mBAAmB;;AAEjD;AACA;;AAEA;AACA,8BAA8B,uCAAuC;;AAErE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA,+DAA+D,iCAAiC;AAChG;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,OAAO;;AAE1D,kCAAkC,iBAAiB;AACnD;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,MAAM,uEAAU;AAChB;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,yCAAyC;AACjE,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,eAAe,QAAQ;AACvB;AACA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA,sCAAsC;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wEAAwE,iBAAiB;AACzF;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,IAAI;AAC1B,UAAU;AACV;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,+DAAM,GAAG;;AAEvB;AACA;AACA;;AAEA;AACA,oEAAoE,UAAU;;AAE9E;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wDAAwD,UAAU;AAClE,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM,+DAAM,GAAG;AACf;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,oCAAoC;AACpC;AACA;AACA;;AAEA,SAAS,iEAAS;AAClB;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,sDAAO;;AAE1B;AACA;;AAEA;AACA,iEAAiE;AACjE;AACA;AACA;AACA;;AAEoB;;;;;;;;;;;ACpkDpB,+DAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;AChB6D;;AAExD;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,YAAY,oBAAoB;;AAEhC;AACA;AACA;;AAEA;AACA;AACA,6DAA6D,KAAK;;AAElE;AACA,4DAA4D,iCAAiC;AAC7F;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oEAAoE,KAAK;;AAEzE;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,4DAA4D,iCAAiC;AAC7F;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,cAAc;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,QAAQ,iEAAS;AACjB;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3PyD;;AAEzD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,WAAW;AAC5B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,uGAAuG,QAAQ;AAC/G,iBAAiB,KAAK,UAAU,QAAQ;AACxC;AACA,GAAG;AACH;;AAEO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA,sCAAsC,UAAU,cAAc,EAAE,EAAE;AAClE;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mIAAmI,GAAG;AACtI;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,QAAQ,GAAG,OAAO;AAC9E,6DAA6D,QAAQ;AACrE;;AAEA;AACA,MAAM;AACN;AACA;;AAEA;AACA,oDAAoD,QAAQ,GAAG,OAAO;AACtE;;AAEA;AACA,MAAM;AACN;AACA,mCAAmC,IAAI,WAAW,EAAE;AACpD;AACA;AACA,mCAAmC,OAAO,OAAO;AACjD;AACA;AACA,2BAA2B,UAAU,8DAA8D;;AAEnG;AACA,MAAM,qDAAqD,IAAI,WAAW,EAAE;AAC5E,mCAAmC,OAAO,UAAU,oDAAoD;;AAExG;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;;AAEA;;AAEA;AACA,oBAAoB,+DAAM,GAAG;;AAE7B;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6BAA6B,OAAO,oBAAoB,iBAAiB,GAAG,YAAY;;AAExF;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN,uCAAuC,mBAAmB;AAC1D;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ,6DAA6D,gBAAgB,OAAO,gBAAgB;AACpG;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA,mDAAmD,YAAY,GAAG,YAAY;;AAE9E,6CAA6C;AAC7C;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,kCAAkC,cAAc;AAChD;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,kBAAkB,MAAM;AACxB,mBAAmB,OAAO;AAC1B,OAAO;AACP;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,+BAA+B,OAAO;;AAEtC;;AAEA;AACA,gCAAgC,mBAAmB;;AAEnD;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,OAAO;AACnC;;AAEA;AACA,6BAA6B,QAAQ;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,EAAE,KAAK,EAAE;AACjC,wBAAwB,QAAQ;AAChC,wBAAwB,QAAQ;AAChC;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AC/vByD;AACzD;AACsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,aAAa;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,gBAAgB;AACjG,sFAAsF,gBAAgB;AACtG;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAO;AAC/B;AACA,MAAM,+DAAM,+CAA+C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4BAA4B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,SAAS;AACT;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxrB4E;;AAErE;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,+DAA+D,gBAAgB;AAC/E,6DAA6D,gBAAgB;;AAE7E;AACA,qDAAqD,gBAAgB;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,uBAAuB;AACxC,kBAAkB,wBAAwB;AAC1C,iCAAiC,oBAAoB,MAAM,mBAAmB,eAAe,UAAU;AACvG;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,+EAAY;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS,+EAAY;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wDAAwD,gBAAgB;AACxE;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AC/JyD;AACA;;AAEzD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc;AACd;;AAEO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,wBAAwB,2DAAQ;AAChC;AACA,MAAM,+DAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6EAA6E,MAAM;AACnF,wCAAwC,sBAAsB;AAC9D,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC9NuE;AACd;AACzD;AACiE;AACF;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D,cAAc,cAAc;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,cAAc,0BAA0B;AACxC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,cAAc,0BAA0B;AACxC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2EAAkB;AAC9B,UAAU,8EAAqB;AAC/B,UAAU;AACV,UAAU,4EAAmB;AAC7B;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,cAAc,wCAAwC;AACtD,KAAK;AACL,GAAG;AACH;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,6EAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iEAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,2EAAkB;AACxE;AACA,UAAU,4EAAmB;AAC7B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,oBAAoB,+EAAsB,EAAE,+EAAsB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,EAAE,YAAY;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,6EAAa;AACvB;AACA,eAAe,+DAAM,GAAG;AACxB,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,eAAe;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACnhBwD;AACZ;AACN;AACG;AACH;AACS;;AAExC;AACP,YAAY;AACZ,QAAQ;AACR,MAAM;AACN,SAAS;AACT,OAAO;AACP,MAAM;AACN;;;;;;;;;;;;;;;;;;;;;;;ACdmD;AACF;AACc;;AAEI;AAC0B;;AAEd;;AAEyB;;AAE1D;;AAED;;AAE7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEO,sBAAsB,sDAAI;AACjC;AACA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,QAAQ;AACrB;AACA,sCAAsC;AACtC,UAAU,+DAAM,SAAS;;AAEzB;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;;AAEA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA,iBAAiB,8CAA8C;;AAE/D;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,4BAA4B,MAAM;AAClC;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB,MAAM;AAC5B;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8DAA8D,gBAAgB;AAC9E,8DAA8D,gBAAgB;;AAE9E;;AAEA,+BAA+B,2EAAc;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,2FAAoB;AAClE;AACA;AACA;;AAEA,YAAY,2EAAY;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,4EAAW;AACxC,4BAA4B,4EAAW;;AAEvC;AACA;;AAEA,6BAA6B,4EAAW;AACxC,4BAA4B,4EAAW;;AAEvC;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,6BAA6B,4EAAW;;AAExC;AACA;;AAEA,kBAAkB,iBAAiB;;AAEnC;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,6BAA6B;;AAE7B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,kCAAkC,gBAAgB;;AAElD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8BAA8B,2EAAc;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,YAAY,cAAc;;AAE1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,6BAA6B,4EAAY;AACzC,+BAA+B,6EAAa;;AAE5C;AACA,wBAAwB,MAAM;AAC9B,0BAA0B,OAAO;AACjC;AACA;AACA,KAAK;;AAEL;AACA,uCAAuC,uBAAuB;AAC9D;;AAEA;;AAEA,gBAAgB,6DAAK;AACrB,iBAAiB,6DAAK;;AAEtB;AACA;;AAEA;AACA;;AAEA;;AAEA,wDAAwD,6DAAK;AAC7D,0DAA0D,6DAAK;;AAE/D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,uFAAuB;AAC3C;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,6DAAK;AACrB,iBAAiB,6DAAK;AACtB;;AAEA;AACA,kBAAkB,MAAM;AACxB,mBAAmB,OAAO;AAC1B;AACA,OAAO;AACP;;AAEA;AACA,uCAAuC,UAAU,MAAM,gBAAgB,OAAO,KAAK;;AAEnF,wBAAwB;AACxB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ,mBAAmB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ,mBAAmB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,uBAAuB;AACvB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,6CAA6C,qBAAqB,IAAI;AACtE;;AAEA;AACA,yBAAyB,6DAAK;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,YAAY,iBAAiB;;AAE7B;AACA;;AAEA,iBAAiB,oDAAoD;AACrE;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,aAAa;AACb;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI;AACR;;AAEA;AACA,cAAc,iBAAiB;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;;AAEA,eAAe;AACf,eAAe;;AAEf;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,6DAAK;;AAE1B;AACA;AACA,MAAM;AACN,oBAAoB,6DAAK;AACzB;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN,oBAAoB,6DAAK;AACzB;;AAEA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,YAAY,iBAAiB;;AAE7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,iBAAiB;;AAE7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,6DAAK;AACf,UAAU,6DAAK;;AAEf;;AAEA,uBAAuB;AACvB,MAAM;AACN,UAAU,6DAAK;AACf,UAAU,6DAAK;;AAEf;;AAEA,uBAAuB;AACvB;;AAEA;;AAEA,QAAQ,6DAAK;AACb,QAAQ,6DAAK;;AAEb;AACA;AACA;;AAEA,cAAc,6DAAK;AACnB,eAAe,6DAAK;;AAEpB;AACA;;AAEA,yBAAyB;;AAEzB;AACA,kBAAkB,MAAM;AACxB,mBAAmB,OAAO;AAC1B;AACA;AACA,kCAAkC,EAAE,MAAM,EAAE;AAC5C,OAAO;AACP,MAAM;AACN,qDAAqD,EAAE,MAAM,EAAE,eAAe,MAAM;AACpF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iEAAiE,gBAAgB;AACjF,iEAAiE,gBAAgB;;AAEjF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,sDAAO;;;;;;;;;;;;;;ACntClB;;;;;;;;;;;;;;;;;ACAqC;AACE;AACY;;AAE1D;AACA;AACA;AACO;AACP;AACA;AACA,aAAa,QAAQ;AACrB;AACA,0BAA0B;AAC1B,mBAAmB,wDAAM,SAAS;;AAElC;AACA;;AAEA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,GAAG;AAChB,eAAe;AACf;AACA;AACA;AACA;;AAEA,gBAAgB,0DAAO;;AAEvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA,iCAAiC,EAAE,eAAe,EAAE;AACpD;;AAEA;AACA;AACA,6BAA6B,wCAAwC,QAAQ,OAAO;AACpF,QAAQ;AACR,kCAAkC,IAAI;AACtC;;AAEA;AACA;AACA;;AAEA,0BAA0B,uBAAuB;AACjD;AACA;;AAEA;AACA,KAAK;;AAEL,yBAAyB,EAAE,MAAM,EAAE;AACnC;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,eAAe;AACf;AACA;AACA,QAAQ,sEAAa;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,eAAe;AACf;AACA;AACA,QAAQ,sEAAa;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,eAAe;AACf;AACA;AACA,QAAQ,sEAAa;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,8CAA8C,SAAS;AACvD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;;AAEA,4DAA4D;AAC5D;AACA;AACA;AACA,4BAA4B,wDAAM,GAAG,uBAAuB;;AAE5D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mCAAmC;;AAEnC;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;;;AC7PO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,MAAM;AACN,sCAAsC;AACtC,MAAM;AACN,yCAAyC;AACzC,MAAM;AACN,qCAAqC;AACrC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mCAAmC,mBAAmB,IAAI;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,gBAAgB;AAC5E,gEAAgE,gBAAgB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,gBAAgB;AACtF,qEAAqE,gBAAgB;AACrF,8DAA8D,gBAAgB;AAC9E;AACA;AACA;AACA;AACA;AACA,yEAAyE,gBAAgB;AACzF,wEAAwE,gBAAgB;AACxF,iEAAiE,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACoD;;;;;;;;;;;;;;AC5JpD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;AC7DO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,aAAa;AAC/C,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,4CAA4C,MAAM;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;;;;;;;ACjGA;AACA;AACA;AACO;;;;;;;;;;;;;;;ACH4C;;AAEnD;AACA;AACA;AACA,YAAY,QAAQ;AACpB,aAAa;AACb;AACO;AACP;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;;AAEA;AACA;AACA;;AAEA,6CAA6C,gEAAa;AAC1D;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AC3CA;AACA;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;;AAEA,WAAW;AACX;;;;;;;;;;;;;;ACxCA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,eAAe;AAC1B,WAAW,eAAe;AAC1B,aAAa;AACb;AACO;AACP;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC5BA;AACA,iEAAiE;AACjE,WAAW,GAAG;AACd,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChBA;AACA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACjCA;AACA;AACA,+BAA+B,GAAG,GAAG,OAAO;AAC5C,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;ACXA;AACA,kBAAkB;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa;AACb;AACO;AACP;;AAEA;AACA;;;;;;;;;;;;;;;;ACV2C;AAC3C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,oDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,mBAAmB,qBAAqB;AACxC,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI;AACJ;;;;;;;;;;;;;;AC3DA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB,aAAa;AACb;AACO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;UCpBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;;;;;;;ACA9C;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAC,GAAG,GAAG,OAAOA,GAAP,KAAe,WAAf,GAA6B,EAA7B,GAAkCA,GAAxC;;AAEAA,GAAG,CAACC,KAAJ,GAAY,YAA6C;AAAA,MAA5CC,QAA4C,uEAAjC,iBAAiC;AAAA,MAAdC,IAAc,uEAAP,EAAO;AACxD,MAAMC,QAAQ,GAAG;AAChBC,IAAAA,QAAQ,EAAE,iGADM;AAEhBC,IAAAA,EAAE,EAAE;AACHC,MAAAA,IAAI,EAAE,cAACC,QAAD,EAAWC,KAAX,EAAqB;AAC1BC,QAAAA,OAAO,CAACC,GAAR,YAAgBF,KAAK,CAACG,KAAtB;AACAF,QAAAA,OAAO,CAACC,GAAR,mCAAuCH,QAAQ,CAACK,QAAT,GAAoBD,KAApB,KAA8BH,KAAK,CAACG,KAA3E;AACA;AAJE;AAFY,GAAjB;;AAUA,MAAI,CAACZ,GAAG,CAACc,OAAJ,CAAYX,IAAZ,CAAL,EAAwB;AACvBA,IAAAA,IAAI,GAAGH,GAAG,CAACe,YAAJ,CAAiBZ,IAAjB,EAAuBC,QAAvB,CAAP;AACA,GAFD,MAEO;AACND,IAAAA,IAAI,GAAGC,QAAP;AACA;;AAED,MAAI,CAACJ,GAAG,CAACc,OAAJ,CAAYZ,QAAZ,CAAL,EAA4B;AAC3B,QAAID,KAAK,GAAG,IAAIF,4EAAJ,CAAaG,QAAb,EAAuBC,IAAvB,CAAZ;AAEA,WAAOF,KAAP;AACA;AACD,CAtBD,C;;;;;;;ACXA","sources":["webpack:///../node_modules/@fancyapps/ui/src/Carousel/Carousel.js","webpack:///../node_modules/@fancyapps/ui/src/Carousel/l10n/en.js","webpack:///../node_modules/@fancyapps/ui/src/Carousel/plugins/Dots/Dots.js","webpack:///../node_modules/@fancyapps/ui/src/Carousel/plugins/Navigation/Navigation.js","webpack:///../node_modules/@fancyapps/ui/src/Carousel/plugins/Sync/Sync.js","webpack:///../node_modules/@fancyapps/ui/src/Carousel/plugins/index.js","webpack:///../node_modules/@fancyapps/ui/src/Fancybox/Fancybox.js","webpack:///../node_modules/@fancyapps/ui/src/Fancybox/l10n/en.js","webpack:///../node_modules/@fancyapps/ui/src/Fancybox/plugins/Hash/Hash.js","webpack:///../node_modules/@fancyapps/ui/src/Fancybox/plugins/Html/Html.js","webpack:///../node_modules/@fancyapps/ui/src/Fancybox/plugins/Image/Image.js","webpack:///../node_modules/@fancyapps/ui/src/Fancybox/plugins/ScrollLock/ScrollLock.js","webpack:///../node_modules/@fancyapps/ui/src/Fancybox/plugins/Thumbs/Thumbs.js","webpack:///../node_modules/@fancyapps/ui/src/Fancybox/plugins/Toolbar/Toolbar.js","webpack:///../node_modules/@fancyapps/ui/src/Fancybox/plugins/index.js","webpack:///../node_modules/@fancyapps/ui/src/Panzoom/Panzoom.js","webpack:///../node_modules/@fancyapps/ui/src/Panzoom/plugins/index.js","webpack:///../node_modules/@fancyapps/ui/src/shared/Base/Base.js","webpack:///../node_modules/@fancyapps/ui/src/shared/utils/Fullscreen.js","webpack:///../node_modules/@fancyapps/ui/src/shared/utils/PointerTracker.js","webpack:///../node_modules/@fancyapps/ui/src/shared/utils/ResizeObserver.js","webpack:///../node_modules/@fancyapps/ui/src/shared/utils/Slideshow.js","webpack:///../node_modules/@fancyapps/ui/src/shared/utils/canUseDOM.js","webpack:///../node_modules/@fancyapps/ui/src/shared/utils/extend.js","webpack:///../node_modules/@fancyapps/ui/src/shared/utils/getDimensions.js","webpack:///../node_modules/@fancyapps/ui/src/shared/utils/getTextNodeFromPoint.js","webpack:///../node_modules/@fancyapps/ui/src/shared/utils/isPlainObject.js","webpack:///../node_modules/@fancyapps/ui/src/shared/utils/isScrollable.js","webpack:///../node_modules/@fancyapps/ui/src/shared/utils/resolve.js","webpack:///../node_modules/@fancyapps/ui/src/shared/utils/round.js","webpack:///../node_modules/@fancyapps/ui/src/shared/utils/setFocusOn.js","webpack:///../node_modules/@fancyapps/ui/src/shared/utils/throttle.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./js/plugins/modal.js","webpack:///./css/plugins/modal.scss?4983"],"sourcesContent":["import { Base } from \"../shared/Base/Base.js\";\r\nimport { Panzoom } from \"../Panzoom/Panzoom.js\";\r\n\r\nimport { extend } from \"../shared/utils/extend.js\";\r\nimport { round } from \"../shared/utils/round.js\";\r\nimport { throttle } from \"../shared/utils/throttle.js\";\r\n\r\nimport { Plugins } from \"./plugins/index.js\";\r\n\r\n// Default language\r\nimport en from \"./l10n/en.js\";\r\n\r\nconst defaults = {\r\n  // Virtual slides. Each object should have at least `html` property that will be used to set content,\r\n  // example: `slides: [{html: 'First slide'}, {html: 'Second slide'}]`\r\n  slides: [],\r\n\r\n  // Number of slides to preload before/after visible slides\r\n  preload: 0,\r\n\r\n  // Number of slides to group into the page,\r\n  // if `auto` - group all slides that fit into the viewport\r\n  slidesPerPage: \"auto\",\r\n\r\n  // Index of initial page\r\n  initialPage: null,\r\n\r\n  // Index of initial slide\r\n  initialSlide: null,\r\n\r\n  // Panzoom friction while changing page\r\n  friction: 0.92,\r\n\r\n  // Should center active page\r\n  center: true,\r\n\r\n  // Should carousel scroll infinitely\r\n  infinite: true,\r\n\r\n  // Should the gap be filled before first and after last slide if `infinite: false`\r\n  fill: true,\r\n\r\n  // Should Carousel settle at any position after a swipe.\r\n  dragFree: false,\r\n\r\n  // Prefix for CSS classes, must be the same as the  SCSS `$carousel-prefix` variable\r\n  prefix: \"\",\r\n\r\n  // Class names for DOM elements (without prefix)\r\n  classNames: {\r\n    viewport: \"carousel__viewport\",\r\n    track: \"carousel__track\",\r\n    slide: \"carousel__slide\",\r\n\r\n    // Classname toggled for slides inside current page\r\n    slideSelected: \"is-selected\",\r\n  },\r\n\r\n  // Localization of strings\r\n  l10n: en,\r\n};\r\n\r\nexport class Carousel extends Base {\r\n  /**\r\n   * Carousel constructor\r\n   * @constructs Carousel\r\n   * @param {HTMLElement} $container - Carousel container\r\n   * @param {Object} [options] - Options for Carousel\r\n   */\r\n  constructor($container, options = {}) {\r\n    options = extend(true, {}, defaults, options);\r\n\r\n    super(options);\r\n\r\n    this.state = \"init\";\r\n\r\n    this.$container = $container;\r\n\r\n    if (!(this.$container instanceof HTMLElement)) {\r\n      throw new Error(\"No root element provided\");\r\n    }\r\n\r\n    this.slideNext = throttle(this.slideNext.bind(this), 250, true);\r\n    this.slidePrev = throttle(this.slidePrev.bind(this), 250, true);\r\n\r\n    this.init();\r\n\r\n    $container.__Carousel = this;\r\n  }\r\n\r\n  /**\r\n   * Perform initialization\r\n   */\r\n  init() {\r\n    this.pages = [];\r\n    this.page = this.pageIndex = null;\r\n    this.prevPage = this.prevPageIndex = null;\r\n\r\n    this.attachPlugins(Carousel.Plugins);\r\n\r\n    this.trigger(\"init\");\r\n\r\n    this.initLayout();\r\n\r\n    this.initSlides();\r\n\r\n    this.updateMetrics();\r\n\r\n    if (this.$track && this.pages.length) {\r\n      this.$track.style.transform = `translate3d(${this.pages[this.page].left * -1}px, 0px, 0) scale(1)`;\r\n    }\r\n\r\n    this.manageSlideVisiblity();\r\n\r\n    this.initPanzoom();\r\n\r\n    this.state = \"ready\";\r\n\r\n    this.trigger(\"ready\");\r\n  }\r\n\r\n  /**\r\n   * Initialize layout; create necessary elements\r\n   */\r\n  initLayout() {\r\n    const prefix = this.option(\"prefix\");\r\n    const classNames = this.option(\"classNames\");\r\n\r\n    this.$viewport = this.option(\"viewport\") || this.$container.querySelector(`.${prefix}${classNames.viewport}`);\r\n\r\n    if (!this.$viewport) {\r\n      this.$viewport = document.createElement(\"div\");\r\n      this.$viewport.classList.add(...(prefix + classNames.viewport).split(\" \"));\r\n\r\n      this.$viewport.append(...this.$container.childNodes);\r\n\r\n      this.$container.appendChild(this.$viewport);\r\n    }\r\n\r\n    this.$track = this.option(\"track\") || this.$container.querySelector(`.${prefix}${classNames.track}`);\r\n\r\n    if (!this.$track) {\r\n      this.$track = document.createElement(\"div\");\r\n      this.$track.classList.add(...(prefix + classNames.track).split(\" \"));\r\n\r\n      this.$track.append(...this.$viewport.childNodes);\r\n\r\n      this.$viewport.appendChild(this.$track);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fill `slides` array with objects from existing nodes and/or `slides` option\r\n   */\r\n  initSlides() {\r\n    this.slides = [];\r\n\r\n    // Get existing slides from the DOM\r\n    const elems = this.$viewport.querySelectorAll(`.${this.option(\"prefix\")}${this.option(\"classNames.slide\")}`);\r\n\r\n    elems.forEach((el) => {\r\n      const slide = {\r\n        $el: el,\r\n        isDom: true,\r\n      };\r\n\r\n      this.slides.push(slide);\r\n\r\n      this.trigger(\"createSlide\", slide, this.slides.length);\r\n    });\r\n\r\n    // Add virtual slides, but do not create DOM elements yet,\r\n    // because they will be created dynamically based on current carousel position\r\n    if (Array.isArray(this.options.slides)) {\r\n      this.slides = extend(true, [...this.slides], this.options.slides);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Do all calculations related to slide size and paging\r\n   */\r\n  updateMetrics() {\r\n    // Calculate content width, viewport width\r\n    // ===\r\n    let contentWidth = 0;\r\n    let indexes = [];\r\n    let lastSlideWidth;\r\n\r\n    this.slides.forEach((slide, index) => {\r\n      const $el = slide.$el;\r\n      const slideWidth = slide.isDom || !lastSlideWidth ? this.getSlideMetrics($el) : lastSlideWidth;\r\n\r\n      slide.index = index;\r\n      slide.width = slideWidth;\r\n      slide.left = contentWidth;\r\n\r\n      lastSlideWidth = slideWidth;\r\n      contentWidth += slideWidth;\r\n\r\n      indexes.push(index);\r\n    });\r\n\r\n    let viewportWidth = Math.max(this.$track.offsetWidth, round(this.$track.getBoundingClientRect().width));\r\n\r\n    let viewportStyles = getComputedStyle(this.$track);\r\n    viewportWidth = viewportWidth - (parseFloat(viewportStyles.paddingLeft) + parseFloat(viewportStyles.paddingRight));\r\n\r\n    this.contentWidth = contentWidth;\r\n    this.viewportWidth = viewportWidth;\r\n\r\n    // Split slides into pages\r\n    // ===\r\n    const pages = [];\r\n    const slidesPerPage = this.option(\"slidesPerPage\");\r\n\r\n    if (Number.isInteger(slidesPerPage) && contentWidth > viewportWidth) {\r\n      // Fixed number of slides in the page\r\n      for (let i = 0; i < this.slides.length; i += slidesPerPage) {\r\n        pages.push({\r\n          indexes: indexes.slice(i, i + slidesPerPage),\r\n          slides: this.slides.slice(i, i + slidesPerPage),\r\n        });\r\n      }\r\n    } else {\r\n      // Slides that fit inside viewport\r\n      let currentPage = 0;\r\n      let currentWidth = 0;\r\n\r\n      for (let i = 0; i < this.slides.length; i += 1) {\r\n        let slide = this.slides[i];\r\n\r\n        // Add next page\r\n        if (!pages.length || currentWidth + slide.width > viewportWidth) {\r\n          pages.push({\r\n            indexes: [],\r\n            slides: [],\r\n          });\r\n\r\n          currentPage = pages.length - 1;\r\n          currentWidth = 0;\r\n        }\r\n\r\n        currentWidth += slide.width;\r\n\r\n        pages[currentPage].indexes.push(i);\r\n        pages[currentPage].slides.push(slide);\r\n      }\r\n    }\r\n\r\n    const shouldCenter = this.option(\"center\");\r\n    const shouldFill = this.option(\"fill\");\r\n\r\n    // Calculate width and start position for each page\r\n    // ===\r\n    pages.forEach((page, index) => {\r\n      page.index = index;\r\n      page.width = page.slides.reduce((sum, slide) => sum + slide.width, 0);\r\n\r\n      page.left = page.slides[0].left;\r\n\r\n      if (shouldCenter) {\r\n        page.left += (viewportWidth - page.width) * 0.5 * -1;\r\n      }\r\n\r\n      if (shouldFill && !this.option(\"infiniteX\", this.option(\"infinite\")) && contentWidth > viewportWidth) {\r\n        page.left = Math.max(page.left, 0);\r\n        page.left = Math.min(page.left, contentWidth - viewportWidth);\r\n      }\r\n    });\r\n\r\n    // Merge pages\r\n    // ===\r\n    const rez = [];\r\n    let prevPage;\r\n\r\n    pages.forEach((page2) => {\r\n      const page = { ...page2 };\r\n\r\n      if (prevPage && page.left === prevPage.left) {\r\n        prevPage.width += page.width;\r\n\r\n        prevPage.slides = [...prevPage.slides, ...page.slides];\r\n        prevPage.indexes = [...prevPage.indexes, ...page.indexes];\r\n      } else {\r\n        page.index = rez.length;\r\n\r\n        prevPage = page;\r\n\r\n        rez.push(page);\r\n      }\r\n    });\r\n\r\n    this.pages = rez;\r\n\r\n    let page = this.page;\r\n\r\n    if (page === null) {\r\n      const initialSlide = this.option(\"initialSlide\");\r\n\r\n      if (initialSlide !== null) {\r\n        page = this.findPageForSlide(initialSlide);\r\n      } else {\r\n        page = parseInt(this.option(\"initialPage\", 0), 10) || 0;\r\n      }\r\n\r\n      if (!rez[page]) {\r\n        page = rez.length && page > rez.length ? rez[rez.length - 1].index : 0;\r\n      }\r\n\r\n      this.page = page;\r\n      this.pageIndex = page;\r\n    }\r\n\r\n    this.updatePanzoom();\r\n\r\n    this.trigger(\"refresh\");\r\n  }\r\n\r\n  /**\r\n   * Calculate slide element width (including left, right margins)\r\n   * @param {Object} node\r\n   * @returns {Number} Width in px\r\n   */\r\n  getSlideMetrics(node) {\r\n    if (!node) {\r\n      const firstSlide = this.slides[0];\r\n\r\n      node = document.createElement(\"div\");\r\n\r\n      node.dataset.isTestEl = 1;\r\n      node.style.visibility = \"hidden\";\r\n      node.classList.add(...(this.option(\"prefix\") + this.option(\"classNames.slide\")).split(\" \"));\r\n\r\n      // Assume all slides have the same custom class, if any\r\n      if (firstSlide.customClass) {\r\n        node.classList.add(...firstSlide.customClass.split(\" \"));\r\n      }\r\n\r\n      this.$track.prepend(node);\r\n    }\r\n\r\n    let width = Math.max(node.offsetWidth, round(node.getBoundingClientRect().width));\r\n\r\n    // Add left/right margin\r\n    const style = node.currentStyle || window.getComputedStyle(node);\r\n    width = width + (parseFloat(style.marginLeft) || 0) + (parseFloat(style.marginRight) || 0);\r\n\r\n    if (node.dataset.isTestEl) {\r\n      node.remove();\r\n    }\r\n\r\n    return width;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Integer} index Index of the slide\r\n   * @returns {Integer|null} Index of the page if found, or null\r\n   */\r\n  findPageForSlide(index) {\r\n    index = parseInt(index, 10) || 0;\r\n\r\n    const page = this.pages.find((page) => {\r\n      return page.indexes.indexOf(index) > -1;\r\n    });\r\n\r\n    return page ? page.index : null;\r\n  }\r\n\r\n  /**\r\n   * Slide to next page, if possible\r\n   */\r\n  slideNext() {\r\n    this.slideTo(this.pageIndex + 1);\r\n  }\r\n\r\n  /**\r\n   * Slide to previous page, if possible\r\n   */\r\n  slidePrev() {\r\n    this.slideTo(this.pageIndex - 1);\r\n  }\r\n\r\n  /**\r\n   * Slides carousel to given page\r\n   * @param {Number} page - New index of active page\r\n   * @param {Object} [params] - Additional options\r\n   */\r\n  slideTo(page, params = {}) {\r\n    const { x = this.setPage(page, true) * -1, y = 0, friction = this.option(\"friction\") } = params;\r\n\r\n    if (this.Panzoom.content.x === x && !this.Panzoom.velocity.x && friction) {\r\n      return;\r\n    }\r\n\r\n    this.Panzoom.panTo({\r\n      x,\r\n      y,\r\n      friction,\r\n      ignoreBounds: true,\r\n    });\r\n\r\n    if (this.state === \"ready\" && this.Panzoom.state === \"ready\") {\r\n      this.trigger(\"settle\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialise main Panzoom instance\r\n   */\r\n  initPanzoom() {\r\n    if (this.Panzoom) {\r\n      this.Panzoom.destroy();\r\n    }\r\n\r\n    // Create fresh object containing options for Pazoom instance\r\n    const options = extend(\r\n      true,\r\n      {},\r\n      {\r\n        // Track element will be set as Panzoom $content\r\n        content: this.$track,\r\n        wrapInner: false,\r\n        resizeParent: false,\r\n\r\n        // Disable any user interaction\r\n        zoom: false,\r\n        click: false,\r\n\r\n        // Right now, only horizontal navigation is supported\r\n        lockAxis: \"x\",\r\n\r\n        x: this.pages.length ? this.pages[this.page].left * -1 : 0,\r\n        centerOnStart: false,\r\n\r\n        // Make `textSelection` option more easy to customize\r\n        textSelection: () => this.option(\"textSelection\", false),\r\n\r\n        // Disable dragging if content (e.g. all slides) fits inside viewport\r\n        panOnlyZoomed: function () {\r\n          return this.content.width <= this.viewport.width;\r\n        },\r\n      },\r\n      this.option(\"Panzoom\")\r\n    );\r\n\r\n    // Create new Panzoom instance\r\n    this.Panzoom = new Panzoom(this.$container, options);\r\n\r\n    this.Panzoom.on({\r\n      // Bubble events\r\n      \"*\": (name, ...details) => this.trigger(`Panzoom.${name}`, ...details),\r\n      // The rest of events to be processed\r\n      afterUpdate: () => {\r\n        this.updatePage();\r\n      },\r\n      beforeTransform: this.onBeforeTransform.bind(this),\r\n      touchEnd: this.onTouchEnd.bind(this),\r\n      endAnimation: () => {\r\n        this.trigger(\"settle\");\r\n      },\r\n    });\r\n\r\n    // The contents of the slides may cause the page scroll bar to appear, so the carousel width may change\r\n    // and slides have to be repositioned\r\n    this.updateMetrics();\r\n    this.manageSlideVisiblity();\r\n  }\r\n\r\n  updatePanzoom() {\r\n    if (!this.Panzoom) {\r\n      return;\r\n    }\r\n\r\n    this.Panzoom.content = {\r\n      ...this.Panzoom.content,\r\n      fitWidth: this.contentWidth,\r\n      origWidth: this.contentWidth,\r\n      width: this.contentWidth,\r\n    };\r\n\r\n    if (this.pages.length > 1 && this.option(\"infiniteX\", this.option(\"infinite\"))) {\r\n      this.Panzoom.boundX = null;\r\n    } else if (this.pages.length) {\r\n      this.Panzoom.boundX = {\r\n        from: this.pages[this.pages.length - 1].left * -1,\r\n        to: this.pages[0].left * -1,\r\n      };\r\n    }\r\n\r\n    if (this.option(\"infiniteY\", this.option(\"infinite\"))) {\r\n      this.Panzoom.boundY = null;\r\n    } else {\r\n      this.Panzoom.boundY = {\r\n        from: 0,\r\n        to: 0,\r\n      };\r\n    }\r\n\r\n    this.Panzoom.handleCursor();\r\n  }\r\n\r\n  manageSlideVisiblity() {\r\n    const contentWidth = this.contentWidth;\r\n    const viewportWidth = this.viewportWidth;\r\n\r\n    let currentX = this.Panzoom ? this.Panzoom.content.x * -1 : this.pages.length ? this.pages[this.page].left : 0;\r\n\r\n    const preload = this.option(\"preload\");\r\n    const infinite = this.option(\"infiniteX\", this.option(\"infinite\"));\r\n\r\n    const paddingLeft = parseFloat(getComputedStyle(this.$viewport, null).getPropertyValue(\"padding-left\"));\r\n    const paddingRight = parseFloat(getComputedStyle(this.$viewport, null).getPropertyValue(\"padding-right\"));\r\n\r\n    // Check visibility of each slide\r\n    this.slides.forEach((slide) => {\r\n      let leftBoundary, rightBoundary;\r\n\r\n      let hasDiff = 0;\r\n\r\n      // #1 - slides in current viewport; this does not include infinite items\r\n      leftBoundary = currentX - paddingLeft;\r\n      rightBoundary = currentX + viewportWidth + paddingRight;\r\n\r\n      leftBoundary -= preload * (viewportWidth + paddingLeft + paddingRight);\r\n      rightBoundary += preload * (viewportWidth + paddingLeft + paddingRight);\r\n\r\n      const insideCurrentInterval = slide.left + slide.width > leftBoundary && slide.left < rightBoundary;\r\n\r\n      // #2 - infinite items inside current viewport; from previous interval\r\n      leftBoundary = currentX + contentWidth - paddingLeft;\r\n      rightBoundary = currentX + contentWidth + viewportWidth + paddingRight;\r\n\r\n      // Include slides that have to be preloaded\r\n      leftBoundary -= preload * (viewportWidth + paddingLeft + paddingRight);\r\n\r\n      const insidePrevInterval = infinite && slide.left + slide.width > leftBoundary && slide.left < rightBoundary;\r\n\r\n      // #2 - infinite items inside current viewport; from next interval\r\n      leftBoundary = currentX - contentWidth - paddingLeft;\r\n      rightBoundary = currentX - contentWidth + viewportWidth + paddingRight;\r\n\r\n      // Include slides that have to be preloaded\r\n      leftBoundary -= preload * (viewportWidth + paddingLeft + paddingRight);\r\n\r\n      const insideNextInterval = infinite && slide.left + slide.width > leftBoundary && slide.left < rightBoundary;\r\n\r\n      // Create virtual slides that should be visible or preloaded, remove others\r\n      if (insidePrevInterval || insideCurrentInterval || insideNextInterval) {\r\n        this.createSlideEl(slide);\r\n\r\n        if (insideCurrentInterval) {\r\n          hasDiff = 0;\r\n        }\r\n\r\n        if (insidePrevInterval) {\r\n          hasDiff = -1;\r\n        }\r\n\r\n        if (insideNextInterval) {\r\n          hasDiff = 1;\r\n        }\r\n\r\n        // Bring preloaded slides back to viewport, if needed\r\n        if (slide.left + slide.width > currentX && slide.left <= currentX + viewportWidth + paddingRight) {\r\n          hasDiff = 0;\r\n        }\r\n      } else {\r\n        this.removeSlideEl(slide);\r\n      }\r\n\r\n      slide.hasDiff = hasDiff;\r\n    });\r\n\r\n    // Reposition slides for continuity\r\n    let nextIndex = 0;\r\n    let nextPos = 0;\r\n\r\n    this.slides.forEach((slide, index) => {\r\n      let updatedX = 0;\r\n\r\n      if (slide.$el) {\r\n        if (index !== nextIndex || slide.hasDiff) {\r\n          updatedX = nextPos + slide.hasDiff * contentWidth;\r\n        } else {\r\n          nextPos = 0;\r\n        }\r\n\r\n        slide.$el.style.left = Math.abs(updatedX) > 0.1 ? `${nextPos + slide.hasDiff * contentWidth}px` : \"\";\r\n\r\n        nextIndex++;\r\n      } else {\r\n        nextPos += slide.width;\r\n      }\r\n    });\r\n\r\n    this.markSelectedSlides();\r\n  }\r\n\r\n  /**\r\n   * Creates main DOM element for virtual slides,\r\n   * lazy loads images inside regular slides\r\n   * @param {Object} slide\r\n   */\r\n  createSlideEl(slide) {\r\n    if (!slide) {\r\n      return;\r\n    }\r\n\r\n    if (slide.$el) {\r\n      let curentIndex = slide.$el.dataset.index;\r\n\r\n      if (!curentIndex || parseInt(curentIndex, 10) !== slide.index) {\r\n        slide.$el.dataset.index = slide.index;\r\n\r\n        // Lazy load images\r\n        // ===\r\n        slide.$el.querySelectorAll(\"[data-lazy-srcset]\").forEach((node) => {\r\n          node.srcset = node.dataset.lazySrcset;\r\n        });\r\n\r\n        slide.$el.querySelectorAll(\"[data-lazy-src]\").forEach((node) => {\r\n          let lazySrc = node.dataset.lazySrc;\r\n\r\n          if (node instanceof HTMLImageElement) {\r\n            node.src = lazySrc;\r\n          } else {\r\n            node.style.backgroundImage = `url('${lazySrc}')`;\r\n          }\r\n        });\r\n\r\n        // Lazy load slide background image\r\n        // ===\r\n        let lazySrc;\r\n\r\n        if ((lazySrc = slide.$el.dataset.lazySrc)) {\r\n          slide.$el.style.backgroundImage = `url('${lazySrc}')`;\r\n        }\r\n\r\n        slide.state = \"ready\";\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    const div = document.createElement(\"div\");\r\n\r\n    div.dataset.index = slide.index;\r\n    div.classList.add(...(this.option(\"prefix\") + this.option(\"classNames.slide\")).split(\" \"));\r\n\r\n    if (slide.customClass) {\r\n      div.classList.add(...slide.customClass.split(\" \"));\r\n    }\r\n\r\n    if (slide.html) {\r\n      div.innerHTML = slide.html;\r\n    }\r\n\r\n    const allElelements = [];\r\n\r\n    this.slides.forEach((slide, index) => {\r\n      if (slide.$el) {\r\n        allElelements.push(index);\r\n      }\r\n    });\r\n\r\n    // Find a place in DOM to insert an element\r\n    const goal = slide.index;\r\n    let refSlide = null;\r\n\r\n    if (allElelements.length) {\r\n      let refIndex = allElelements.reduce((prev, curr) =>\r\n        Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev\r\n      );\r\n      refSlide = this.slides[refIndex];\r\n    }\r\n\r\n    this.$track.insertBefore(\r\n      div,\r\n      refSlide && refSlide.$el ? (refSlide.index < slide.index ? refSlide.$el.nextSibling : refSlide.$el) : null\r\n    );\r\n\r\n    slide.$el = div;\r\n\r\n    this.trigger(\"createSlide\", slide, goal);\r\n\r\n    return slide;\r\n  }\r\n\r\n  /**\r\n   * Removes main DOM element of given slide\r\n   * @param {Object} slide\r\n   */\r\n  removeSlideEl(slide) {\r\n    if (slide.$el && !slide.isDom) {\r\n      this.trigger(\"removeSlide\", slide);\r\n\r\n      slide.$el.remove();\r\n      slide.$el = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles selected class name and aria-hidden attribute for slides based on visibility\r\n   */\r\n  markSelectedSlides() {\r\n    const selectedClass = this.option(\"classNames.slideSelected\");\r\n    const attr = \"aria-hidden\";\r\n\r\n    this.slides.forEach((slide, index) => {\r\n      const $el = slide.$el;\r\n\r\n      if (!$el) {\r\n        return;\r\n      }\r\n\r\n      const page = this.pages[this.page];\r\n\r\n      if (page && page.indexes && page.indexes.indexOf(index) > -1) {\r\n        if (selectedClass && !$el.classList.contains(selectedClass)) {\r\n          $el.classList.add(selectedClass);\r\n          this.trigger(\"selectSlide\", slide);\r\n        }\r\n\r\n        $el.removeAttribute(attr);\r\n      } else {\r\n        if (selectedClass && $el.classList.contains(selectedClass)) {\r\n          $el.classList.remove(selectedClass);\r\n          this.trigger(\"unselectSlide\", slide);\r\n        }\r\n\r\n        $el.setAttribute(attr, true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Perform all calculations and center current page\r\n   */\r\n  updatePage() {\r\n    this.updateMetrics();\r\n\r\n    this.slideTo(this.page, { friction: 0 });\r\n  }\r\n\r\n  /**\r\n   * Process `Panzoom.beforeTransform` event to remove slides moved out of viewport and\r\n   * to create necessary ones\r\n   */\r\n  onBeforeTransform() {\r\n    if (this.option(\"infiniteX\", this.option(\"infinite\"))) {\r\n      this.manageInfiniteTrack();\r\n    }\r\n\r\n    this.manageSlideVisiblity();\r\n  }\r\n\r\n  /**\r\n   * Seamlessly flip position of infinite carousel, if needed; this way x position stays low\r\n   */\r\n  manageInfiniteTrack() {\r\n    const contentWidth = this.contentWidth;\r\n    const viewportWidth = this.viewportWidth;\r\n\r\n    if (!this.option(\"infiniteX\", this.option(\"infinite\")) || this.pages.length < 2 || contentWidth < viewportWidth) {\r\n      return;\r\n    }\r\n\r\n    const panzoom = this.Panzoom;\r\n\r\n    let isFlipped = false;\r\n\r\n    if (panzoom.content.x < (contentWidth - viewportWidth) * -1) {\r\n      panzoom.content.x += contentWidth;\r\n\r\n      this.pageIndex = this.pageIndex - this.pages.length;\r\n\r\n      isFlipped = true;\r\n    }\r\n\r\n    if (panzoom.content.x > viewportWidth) {\r\n      panzoom.content.x -= contentWidth;\r\n\r\n      this.pageIndex = this.pageIndex + this.pages.length;\r\n\r\n      isFlipped = true;\r\n    }\r\n\r\n    if (isFlipped && panzoom.state === \"pointerdown\") {\r\n      panzoom.resetDragPosition();\r\n    }\r\n\r\n    return isFlipped;\r\n  }\r\n\r\n  /**\r\n   * Process `Panzoom.touchEnd` event; slide to next/prev page if needed\r\n   * @param {object} panzoom\r\n   */\r\n  onTouchEnd(panzoom, event) {\r\n    const dragFree = this.option(\"dragFree\");\r\n\r\n    // If this is a quick horizontal flick, slide to next/prev slide\r\n    if (\r\n      !dragFree &&\r\n      this.pages.length > 1 &&\r\n      panzoom.dragOffset.time < 350 &&\r\n      Math.abs(panzoom.dragOffset.y) < 1 &&\r\n      Math.abs(panzoom.dragOffset.x) > 5\r\n    ) {\r\n      this[panzoom.dragOffset.x < 0 ? \"slideNext\" : \"slidePrev\"]();\r\n      return;\r\n    }\r\n\r\n    // Set the slide at the end of the animation as the current one,\r\n    // or slide to closest page\r\n    if (dragFree) {\r\n      const [, nextPageIndex] = this.getPageFromPosition(panzoom.transform.x * -1);\r\n      this.setPage(nextPageIndex);\r\n    } else {\r\n      this.slideToClosest();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Slides to the closest page (useful, if carousel is changed manually)\r\n   * @param {Object} [params] - Object containing additional options\r\n   */\r\n  slideToClosest(params = {}) {\r\n    let [, nextPageIndex] = this.getPageFromPosition(this.Panzoom.content.x * -1);\r\n\r\n    this.slideTo(nextPageIndex, params);\r\n  }\r\n\r\n  /**\r\n   * Returns index of closest page to given x position\r\n   * @param {Number} xPos\r\n   */\r\n  getPageFromPosition(xPos) {\r\n    const pageCount = this.pages.length;\r\n    const center = this.option(\"center\");\r\n\r\n    if (center) {\r\n      xPos += this.viewportWidth * 0.5;\r\n    }\r\n\r\n    const interval = Math.floor(xPos / this.contentWidth);\r\n\r\n    xPos -= interval * this.contentWidth;\r\n\r\n    let slide = this.slides.find((slide) => slide.left <= xPos && slide.left + slide.width > xPos);\r\n\r\n    if (slide) {\r\n      let pageIndex = this.findPageForSlide(slide.index);\r\n\r\n      return [pageIndex, pageIndex + interval * pageCount];\r\n    }\r\n\r\n    return [0, 0];\r\n  }\r\n\r\n  /**\r\n   * Changes active page\r\n   * @param {Number} page - New index of active page\r\n   * @param {Boolean} toClosest - to closest page based on scroll distance (for infinite navigation)\r\n   */\r\n  setPage(page, toClosest) {\r\n    let nextPosition = 0;\r\n    let pageIndex = parseInt(page, 10) || 0;\r\n\r\n    const prevPage = this.page,\r\n      prevPageIndex = this.pageIndex,\r\n      pageCount = this.pages.length;\r\n\r\n    const contentWidth = this.contentWidth;\r\n    const viewportWidth = this.viewportWidth;\r\n\r\n    page = ((pageIndex % pageCount) + pageCount) % pageCount;\r\n\r\n    if (this.option(\"infiniteX\", this.option(\"infinite\")) && contentWidth > viewportWidth) {\r\n      const nextInterval = Math.floor(pageIndex / pageCount) || 0,\r\n        elemDimWidth = contentWidth;\r\n\r\n      nextPosition = this.pages[page].left + nextInterval * elemDimWidth;\r\n\r\n      if (toClosest === true && pageCount > 2) {\r\n        let currPosition = this.Panzoom.content.x * -1;\r\n\r\n        // * Find closest interval\r\n        const decreasedPosition = nextPosition - elemDimWidth,\r\n          increasedPosition = nextPosition + elemDimWidth,\r\n          diff1 = Math.abs(currPosition - nextPosition),\r\n          diff2 = Math.abs(currPosition - decreasedPosition),\r\n          diff3 = Math.abs(currPosition - increasedPosition);\r\n\r\n        if (diff3 < diff1 && diff3 <= diff2) {\r\n          nextPosition = increasedPosition;\r\n          pageIndex += pageCount;\r\n        } else if (diff2 < diff1 && diff2 < diff3) {\r\n          nextPosition = decreasedPosition;\r\n          pageIndex -= pageCount;\r\n        }\r\n      }\r\n    } else {\r\n      page = pageIndex = Math.max(0, Math.min(pageIndex, pageCount - 1));\r\n\r\n      nextPosition = this.pages.length ? this.pages[page].left : 0;\r\n    }\r\n\r\n    this.page = page;\r\n    this.pageIndex = pageIndex;\r\n\r\n    if (prevPage !== null && page !== prevPage) {\r\n      this.prevPage = prevPage;\r\n      this.prevPageIndex = prevPageIndex;\r\n\r\n      this.trigger(\"change\", page, prevPage);\r\n    }\r\n\r\n    return nextPosition;\r\n  }\r\n\r\n  /**\r\n   * Clean up\r\n   */\r\n  destroy() {\r\n    this.state = \"destroy\";\r\n\r\n    this.slides.forEach((slide) => {\r\n      this.removeSlideEl(slide);\r\n    });\r\n\r\n    this.slides = [];\r\n\r\n    this.Panzoom.destroy();\r\n\r\n    this.detachPlugins();\r\n  }\r\n}\r\n\r\n// Expose version\r\nCarousel.version = \"__VERSION__\";\r\n\r\n// Static properties are a recent addition that dont work in all browsers yet\r\nCarousel.Plugins = Plugins;\r\n","export default {\r\n  NEXT: \"Next slide\",\r\n  PREV: \"Previous slide\",\r\n  GOTO: \"Go to slide #%d\",\r\n};\r\n","const defaults = {\n  // The minimum number of slides to display dots\n  minSlideCount: 2,\n};\n\nexport class Dots {\n  constructor(carousel) {\n    this.carousel = carousel;\n\n    this.$list = null;\n\n    this.events = {\n      change: this.onChange.bind(this),\n      refresh: this.onRefresh.bind(this),\n    };\n  }\n\n  /**\n   * Build wrapping DOM element containing all dots\n   */\n  buildList() {\n    if (this.carousel.pages.length < this.carousel.option(\"Dots.minSlideCount\")) {\n      return;\n    }\n\n    const $list = document.createElement(\"ol\");\n\n    $list.classList.add(\"carousel__dots\");\n\n    $list.addEventListener(\"click\", (e) => {\n      if (!(\"page\" in e.target.dataset)) {\n        return;\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n\n      const page = parseInt(e.target.dataset.page, 10);\n      const carousel = this.carousel;\n\n      if (page === carousel.page) {\n        return;\n      }\n\n      if (carousel.pages.length < 3 && carousel.option(\"infinite\")) {\n        carousel[page == 0 ? \"slidePrev\" : \"slideNext\"]();\n      } else {\n        carousel.slideTo(page);\n      }\n    });\n\n    this.$list = $list;\n\n    this.carousel.$container.appendChild($list);\n    this.carousel.$container.classList.add(\"has-dots\");\n\n    return $list;\n  }\n\n  /**\n   * Remove wrapping DOM element\n   */\n  removeList() {\n    if (this.$list) {\n      this.$list.parentNode.removeChild(this.$list);\n      this.$list = null;\n    }\n\n    this.carousel.$container.classList.remove(\"has-dots\");\n  }\n\n  /**\n   * Remove existing dots and create fresh ones\n   */\n  rebuildDots() {\n    let $list = this.$list;\n\n    const listExists = !!$list;\n    const pagesCount = this.carousel.pages.length;\n\n    if (pagesCount < 2) {\n      if (listExists) {\n        this.removeList();\n      }\n\n      return;\n    }\n\n    if (!listExists) {\n      $list = this.buildList();\n    }\n\n    // Remove existing dots\n    const dotCount = this.$list.children.length;\n\n    if (dotCount > pagesCount) {\n      for (let i = pagesCount; i < dotCount; i++) {\n        this.$list.removeChild(this.$list.lastChild);\n      }\n\n      return;\n    }\n\n    // Create fresh DOM elements (dots) for each page\n    for (let index = dotCount; index < pagesCount; index++) {\n      const $dot = document.createElement(\"li\");\n\n      $dot.classList.add(\"carousel__dot\");\n      $dot.dataset.page = index;\n\n      $dot.setAttribute(\"role\", \"button\");\n      $dot.setAttribute(\"tabindex\", \"0\");\n      $dot.setAttribute(\"title\", this.carousel.localize(\"{{GOTO}}\", [[\"%d\", index + 1]]));\n\n      $dot.addEventListener(\"keydown\", (event) => {\n        const code = event.code;\n\n        let $el;\n\n        if (code === \"Enter\" || code === \"NumpadEnter\") {\n          $el = $dot;\n        } else if (code === \"ArrowRight\") {\n          $el = $dot.nextSibling;\n        } else if (code === \"ArrowLeft\") {\n          $el = $dot.previousSibling;\n        }\n\n        $el && $el.click();\n      });\n\n      this.$list.appendChild($dot);\n    }\n\n    this.setActiveDot();\n  }\n\n  /**\n   * Mark active dot by toggling class name\n   */\n  setActiveDot() {\n    if (!this.$list) {\n      return;\n    }\n\n    this.$list.childNodes.forEach(($dot) => {\n      $dot.classList.remove(\"is-selected\");\n    });\n\n    const $activeDot = this.$list.childNodes[this.carousel.page];\n\n    if ($activeDot) {\n      $activeDot.classList.add(\"is-selected\");\n    }\n  }\n\n  /**\n   * Process carousel `change` event\n   */\n  onChange() {\n    this.setActiveDot();\n  }\n\n  /**\n   * Process carousel `refresh` event\n   */\n  onRefresh() {\n    this.rebuildDots();\n  }\n\n  attach() {\n    this.carousel.on(this.events);\n  }\n\n  detach() {\n    this.removeList();\n\n    this.carousel.off(this.events);\n    this.carousel = null;\n  }\n}\n","const defaults = {\n  prevTpl: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" tabindex=\"-1\"><path d=\"M15 3l-9 9 9 9\"/></svg>',\n  nextTpl: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" tabindex=\"-1\"><path d=\"M9 3l9 9-9 9\"/></svg>',\n\n  classNames: {\n    main: \"carousel__nav\",\n    button: \"carousel__button\",\n\n    next: \"is-next\",\n    prev: \"is-prev\",\n  },\n};\n\nexport class Navigation {\n  constructor(carousel) {\n    this.$container = null;\n\n    this.$prev = null;\n    this.$next = null;\n\n    this.carousel = carousel;\n\n    this.onRefresh = this.onRefresh.bind(this);\n  }\n\n  /**\n   * Shortcut to get option for this plugin\n   * @param {String} name option name\n   * @returns option value\n   */\n  option(name) {\n    return this.carousel.option(`Navigation.${name}`);\n  }\n\n  /**\n   * Creates and returns new button element with default class names and click event\n   * @param {String} type\n   */\n  createButton(type) {\n    const $btn = document.createElement(\"button\");\n\n    $btn.setAttribute(\"title\", this.carousel.localize(`{{${type.toUpperCase()}}}`));\n\n    const classNames = this.option(\"classNames.button\") + \" \" + this.option(`classNames.${type}`);\n\n    $btn.classList.add(...classNames.split(\" \"));\n    $btn.setAttribute(\"tabindex\", \"0\");\n    $btn.innerHTML = this.carousel.localize(this.option(`${type}Tpl`));\n\n    $btn.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.carousel[`slide${type === \"next\" ? \"Next\" : \"Prev\"}`]();\n    });\n\n    return $btn;\n  }\n\n  /**\n   * Build necessary DOM elements\n   */\n  build() {\n    if (!this.$container) {\n      this.$container = document.createElement(\"div\");\n      this.$container.classList.add(...this.option(\"classNames.main\").split(\" \"));\n\n      this.carousel.$container.appendChild(this.$container);\n    }\n\n    if (!this.$next) {\n      this.$next = this.createButton(\"next\");\n\n      this.$container.appendChild(this.$next);\n    }\n\n    if (!this.$prev) {\n      this.$prev = this.createButton(\"prev\");\n\n      this.$container.appendChild(this.$prev);\n    }\n  }\n\n  /**\n   *  Process carousel `refresh` and `change` events to enable/disable buttons if needed\n   */\n  onRefresh() {\n    const pageCount = this.carousel.pages.length;\n\n    if (\n      pageCount <= 1 ||\n      (pageCount > 1 &&\n        this.carousel.elemDimWidth < this.carousel.wrapDimWidth &&\n        !Number.isInteger(this.carousel.option(\"slidesPerPage\")))\n    ) {\n      this.cleanup();\n\n      return;\n    }\n\n    this.build();\n\n    this.$prev.removeAttribute(\"disabled\");\n    this.$next.removeAttribute(\"disabled\");\n\n    if (this.carousel.option(\"infiniteX\", this.carousel.option(\"infinite\"))) {\n      return;\n    }\n\n    if (this.carousel.page <= 0) {\n      this.$prev.setAttribute(\"disabled\", \"\");\n    }\n\n    if (this.carousel.page >= pageCount - 1) {\n      this.$next.setAttribute(\"disabled\", \"\");\n    }\n  }\n\n  cleanup() {\n    if (this.$prev) {\n      this.$prev.remove();\n    }\n\n    this.$prev = null;\n\n    if (this.$next) {\n      this.$next.remove();\n    }\n\n    this.$next = null;\n\n    if (this.$container) {\n      this.$container.remove();\n    }\n\n    this.$container = null;\n  }\n\n  attach() {\n    this.carousel.on(\"refresh change\", this.onRefresh);\n  }\n\n  detach() {\n    this.carousel.off(\"refresh change\", this.onRefresh);\n\n    this.cleanup();\n  }\n}\n\n// Expose defaults\nNavigation.defaults = defaults;\n","const defaults = {\n  friction: 0.92,\n};\n\nexport class Sync {\n  constructor(carousel) {\n    this.carousel = carousel;\n\n    this.selectedIndex = null;\n    this.friction = 0;\n\n    this.onNavReady = this.onNavReady.bind(this);\n    this.onNavClick = this.onNavClick.bind(this);\n    this.onNavCreateSlide = this.onNavCreateSlide.bind(this);\n\n    this.onTargetChange = this.onTargetChange.bind(this);\n  }\n\n  /**\n   * Make this one as main carousel and selected carousel as navigation\n   * @param {Object} nav Carousel\n   */\n  addAsTargetFor(nav) {\n    this.target = this.carousel;\n    this.nav = nav;\n\n    this.attachEvents();\n  }\n\n  /**\n   * Make this one as navigation carousel for selected carousel\n   * @param {Object} target\n   */\n  addAsNavFor(target) {\n    this.target = target;\n    this.nav = this.carousel;\n\n    this.attachEvents();\n  }\n\n  /**\n   * Attach event listeners on both carousels\n   */\n  attachEvents() {\n    this.nav.options.initialSlide = this.target.options.initialPage;\n\n    this.nav.on(\"ready\", this.onNavReady);\n    this.nav.on(\"createSlide\", this.onNavCreateSlide);\n    this.nav.on(\"Panzoom.click\", this.onNavClick);\n\n    this.target.on(\"change\", this.onTargetChange);\n    this.target.on(\"Panzoom.afterUpdate\", this.onTargetChange);\n  }\n\n  /**\n   * Process main carousel `ready` event; bind events and set initial page\n   */\n  onNavReady() {\n    this.onTargetChange(true);\n  }\n\n  /**\n   * Process main carousel `click` event\n   * @param {Object} panzoom\n   * @param {Object} event\n   */\n  onNavClick(carousel, panzoom, event) {\n    const clickedNavSlide = event.target.closest(\".carousel__slide\");\n\n    if (!clickedNavSlide) {\n      return;\n    }\n\n    event.stopPropagation();\n\n    const selectedNavIndex = parseInt(clickedNavSlide.dataset.index, 10);\n    const selectedSyncPage = this.target.findPageForSlide(selectedNavIndex);\n\n    if (this.target.page !== selectedSyncPage) {\n      this.target.slideTo(selectedSyncPage, { friction: this.friction });\n    }\n\n    this.markSelectedSlide(selectedNavIndex);\n  }\n\n  /**\n   * Process main carousel `createSlide` event\n   * @param {Object} carousel\n   * @param {Object} slide\n   */\n  onNavCreateSlide(carousel, slide) {\n    if (slide.index === this.selectedIndex) {\n      this.markSelectedSlide(slide.index);\n    }\n  }\n\n  /**\n   * Process target carousel `change` event\n   * @param {Object} target\n   */\n  onTargetChange() {\n    const targetIndex = this.target.pages[this.target.page].indexes[0];\n    const selectedNavPage = this.nav.findPageForSlide(targetIndex);\n\n    this.nav.slideTo(selectedNavPage);\n\n    this.markSelectedSlide(targetIndex);\n  }\n\n  /**\n   * Toggle classname for slides that marks currently selected slides\n   * @param {Number} selectedIndex\n   */\n  markSelectedSlide(selectedIndex) {\n    this.selectedIndex = selectedIndex;\n\n    [...this.nav.slides].filter((slide) => slide.$el && slide.$el.classList.remove(\"is-nav-selected\"));\n\n    const slide = this.nav.slides[selectedIndex];\n\n    if (slide && slide.$el) slide.$el.classList.add(\"is-nav-selected\");\n  }\n\n  attach(carousel) {\n    const sync = carousel.options.Sync;\n\n    if (!sync.target && !sync.nav) {\n      return;\n    }\n\n    if (sync.target) {\n      this.addAsNavFor(sync.target);\n    } else if (sync.nav) {\n      this.addAsTargetFor(sync.nav);\n    }\n\n    this.friction = sync.friction;\n  }\n\n  detach() {\n    if (this.nav) {\n      this.nav.off(\"ready\", this.onNavReady);\n      this.nav.off(\"Panzoom.click\", this.onNavClick);\n      this.nav.off(\"createSlide\", this.onNavCreateSlide);\n    }\n\n    if (this.target) {\n      this.target.off(\"Panzoom.afterUpdate\", this.onTargetChange);\n      this.target.off(\"change\", this.onTargetChange);\n    }\n  }\n}\n\n// Expose defaults\nSync.defaults = defaults;\n","import { Navigation } from \"./Navigation/Navigation.js\";\nimport { Dots } from \"./Dots/Dots.js\";\nimport { Sync } from \"./Sync/Sync.js\";\n\nexport const Plugins = { Navigation, Dots, Sync };\n","import { extend } from \"../shared/utils/extend.js\";\nimport { canUseDOM } from \"../shared/utils/canUseDOM.js\";\nimport { FOCUSABLE_ELEMENTS, setFocusOn } from \"../shared/utils/setFocusOn.js\";\n\nimport { Base } from \"../shared/Base/Base.js\";\n\nimport { Carousel } from \"../Carousel/Carousel.js\";\n\nimport { Plugins } from \"./plugins/index.js\";\n\n// Default language\nimport en from \"./l10n/en.js\";\n\n// Default settings\nconst defaults = {\n  // Index of active slide on the start\n  startIndex: 0,\n\n  // Number of slides to preload before and after active slide\n  preload: 1,\n\n  // Should navigation be infinite\n  infinite: true,\n\n  // Class name to be applied to the content to reveal it\n  showClass: \"fancybox-zoomInUp\", // \"fancybox-fadeIn\" | \"fancybox-zoomInUp\" | false\n\n  // Class name to be applied to the content to hide it\n  hideClass: \"fancybox-fadeOut\", // \"fancybox-fadeOut\" | \"fancybox-zoomOutDown\" | false\n\n  // Should backdrop and UI elements fade in/out on start/close\n  animated: true,\n\n  // If browser scrollbar should be hidden\n  hideScrollbar: true,\n\n  // Element containing main structure\n  parentEl: null,\n\n  // Custom class name or multiple space-separated class names for the container\n  mainClass: null,\n\n  // Set focus on first focusable element after displaying content\n  autoFocus: true,\n\n  // Trap focus inside Fancybox\n  trapFocus: true,\n\n  // Set focus back to trigger element after closing Fancybox\n  placeFocusBack: true,\n\n  // Action to take when the user clicks on the backdrop\n  click: \"close\", // \"close\" | \"next\" | null\n\n  // Position of the close button - over the content or at top right corner of viewport\n  closeButton: \"inside\", // \"inside\" | \"outside\"\n\n  // Allow user to drag content up/down to close instance\n  dragToClose: true,\n\n  // Enable keyboard navigation\n  keyboard: {\n    Escape: \"close\",\n    Delete: \"close\",\n    Backspace: \"close\",\n    PageUp: \"next\",\n    PageDown: \"prev\",\n    ArrowUp: \"next\",\n    ArrowDown: \"prev\",\n    ArrowRight: \"next\",\n    ArrowLeft: \"prev\",\n  },\n\n  // HTML templates for various elements\n  template: {\n    // Close button icon\n    closeButton:\n      '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" tabindex=\"-1\"><path d=\"M20 20L4 4m16 0L4 20\"/></svg>',\n    // Loading indicator icon\n    spinner:\n      '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"25 25 50 50\" tabindex=\"-1\"><circle cx=\"50\" cy=\"50\" r=\"20\"/></svg>',\n\n    // Main container element\n    main: null,\n  },\n\n  /* Note: If the `template.main` option is not provided, the structure is generated as follows by default:\n  <div class=\"fancybox__container\" role=\"dialog\" aria-modal=\"true\" aria-hidden=\"true\" aria-label=\"{{MODAL}}\" tabindex=\"-1\">\n    <div class=\"fancybox__backdrop\"></div>\n    <div class=\"fancybox__carousel\"></div>\n  </div>\n  */\n\n  // Localization of strings\n  l10n: en,\n};\n\n// Object that contains all active instances of Fancybox\nconst instances = new Map();\n\n// Number of Fancybox instances created, it is used to generate new instance \"id\"\nlet called = 0;\n\nclass Fancybox extends Base {\n  /**\n   * Fancybox constructor\n   * @constructs Fancybox\n   * @param {Object} [options] - Options for Fancybox\n   */\n  constructor(items, options = {}) {\n    // Quick hack to fix variable naming collision\n    items = items.map((item) => {\n      if (item.width) item._width = item.width;\n      if (item.height) item._height = item.height;\n\n      return item;\n    });\n\n    super(extend(true, {}, defaults, options));\n\n    this.bindHandlers();\n\n    this.state = \"init\";\n\n    this.setItems(items);\n\n    this.attachPlugins(Fancybox.Plugins);\n\n    // \"init\" event marks the start of initialization and is available to plugins\n    this.trigger(\"init\");\n\n    if (this.option(\"hideScrollbar\") === true) {\n      this.hideScrollbar();\n    }\n\n    this.initLayout();\n\n    this.initCarousel();\n\n    this.attachEvents();\n\n    instances.set(this.id, this);\n\n    // \"prepare\" event will trigger the creation of additional layout elements, such as thumbnails and toolbar\n    this.trigger(\"prepare\");\n\n    this.state = \"ready\";\n\n    // \"ready\" event will trigger the content to load\n    this.trigger(\"ready\");\n\n    // Reveal container\n    this.$container.setAttribute(\"aria-hidden\", \"false\");\n\n    // Set focus on the first focusable element inside this instance\n    if (this.option(\"trapFocus\")) {\n      this.focus();\n    }\n  }\n\n  /**\n   * Override `option` method to get value from the current slide\n   * @param {String} name option name\n   * @param  {...any} rest optional extra parameters\n   * @returns {any}\n   */\n  option(name, ...rest) {\n    const slide = this.getSlide();\n\n    let value = slide ? slide[name] : undefined;\n\n    if (value !== undefined) {\n      if (typeof value === \"function\") {\n        value = value.call(this, this, ...rest);\n      }\n\n      return value;\n    }\n\n    return super.option(name, ...rest);\n  }\n\n  /**\n   * Bind event handlers for referencability\n   */\n  bindHandlers() {\n    for (const methodName of [\n      \"onMousedown\",\n      \"onKeydown\",\n      \"onClick\",\n\n      \"onFocus\",\n\n      \"onCreateSlide\",\n      \"onSettle\",\n\n      \"onTouchMove\",\n      \"onTouchEnd\",\n\n      \"onTransform\",\n    ]) {\n      this[methodName] = this[methodName].bind(this);\n    }\n  }\n\n  /**\n   * Set up a functions that will be called whenever the specified event is delivered\n   */\n  attachEvents() {\n    document.addEventListener(\"mousedown\", this.onMousedown);\n    document.addEventListener(\"keydown\", this.onKeydown, true);\n\n    // Trap keyboard focus inside of the modal\n    if (this.option(\"trapFocus\")) {\n      document.addEventListener(\"focus\", this.onFocus, true);\n    }\n\n    this.$container.addEventListener(\"click\", this.onClick);\n  }\n\n  /**\n   * Removes previously registered event listeners\n   */\n  detachEvents() {\n    document.removeEventListener(\"mousedown\", this.onMousedown);\n    document.removeEventListener(\"keydown\", this.onKeydown, true);\n\n    document.removeEventListener(\"focus\", this.onFocus, true);\n\n    this.$container.removeEventListener(\"click\", this.onClick);\n  }\n\n  /**\n   * Initialize layout; create main container, backdrop nd layout for main carousel\n   */\n  initLayout() {\n    this.$root = this.option(\"parentEl\") || document.body;\n\n    // Container\n    let mainTemplate = this.option(\"template.main\");\n\n    if (mainTemplate) {\n      this.$root.insertAdjacentHTML(\"beforeend\", this.localize(mainTemplate));\n\n      this.$container = this.$root.querySelector(\".fancybox__container\");\n    }\n\n    if (!this.$container) {\n      this.$container = document.createElement(\"div\");\n      this.$root.appendChild(this.$container);\n    }\n\n    // Normally we would not need this, but Safari does not support `preventScroll:false` option for `focus` method\n    // and that causes layout issues\n    this.$container.onscroll = () => {\n      this.$container.scrollLeft = 0;\n      return false;\n    };\n\n    Object.entries({\n      class: \"fancybox__container\",\n      role: \"dialog\",\n      tabIndex: \"-1\",\n      \"aria-modal\": \"true\",\n      \"aria-hidden\": \"true\",\n      \"aria-label\": this.localize(\"{{MODAL}}\"),\n    }).forEach((args) => this.$container.setAttribute(...args));\n\n    if (this.option(\"animated\")) {\n      this.$container.classList.add(\"is-animated\");\n    }\n\n    // Backdrop\n    this.$backdrop = this.$container.querySelector(\".fancybox__backdrop\");\n\n    if (!this.$backdrop) {\n      this.$backdrop = document.createElement(\"div\");\n      this.$backdrop.classList.add(\"fancybox__backdrop\");\n\n      this.$container.appendChild(this.$backdrop);\n    }\n\n    // Carousel\n    this.$carousel = this.$container.querySelector(\".fancybox__carousel\");\n\n    if (!this.$carousel) {\n      this.$carousel = document.createElement(\"div\");\n      this.$carousel.classList.add(\"fancybox__carousel\");\n\n      this.$container.appendChild(this.$carousel);\n    }\n\n    // Make instance reference accessible\n    this.$container.Fancybox = this;\n\n    // Make sure the container has an ID\n    this.id = this.$container.getAttribute(\"id\");\n\n    if (!this.id) {\n      this.id = this.options.id || ++called;\n      this.$container.setAttribute(\"id\", \"fancybox-\" + this.id);\n    }\n\n    // Add custom class name to main element\n    const mainClass = this.option(\"mainClass\");\n\n    if (mainClass) {\n      this.$container.classList.add(...mainClass.split(\" \"));\n    }\n\n    // Add class name for <html> element\n    document.documentElement.classList.add(\"with-fancybox\");\n\n    this.trigger(\"initLayout\");\n\n    return this;\n  }\n\n  /**\n   * Prepares slides for the corousel\n   * @returns {Array} Slides\n   */\n  setItems(items) {\n    const slides = [];\n\n    for (const slide of items) {\n      const $trigger = slide.$trigger;\n\n      if ($trigger) {\n        const dataset = $trigger.dataset || {};\n\n        slide.src = dataset.src || $trigger.getAttribute(\"href\") || slide.src;\n        slide.type = dataset.type || slide.type;\n\n        // Support items without `src`, e.g., when `data-fancybox` attribute added directly to `<img>` element\n        if (!slide.src && $trigger instanceof HTMLImageElement) {\n          slide.src = $trigger.currentSrc || slide.$trigger.src;\n        }\n      }\n\n      // Check for thumbnail element\n      let $thumb = slide.$thumb;\n\n      if (!$thumb) {\n        let origTarget = slide.$trigger && slide.$trigger.origTarget;\n\n        if (origTarget) {\n          if (origTarget instanceof HTMLImageElement) {\n            $thumb = origTarget;\n          } else {\n            $thumb = origTarget.querySelector(\"img:not([aria-hidden])\");\n          }\n        }\n\n        if (!$thumb && slide.$trigger) {\n          $thumb =\n            slide.$trigger instanceof HTMLImageElement\n              ? slide.$trigger\n              : slide.$trigger.querySelector(\"img:not([aria-hidden])\");\n        }\n      }\n\n      slide.$thumb = $thumb || null;\n\n      // Get thumbnail image source\n      let thumb = slide.thumb;\n\n      if (!thumb && $thumb) {\n        thumb = $thumb.currentSrc || $thumb.src;\n\n        if (!thumb && $thumb.dataset) {\n          thumb = $thumb.dataset.lazySrc || $thumb.dataset.src;\n        }\n      }\n\n      // Assume we have image, then use it as thumbnail\n      if (!thumb && slide.type === \"image\") {\n        thumb = slide.src;\n      }\n\n      slide.thumb = thumb || null;\n\n      // Add empty caption to make things simpler\n      slide.caption = slide.caption || \"\";\n\n      slides.push(slide);\n    }\n\n    this.items = slides;\n  }\n\n  /**\n   * Initialize main Carousel that will be used to display the content\n   * @param {Array} slides\n   */\n  initCarousel() {\n    this.Carousel = new Carousel(\n      this.$carousel,\n      extend(\n        true,\n        {},\n        {\n          prefix: \"\",\n\n          classNames: {\n            viewport: \"fancybox__viewport\",\n            track: \"fancybox__track\",\n            slide: \"fancybox__slide\",\n          },\n\n          textSelection: true,\n          preload: this.option(\"preload\"),\n\n          friction: 0.88,\n\n          slides: this.items,\n          initialPage: this.options.startIndex,\n          slidesPerPage: 1,\n\n          infiniteX: this.option(\"infinite\"),\n          infiniteY: true,\n\n          l10n: this.option(\"l10n\"),\n\n          Dots: false,\n          Navigation: {\n            classNames: {\n              main: \"fancybox__nav\",\n              button: \"carousel__button\",\n\n              next: \"is-next\",\n              prev: \"is-prev\",\n            },\n          },\n\n          Panzoom: {\n            textSelection: true,\n\n            panOnlyZoomed: () => {\n              return (\n                this.Carousel && this.Carousel.pages && this.Carousel.pages.length < 2 && !this.option(\"dragToClose\")\n              );\n            },\n\n            lockAxis: () => {\n              if (this.Carousel) {\n                let rez = \"x\";\n\n                if (this.option(\"dragToClose\")) {\n                  rez += \"y\";\n                }\n\n                return rez;\n              }\n            },\n          },\n\n          on: {\n            \"*\": (name, ...details) => this.trigger(`Carousel.${name}`, ...details),\n            init: (carousel) => (this.Carousel = carousel),\n            createSlide: this.onCreateSlide,\n            settle: this.onSettle,\n          },\n        },\n\n        this.option(\"Carousel\")\n      )\n    );\n\n    if (this.option(\"dragToClose\")) {\n      this.Carousel.Panzoom.on({\n        // Stop further touch event handling if content is scaled\n        touchMove: this.onTouchMove,\n\n        // Update backdrop opacity depending on vertical distance\n        afterTransform: this.onTransform,\n\n        // Close instance if drag distance exceeds limit\n        touchEnd: this.onTouchEnd,\n      });\n    }\n\n    this.trigger(\"initCarousel\");\n\n    return this;\n  }\n\n  /**\n   * Process `createSlide` event to create caption element inside new slide\n   */\n  onCreateSlide(carousel, slide) {\n    let caption = slide.caption || \"\";\n\n    if (typeof this.options.caption === \"function\") {\n      caption = this.options.caption.call(this, this, this.Carousel, slide);\n    }\n\n    if (typeof caption === \"string\" && caption.length) {\n      const $caption = document.createElement(\"div\");\n      const id = `fancybox__caption_${this.id}_${slide.index}`;\n\n      $caption.className = \"fancybox__caption\";\n      $caption.innerHTML = caption;\n      $caption.setAttribute(\"id\", id);\n\n      slide.$caption = slide.$el.appendChild($caption);\n\n      slide.$el.classList.add(\"has-caption\");\n      slide.$el.setAttribute(\"aria-labelledby\", id);\n    }\n  }\n\n  /**\n   * Handle Carousel `settle` event\n   */\n  onSettle() {\n    if (this.option(\"autoFocus\")) {\n      this.focus();\n    }\n  }\n\n  /**\n   * Handle focus event\n   * @param {Event} event - Focus event\n   */\n  onFocus(event) {\n    this.focus(event);\n  }\n\n  /**\n   * Handle click event on the container\n   * @param {Event} event - Click event\n   */\n  onClick(event) {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    let eventTarget = event.composedPath()[0];\n\n    if (eventTarget.matches(\"[data-fancybox-close]\")) {\n      event.preventDefault();\n      Fancybox.close(false, event);\n\n      return;\n    }\n\n    if (eventTarget.matches(\"[data-fancybox-next]\")) {\n      event.preventDefault();\n      Fancybox.next();\n\n      return;\n    }\n\n    if (eventTarget.matches(\"[data-fancybox-prev]\")) {\n      event.preventDefault();\n      Fancybox.prev();\n\n      return;\n    }\n\n    if (!eventTarget.matches(FOCUSABLE_ELEMENTS)) {\n      document.activeElement.blur();\n    }\n\n    // Skip if clicked inside content area\n    if (eventTarget.closest(\".fancybox__content\")) {\n      return;\n    }\n\n    // Skip if text is selected\n    if (getSelection().toString().length) {\n      return;\n    }\n\n    if (this.trigger(\"click\", event) === false) {\n      return;\n    }\n\n    const action = this.option(\"click\");\n\n    switch (action) {\n      case \"close\":\n        this.close();\n        break;\n      case \"next\":\n        this.next();\n        break;\n    }\n  }\n\n  /**\n   * Handle panzoom `touchMove` event; Disable dragging if content of current slide is scaled\n   */\n  onTouchMove() {\n    const panzoom = this.getSlide().Panzoom;\n\n    return panzoom && panzoom.content.scale !== 1 ? false : true;\n  }\n\n  /**\n   * Handle panzoom `touchEnd` event; close when quick flick up/down is detected\n   * @param {Object} panzoom - Panzoom instance\n   */\n  onTouchEnd(panzoom) {\n    const distanceY = panzoom.dragOffset.y;\n\n    if (Math.abs(distanceY) >= 150 || (Math.abs(distanceY) >= 35 && panzoom.dragOffset.time < 350)) {\n      if (this.option(\"hideClass\")) {\n        this.getSlide().hideClass = `fancybox-throwOut${panzoom.content.y < 0 ? \"Up\" : \"Down\"}`;\n      }\n\n      this.close();\n    } else if (panzoom.lockAxis === \"y\") {\n      panzoom.panTo({ y: 0 });\n    }\n  }\n\n  /**\n   * Handle `afterTransform` event; change backdrop opacity based on current y position of panzoom\n   * @param {Object} panzoom - Panzoom instance\n   */\n  onTransform(panzoom) {\n    const $backdrop = this.$backdrop;\n\n    if ($backdrop) {\n      const yPos = Math.abs(panzoom.content.y);\n      const opacity = yPos < 1 ? \"\" : Math.max(0.33, Math.min(1, 1 - (yPos / panzoom.content.fitHeight) * 1.5));\n\n      this.$container.style.setProperty(\"--fancybox-ts\", opacity ? \"0s\" : \"\");\n      this.$container.style.setProperty(\"--fancybox-opacity\", opacity);\n    }\n  }\n\n  /**\n   * Handle `mousedown` event to mark that the mouse is in use\n   */\n  onMousedown() {\n    if (this.state === \"ready\") {\n      document.body.classList.add(\"is-using-mouse\");\n    }\n  }\n\n  /**\n   * Handle `keydown` event; trap focus\n   * @param {Event} event Keydown event\n   */\n  onKeydown(event) {\n    if (Fancybox.getInstance().id !== this.id) {\n      return;\n    }\n\n    document.body.classList.remove(\"is-using-mouse\");\n\n    const key = event.key;\n    const keyboard = this.option(\"keyboard\");\n\n    if (!keyboard || event.ctrlKey || event.altKey || event.shiftKey) {\n      return;\n    }\n\n    const target = event.composedPath()[0];\n\n    const classList = document.activeElement && document.activeElement.classList;\n    const isUIElement = classList && classList.contains(\"carousel__button\");\n\n    // Allow to close using Escape button\n    if (key !== \"Escape\" && !isUIElement) {\n      let ignoreElements =\n        event.target.isContentEditable ||\n        [\"BUTTON\", \"TEXTAREA\", \"OPTION\", \"INPUT\", \"SELECT\", \"VIDEO\"].indexOf(target.nodeName) !== -1;\n\n      if (ignoreElements) {\n        return;\n      }\n    }\n\n    if (this.trigger(\"keydown\", key, event) === false) {\n      return;\n    }\n\n    const action = keyboard[key];\n\n    if (typeof this[action] === \"function\") {\n      this[action]();\n    }\n  }\n\n  /**\n   * Get the active slide. This will be the first slide from the current page of the main carousel.\n   */\n  getSlide() {\n    const carousel = this.Carousel;\n\n    if (!carousel) return null;\n\n    const page = carousel.page === null ? carousel.option(\"initialPage\") : carousel.page;\n    const pages = carousel.pages || [];\n\n    if (pages.length && pages[page]) {\n      return pages[page].slides[0];\n    }\n\n    return null;\n  }\n\n  /**\n   * Place focus on the first focusable element inside current slide\n   * @param {Event} [event] - Focus event\n   */\n  focus(event) {\n    if (Fancybox.ignoreFocusChange) {\n      return;\n    }\n\n    if ([\"init\", \"closing\", \"customClosing\", \"destroy\"].indexOf(this.state) > -1) {\n      return;\n    }\n\n    const $container = this.$container;\n    const currentSlide = this.getSlide();\n    const $currentSlide = currentSlide.state === \"done\" ? currentSlide.$el : null;\n\n    // Skip if the DOM element that is currently in focus is already inside the current slide\n    if ($currentSlide && $currentSlide.contains(document.activeElement)) {\n      return;\n    }\n\n    if (event) {\n      event.preventDefault();\n    }\n\n    Fancybox.ignoreFocusChange = true;\n\n    const allFocusableElems = Array.from($container.querySelectorAll(FOCUSABLE_ELEMENTS));\n\n    let enabledElems = [];\n    let $firstEl;\n\n    for (let node of allFocusableElems) {\n      // Enable element if it's visible and\n      // is inside the current slide or is outside main carousel (for example, inside the toolbar)\n      const isNodeVisible = node.offsetParent;\n      const isNodeInsideCurrentSlide = $currentSlide && $currentSlide.contains(node);\n      const isNodeOutsideCarousel = !this.Carousel.$viewport.contains(node);\n\n      if (isNodeVisible && (isNodeInsideCurrentSlide || isNodeOutsideCarousel)) {\n        enabledElems.push(node);\n\n        if (node.dataset.origTabindex !== undefined) {\n          node.tabIndex = node.dataset.origTabindex;\n          node.removeAttribute(\"data-orig-tabindex\");\n        }\n\n        if (\n          node.hasAttribute(\"autoFocus\") ||\n          (!$firstEl && isNodeInsideCurrentSlide && !node.classList.contains(\"carousel__button\"))\n        ) {\n          $firstEl = node;\n        }\n      } else {\n        // Element is either hidden or is inside preloaded slide (e.g., not inside current slide, but next/prev)\n        node.dataset.origTabindex =\n          node.dataset.origTabindex === undefined ? node.getAttribute(\"tabindex\") : node.dataset.origTabindex;\n\n        node.tabIndex = -1;\n      }\n    }\n\n    if (!event) {\n      if (this.option(\"autoFocus\") && $firstEl) {\n        setFocusOn($firstEl);\n      } else if (enabledElems.indexOf(document.activeElement) < 0) {\n        setFocusOn($container);\n      }\n    } else {\n      if (enabledElems.indexOf(event.target) > -1) {\n        this.lastFocus = event.target;\n      } else {\n        if (this.lastFocus === $container) {\n          setFocusOn(enabledElems[enabledElems.length - 1]);\n        } else {\n          setFocusOn($container);\n        }\n      }\n    }\n\n    this.lastFocus = document.activeElement;\n\n    Fancybox.ignoreFocusChange = false;\n  }\n\n  /**\n   * Hide vertical page scrollbar and adjust right padding value of `body` element to prevent content from shifting\n   * (otherwise the `body` element may become wider and the content may expand horizontally).\n   */\n  hideScrollbar() {\n    if (!canUseDOM) {\n      return;\n    }\n\n    const scrollbarWidth = window.innerWidth - document.documentElement.getBoundingClientRect().width;\n    const id = \"fancybox-style-noscroll\";\n\n    let $style = document.getElementById(id);\n\n    if ($style) {\n      return;\n    }\n\n    if (scrollbarWidth > 0) {\n      $style = document.createElement(\"style\");\n\n      $style.id = id;\n      $style.type = \"text/css\";\n      $style.innerHTML = `.compensate-for-scrollbar {padding-right: ${scrollbarWidth}px;}`;\n\n      document.getElementsByTagName(\"head\")[0].appendChild($style);\n\n      document.body.classList.add(\"compensate-for-scrollbar\");\n    }\n  }\n\n  /**\n   * Stop hiding vertical page scrollbar\n   */\n  revealScrollbar() {\n    document.body.classList.remove(\"compensate-for-scrollbar\");\n\n    const el = document.getElementById(\"fancybox-style-noscroll\");\n\n    if (el) {\n      el.remove();\n    }\n  }\n\n  /**\n   * Remove content for given slide\n   * @param {Object} slide - Carousel slide\n   */\n  clearContent(slide) {\n    // * Clear previously added content and class name\n    this.Carousel.trigger(\"removeSlide\", slide);\n\n    if (slide.$content) {\n      slide.$content.remove();\n      slide.$content = null;\n    }\n\n    if (slide.$closeButton) {\n      slide.$closeButton.remove();\n      slide.$closeButton = null;\n    }\n\n    if (slide._className) {\n      slide.$el.classList.remove(slide._className);\n    }\n  }\n\n  /**\n   * Set new content for given slide\n   * @param {Object} slide - Carousel slide\n   * @param {HTMLElement|String} html - HTML element or string containing HTML code\n   * @param {Object} [opts] - Options\n   */\n  setContent(slide, html, opts = {}) {\n    let $content;\n\n    const $el = slide.$el;\n\n    if (html instanceof HTMLElement) {\n      if ([\"img\", \"iframe\", \"video\", \"audio\"].indexOf(html.nodeName.toLowerCase()) > -1) {\n        $content = document.createElement(\"div\");\n        $content.appendChild(html);\n      } else {\n        $content = html;\n      }\n    } else {\n      const $fragment = document.createRange().createContextualFragment(html);\n\n      $content = document.createElement(\"div\");\n      $content.appendChild($fragment);\n    }\n\n    if (slide.filter && !slide.error) {\n      $content = $content.querySelector(slide.filter);\n    }\n\n    if (!($content instanceof Element)) {\n      this.setError(slide, \"{{ELEMENT_NOT_FOUND}}\");\n\n      return;\n    }\n\n    // * Add class name indicating content type, for example `has-image`\n    slide._className = `has-${opts.suffix || slide.type || \"unknown\"}`;\n\n    $el.classList.add(slide._className);\n\n    // * Set content\n    $content.classList.add(\"fancybox__content\");\n\n    // Make sure that content is not hidden and will be visible\n    if ($content.style.display === \"none\" || getComputedStyle($content).getPropertyValue(\"display\") === \"none\") {\n      $content.style.display = slide.display || this.option(\"defaultDisplay\") || \"flex\";\n    }\n\n    if (slide.id) {\n      $content.setAttribute(\"id\", slide.id);\n    }\n\n    slide.$content = $content;\n\n    $el.prepend($content);\n\n    this.manageCloseButton(slide);\n\n    if (slide.state !== \"loading\") {\n      this.revealContent(slide);\n    }\n\n    return $content;\n  }\n\n  /**\n   * Create close button if needed\n   * @param {Object} slide\n   */\n  manageCloseButton(slide) {\n    const position = slide.closeButton === undefined ? this.option(\"closeButton\") : slide.closeButton;\n\n    if (!position || (position === \"top\" && this.$closeButton)) {\n      return;\n    }\n\n    const $btn = document.createElement(\"button\");\n\n    $btn.classList.add(\"carousel__button\", \"is-close\");\n    $btn.setAttribute(\"title\", this.options.l10n.CLOSE);\n    $btn.innerHTML = this.option(\"template.closeButton\");\n\n    $btn.addEventListener(\"click\", (e) => this.close(e));\n\n    if (position === \"inside\") {\n      // Remove existing one to avoid scope issues\n      if (slide.$closeButton) {\n        slide.$closeButton.remove();\n      }\n\n      slide.$closeButton = slide.$content.appendChild($btn);\n    } else {\n      this.$closeButton = this.$container.insertBefore($btn, this.$container.firstChild);\n    }\n  }\n\n  /**\n   * Make content visible for given slide and optionally start CSS animation\n   * @param {Object} slide - Carousel slide\n   */\n  revealContent(slide) {\n    this.trigger(\"reveal\", slide);\n\n    slide.$content.style.visibility = \"\";\n\n    // Add CSS class name that reveals content (default animation is \"fadeIn\")\n    let showClass = false;\n\n    if (\n      !(\n        slide.error ||\n        slide.state === \"loading\" ||\n        this.Carousel.prevPage !== null ||\n        slide.index !== this.options.startIndex\n      )\n    ) {\n      showClass = slide.showClass === undefined ? this.option(\"showClass\") : slide.showClass;\n    }\n\n    if (!showClass) {\n      this.done(slide);\n\n      return;\n    }\n\n    slide.state = \"animating\";\n\n    this.animateCSS(slide.$content, showClass, () => {\n      this.done(slide);\n    });\n  }\n\n  /**\n   * Add class name to given HTML element and wait for `animationend` event to execute callback\n   * @param {HTMLElement} $el\n   * @param {String} className\n   * @param {Function} callback - A callback to run\n   */\n  animateCSS($element, className, callback) {\n    if ($element) {\n      $element.dispatchEvent(new CustomEvent(\"animationend\", { bubbles: true, cancelable: true }));\n    }\n\n    if (!$element || !className) {\n      if (typeof callback === \"function\") {\n        callback();\n      }\n\n      return;\n    }\n\n    const handleAnimationEnd = function (event) {\n      if (event.currentTarget === this) {\n        $element.removeEventListener(\"animationend\", handleAnimationEnd);\n\n        if (callback) {\n          callback();\n        }\n\n        $element.classList.remove(className);\n      }\n    };\n\n    $element.addEventListener(\"animationend\", handleAnimationEnd);\n    $element.classList.add(className);\n  }\n\n  /**\n   * Mark given slide as `done`, e.g., content is loaded and displayed completely\n   * @param {Object} slide - Carousel slide\n   */\n  done(slide) {\n    slide.state = \"done\";\n\n    this.trigger(\"done\", slide);\n\n    // Trigger focus for current slide (and ignore preloaded slides)\n    const currentSlide = this.getSlide();\n\n    if (currentSlide && slide.index === currentSlide.index && this.option(\"autoFocus\")) {\n      this.focus();\n    }\n  }\n\n  /**\n   * Set error message as slide content\n   * @param {Object} slide - Carousel slide\n   * @param {String} message - Error message, can contain HTML code and template variables\n   */\n  setError(slide, message) {\n    slide.error = message;\n\n    this.hideLoading(slide);\n    this.clearContent(slide);\n\n    // Create new content\n    const div = document.createElement(\"div\");\n    div.classList.add(\"fancybox-error\");\n    div.innerHTML = this.localize(message || \"<p>{{ERROR}}</p>\");\n\n    this.setContent(slide, div, { suffix: \"error\" });\n  }\n\n  /**\n   * Create loading indicator inside given slide\n   * @param {Object} slide - Carousel slide\n   */\n  showLoading(slide) {\n    slide.state = \"loading\";\n\n    slide.$el.classList.add(\"is-loading\");\n\n    let $spinner = slide.$el.querySelector(\".fancybox__spinner\");\n\n    if ($spinner) {\n      return;\n    }\n\n    $spinner = document.createElement(\"div\");\n\n    $spinner.classList.add(\"fancybox__spinner\");\n    $spinner.innerHTML = this.option(\"template.spinner\");\n\n    $spinner.addEventListener(\"click\", () => {\n      if (!this.Carousel.Panzoom.velocity) this.close();\n    });\n\n    slide.$el.prepend($spinner);\n  }\n\n  /**\n   * Remove loading indicator from given slide\n   * @param {Object} slide - Carousel slide\n   */\n  hideLoading(slide) {\n    const $spinner = slide.$el && slide.$el.querySelector(\".fancybox__spinner\");\n\n    if ($spinner) {\n      $spinner.remove();\n\n      slide.$el.classList.remove(\"is-loading\");\n    }\n\n    if (slide.state === \"loading\") {\n      this.trigger(\"load\", slide);\n\n      slide.state = \"ready\";\n    }\n  }\n\n  /**\n   * Slide carousel to next page\n   */\n  next() {\n    const carousel = this.Carousel;\n\n    if (carousel && carousel.pages.length > 1) {\n      carousel.slideNext();\n    }\n  }\n\n  /**\n   * Slide carousel to previous page\n   */\n  prev() {\n    const carousel = this.Carousel;\n\n    if (carousel && carousel.pages.length > 1) {\n      carousel.slidePrev();\n    }\n  }\n\n  /**\n   * Slide carousel to selected page with optional parameters\n   * Examples:\n   *    Fancybox.getInstance().jumpTo(2);\n   *    Fancybox.getInstance().jumpTo(3, {friction: 0})\n   * @param  {...any} args - Arguments for Carousel `slideTo` method\n   */\n  jumpTo(...args) {\n    if (this.Carousel) this.Carousel.slideTo(...args);\n  }\n\n  /**\n   * Start closing the current instance\n   * @param {Event} [event] - Optional click event\n   */\n  close(event) {\n    if (event) event.preventDefault();\n\n    // First, stop further execution if this instance is already closing\n    // (this can happen if, for example, user clicks close button multiple times really fast)\n    if ([\"closing\", \"customClosing\", \"destroy\"].includes(this.state)) {\n      return;\n    }\n\n    // Allow callbacks and/or plugins to prevent closing\n    if (this.trigger(\"shouldClose\", event) === false) {\n      return;\n    }\n\n    this.state = \"closing\";\n\n    this.Carousel.Panzoom.destroy();\n\n    this.detachEvents();\n\n    this.trigger(\"closing\", event);\n\n    if (this.state === \"destroy\") {\n      return;\n    }\n\n    // Trigger default CSS closing animation for backdrop and interface elements\n    this.$container.setAttribute(\"aria-hidden\", \"true\");\n\n    this.$container.classList.add(\"is-closing\");\n\n    // Clear inactive slides\n    const currentSlide = this.getSlide();\n\n    this.Carousel.slides.forEach((slide) => {\n      if (slide.$content && slide.index !== currentSlide.index) {\n        this.Carousel.trigger(\"removeSlide\", slide);\n      }\n    });\n\n    // Start default closing animation\n    if (this.state === \"closing\") {\n      const hideClass = currentSlide.hideClass === undefined ? this.option(\"hideClass\") : currentSlide.hideClass;\n\n      this.animateCSS(\n        currentSlide.$content,\n        hideClass,\n        () => {\n          this.destroy();\n        },\n        true\n      );\n    }\n  }\n\n  /**\n   * Clean up after closing fancybox\n   */\n  destroy() {\n    if (this.state === \"destroy\") {\n      return;\n    }\n\n    this.state = \"destroy\";\n\n    this.trigger(\"destroy\");\n\n    const $trigger = this.option(\"placeFocusBack\") ? this.getSlide().$trigger : null;\n\n    // Destroy Carousel and then detach plugins;\n    // * Note: this order allows plugins to receive `removeSlide` event\n    this.Carousel.destroy();\n\n    this.detachPlugins();\n\n    this.Carousel = null;\n\n    this.options = {};\n    this.events = {};\n\n    this.$container.remove();\n\n    this.$container = this.$backdrop = this.$carousel = null;\n\n    if ($trigger) {\n      setFocusOn($trigger);\n    }\n\n    instances.delete(this.id);\n\n    const nextInstance = Fancybox.getInstance();\n\n    if (nextInstance) {\n      nextInstance.focus();\n      return;\n    }\n\n    document.documentElement.classList.remove(\"with-fancybox\");\n    document.body.classList.remove(\"is-using-mouse\");\n\n    this.revealScrollbar();\n  }\n\n  /**\n   * Create new Fancybox instance with provided options\n   * Example:\n   *   Fancybox.show([{ src : 'https://lipsum.app/id/1/300x225' }]);\n   * @param {Array} items - Gallery items\n   * @param {Object} [options] - Optional custom options\n   * @returns {Object} Fancybox instance\n   */\n  static show(items, options = {}) {\n    return new Fancybox(items, options);\n  }\n\n  /**\n   * Starts Fancybox if event target matches any opener or target is `trigger element`\n   * @param {Event} event - Click event\n   * @param {Object} [options] - Optional custom options\n   */\n  static fromEvent(event, options = {}) {\n    //  Allow other scripts to prevent starting fancybox on click\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    // Don't run if right-click\n    if (event.button && event.button !== 0) {\n      return;\n    }\n\n    // Ignore command/control + click\n    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    const origTarget = event.composedPath()[0];\n\n    let eventTarget = origTarget;\n\n    // Support `trigger` element, e.g., start fancybox from different DOM element, for example,\n    // to have one preview image for hidden image gallery\n    let triggerGroupName;\n\n    if (\n      eventTarget.matches(\"[data-fancybox-trigger]\") ||\n      (eventTarget = eventTarget.closest(\"[data-fancybox-trigger]\"))\n    ) {\n      triggerGroupName = eventTarget && eventTarget.dataset && eventTarget.dataset.fancyboxTrigger;\n    }\n\n    if (triggerGroupName) {\n      const triggerItems = document.querySelectorAll(`[data-fancybox=\"${triggerGroupName}\"]`);\n      const triggerIndex = parseInt(eventTarget.dataset.fancyboxIndex, 10) || 0;\n\n      eventTarget = triggerItems.length ? triggerItems[triggerIndex] : eventTarget;\n    }\n\n    if (!eventTarget) {\n      eventTarget = origTarget;\n    }\n\n    // * Try to find matching openener\n    let matchingOpener;\n    let target;\n\n    Array.from(Fancybox.openers.keys())\n      .reverse()\n      .some((opener) => {\n        target = eventTarget;\n\n        let found = false;\n\n        try {\n          if (target instanceof Element && (typeof opener === \"string\" || opener instanceof String)) {\n            // Chain closest() to event.target to find and return the parent element,\n            // regardless if clicking on the child elements (icon, label, etc)\n            found = target.matches(opener) || (target = target.closest(opener));\n          }\n        } catch (error) {}\n\n        if (found) {\n          event.preventDefault();\n          matchingOpener = opener;\n          return true;\n        }\n\n        return false;\n      });\n\n    let rez = false;\n\n    if (matchingOpener) {\n      options.event = event;\n      options.target = target;\n\n      target.origTarget = origTarget;\n\n      rez = Fancybox.fromOpener(matchingOpener, options);\n\n      // Check if the mouse is being used\n      // Waiting for better browser support for `:focus-visible` -\n      // https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo\n      const nextInstance = Fancybox.getInstance();\n\n      if (nextInstance && nextInstance.state === \"ready\" && event.detail) {\n        document.body.classList.add(\"is-using-mouse\");\n      }\n    }\n\n    return rez;\n  }\n\n  /**\n   * Starts Fancybox using selector\n   * @param {String} opener - Valid CSS selector string\n   * @param {Object} [options] - Optional custom options\n   */\n  static fromOpener(opener, options = {}) {\n    // Callback function called once for each group element that\n    // 1) converts data attributes to boolean or JSON\n    // 2) removes values that could cause issues\n    const mapCallback = function (el) {\n      const falseValues = [\"false\", \"0\", \"no\", \"null\", \"undefined\"];\n      const trueValues = [\"true\", \"1\", \"yes\"];\n\n      const dataset = Object.assign({}, el.dataset);\n      const options = {};\n\n      for (let [key, value] of Object.entries(dataset)) {\n        if (key === \"fancybox\") {\n          continue;\n        }\n\n        if (key === \"width\" || key === \"height\") {\n          options[`_${key}`] = value;\n        } else if (typeof value === \"string\" || value instanceof String) {\n          if (falseValues.indexOf(value) > -1) {\n            options[key] = false;\n          } else if (trueValues.indexOf(options[key]) > -1) {\n            options[key] = true;\n          } else {\n            try {\n              options[key] = JSON.parse(value);\n            } catch (e) {\n              options[key] = value;\n            }\n          }\n        } else {\n          options[key] = value;\n        }\n      }\n\n      if (el instanceof Element) {\n        options.$trigger = el;\n      }\n\n      return options;\n    };\n\n    let items = [],\n      index = options.startIndex || 0,\n      target = options.target || null;\n\n    // Get options\n    // ===\n    options = extend({}, options, Fancybox.openers.get(opener));\n\n    // Get matching nodes\n    // ===\n    const groupAll = options.groupAll === undefined ? false : options.groupAll;\n\n    const groupAttr = options.groupAttr === undefined ? \"data-fancybox\" : options.groupAttr;\n    const groupValue = groupAttr && target ? target.getAttribute(`${groupAttr}`) : \"\";\n\n    if (!target || groupValue || groupAll) {\n      const $root = options.root || (target ? target.getRootNode() : document.body);\n\n      items = [].slice.call($root.querySelectorAll(opener));\n    }\n\n    if (target && !groupAll) {\n      if (groupValue) {\n        items = items.filter((el) => el.getAttribute(`${groupAttr}`) === groupValue);\n      } else {\n        items = [target];\n      }\n    }\n\n    if (!items.length) {\n      return false;\n    }\n\n    // Exit if current instance is triggered from the same element\n    // ===\n    const currentInstance = Fancybox.getInstance();\n\n    if (currentInstance && items.indexOf(currentInstance.options.$trigger) > -1) {\n      return false;\n    }\n\n    // Start Fancybox\n    // ===\n\n    // Get index of current item in the gallery\n    index = target ? items.indexOf(target) : index;\n\n    // Convert items in a format supported by fancybox\n    items = items.map(mapCallback);\n\n    // * Create new fancybox instance\n    return new Fancybox(\n      items,\n      extend({}, options, {\n        startIndex: index,\n        $trigger: target,\n      })\n    );\n  }\n\n  /**\n   * Attach a click handler function that starts Fancybox to the selected items, as well as to all future matching elements.\n   * @param {String} selector - Selector that should match trigger elements\n   * @param {Object} [options] - Custom options\n   */\n  static bind(selector, options = {}) {\n    function attachClickEvent() {\n      document.body.addEventListener(\"click\", Fancybox.fromEvent, false);\n    }\n\n    if (!canUseDOM) {\n      return;\n    }\n\n    if (!Fancybox.openers.size) {\n      if (/complete|interactive|loaded/.test(document.readyState)) {\n        attachClickEvent();\n      } else {\n        document.addEventListener(\"DOMContentLoaded\", attachClickEvent);\n      }\n    }\n\n    Fancybox.openers.set(selector, options);\n  }\n\n  /**\n   * Remove the click handler that was attached with `bind()`\n   * @param {String} selector - A selector which should match the one originally passed to .bind()\n   */\n  static unbind(selector) {\n    Fancybox.openers.delete(selector);\n\n    if (!Fancybox.openers.size) {\n      Fancybox.destroy();\n    }\n  }\n\n  /**\n   * Immediately destroy all instances (without closing animation) and clean up all bindings..\n   */\n  static destroy() {\n    let fb;\n\n    while ((fb = Fancybox.getInstance())) {\n      fb.destroy();\n    }\n\n    Fancybox.openers = new Map();\n\n    document.body.removeEventListener(\"click\", Fancybox.fromEvent, false);\n  }\n\n  /**\n   * Retrieve instance by identifier or the top most instance, if identifier is not provided\n   * @param {String|Numeric} [id] - Optional instance identifier\n   */\n  static getInstance(id) {\n    if (id) {\n      return instances.get(id);\n    }\n\n    const instance = Array.from(instances.values())\n      .reverse()\n      .find((instance) => {\n        if (![\"closing\", \"customClosing\", \"destroy\"].includes(instance.state)) {\n          return instance;\n        }\n\n        return false;\n      });\n\n    return instance || null;\n  }\n\n  /**\n   * Close all or topmost currently active instance.\n   * @param {boolean} [all] - All or only topmost active instance\n   * @param {any} [arguments] - Optional data\n   */\n  static close(all = true, args) {\n    if (all) {\n      for (const instance of instances.values()) {\n        instance.close(args);\n      }\n    } else {\n      const instance = Fancybox.getInstance();\n\n      if (instance) {\n        instance.close(args);\n      }\n    }\n  }\n\n  /**\n   * Slide topmost currently active instance to next page\n   */\n  static next() {\n    const instance = Fancybox.getInstance();\n\n    if (instance) {\n      instance.next();\n    }\n  }\n\n  /**\n   * Slide topmost currently active instance to previous page\n   */\n  static prev() {\n    const instance = Fancybox.getInstance();\n\n    if (instance) {\n      instance.prev();\n    }\n  }\n}\n\n// Expose version\nFancybox.version = \"__VERSION__\";\n\n// Expose defaults\nFancybox.defaults = defaults;\n\n// Expose openers\nFancybox.openers = new Map();\n\n// Add default plugins\nFancybox.Plugins = Plugins;\n\n// Auto init with default options\nFancybox.bind(\"[data-fancybox]\");\n\n// Prepare plugins\nfor (const [key, Plugin] of Object.entries(Fancybox.Plugins || {})) {\n  if (typeof Plugin.create === \"function\") {\n    Plugin.create(Fancybox);\n  }\n}\n\nexport { Fancybox };\n","export default {\r\n  CLOSE: \"Close\",\r\n  NEXT: \"Next\",\r\n  PREV: \"Previous\",\r\n  MODAL: \"You can close this modal content with the ESC key\",\r\n  ERROR: \"Something Went Wrong, Please Try Again Later\",\r\n  IMAGE_ERROR: \"Image Not Found\",\r\n  ELEMENT_NOT_FOUND: \"HTML Element Not Found\",\r\n  AJAX_NOT_FOUND: \"Error Loading AJAX : Not Found\",\r\n  AJAX_FORBIDDEN: \"Error Loading AJAX : Forbidden\",\r\n  IFRAME_ERROR: \"Error Loading Page\",\r\n  TOGGLE_ZOOM: \"Toggle zoom level\",\r\n  TOGGLE_THUMBS: \"Toggle thumbnails\",\r\n  TOGGLE_SLIDESHOW: \"Toggle slideshow\",\r\n  TOGGLE_FULLSCREEN: \"Toggle full-screen mode\",\r\n  DOWNLOAD: \"Download\",\r\n};\r\n","import { canUseDOM } from \"../../../shared/utils/canUseDOM.js\";\n\nexport class Hash {\n  constructor(fancybox) {\n    this.fancybox = fancybox;\n\n    for (const methodName of [\"onChange\", \"onClosing\"]) {\n      this[methodName] = this[methodName].bind(this);\n    }\n\n    this.events = {\n      initCarousel: this.onChange,\n      \"Carousel.change\": this.onChange,\n      closing: this.onClosing,\n    };\n\n    this.hasCreatedHistory = false;\n    this.origHash = \"\";\n    this.timer = null;\n  }\n\n  /**\n   * Process `Carousel.ready` and `Carousel.change` events to update URL hash\n   * @param {Object} fancybox\n   * @param {Object} carousel\n   */\n  onChange(fancybox) {\n    const carousel = fancybox.Carousel;\n\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n\n    const firstRun = carousel.prevPage === null;\n    const currentSlide = fancybox.getSlide();\n\n    const currentHash = new URL(document.URL).hash;\n\n    let newHash = false;\n\n    if (currentSlide.slug) {\n      newHash = \"#\" + currentSlide.slug;\n    } else {\n      const dataset = currentSlide.$trigger && currentSlide.$trigger.dataset;\n      const slug = fancybox.option(\"slug\") || (dataset && dataset.fancybox);\n\n      if (slug && slug.length && slug !== \"true\") {\n        newHash = \"#\" + slug + (carousel.slides.length > 1 ? \"-\" + (currentSlide.index + 1) : \"\");\n      }\n    }\n\n    if (firstRun) {\n      this.origHash = currentHash !== newHash ? currentHash : \"\";\n    }\n\n    if (newHash && currentHash !== newHash) {\n      this.timer = setTimeout(() => {\n        try {\n          window.history[firstRun ? \"pushState\" : \"replaceState\"](\n            {},\n            document.title,\n            window.location.pathname + window.location.search + newHash\n          );\n\n          if (firstRun) {\n            this.hasCreatedHistory = true;\n          }\n        } catch (e) {}\n      }, 300);\n    }\n  }\n\n  /**\n   * Process `closing` event to clean up\n   */\n  onClosing() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n\n    // Skip if closing is triggered by pressing  browser back button or by changing hash manually\n    if (this.hasSilentClose === true) {\n      return;\n    }\n\n    // Restore original url\n    try {\n      window.history.replaceState(\n        {},\n        document.title,\n        window.location.pathname + window.location.search + (this.origHash || \"\")\n      );\n\n      return;\n    } catch (e) {}\n  }\n\n  attach(fancybox) {\n    fancybox.on(this.events);\n  }\n\n  detach(fancybox) {\n    fancybox.off(this.events);\n  }\n\n  /**\n   * Start fancybox from current URL hash,\n   * this will be called on page load OR/AND after changing URL hash\n   * @param {Class} Fancybox\n   */\n  static startFromUrl() {\n    const Fancybox = Hash.Fancybox;\n\n    if (!Fancybox || Fancybox.getInstance() || Fancybox.defaults.Hash === false) {\n      return;\n    }\n\n    const { hash, slug, index } = Hash.getParsedURL();\n\n    if (!slug) {\n      return;\n    }\n\n    // Support custom slug\n    // ===\n    let selectedElem = document.querySelector(`[data-slug=\"${hash}\"]`);\n\n    if (selectedElem) {\n      selectedElem.dispatchEvent(new CustomEvent(\"click\", { bubbles: true, cancelable: true }));\n    }\n\n    if (Fancybox.getInstance()) {\n      return;\n    }\n\n    // If elements are not found by custom slug, use URL hash value as group name\n    // ===\n    const groupElems = document.querySelectorAll(`[data-fancybox=\"${slug}\"]`);\n\n    if (!groupElems.length) {\n      return;\n    }\n\n    if (index === null && groupElems.length === 1) {\n      selectedElem = groupElems[0];\n    } else if (index) {\n      selectedElem = groupElems[index - 1];\n    }\n\n    if (selectedElem) {\n      selectedElem.dispatchEvent(new CustomEvent(\"click\", { bubbles: true, cancelable: true }));\n    }\n  }\n\n  /**\n   * Handle `hash` change, change gallery item to current index or start/close current instance\n   */\n  static onHashChange() {\n    const { slug, index } = Hash.getParsedURL();\n\n    const Fancybox = Hash.Fancybox;\n    const instance = Fancybox && Fancybox.getInstance();\n\n    if (instance && instance.plugins.Hash) {\n      // Check if hash matches currently active gallery\n      if (slug) {\n        const carousel = instance.Carousel;\n\n        /**\n         * Support manually opened gallery\n         */\n        if (slug === instance.option(\"slug\")) {\n          return carousel.slideTo(index - 1);\n        }\n\n        /**\n         * Check if URL hash matches `data-slug` value of active element\n         */\n        for (let slide of carousel.slides) {\n          if (slide.slug && slide.slug === slug) {\n            return carousel.slideTo(slide.index);\n          }\n        }\n\n        /**\n         * Check if URL hash matches `data-fancybox` value of active element\n         */\n        const slide = instance.getSlide();\n        const dataset = slide.$trigger && slide.$trigger.dataset;\n\n        if (dataset && dataset.fancybox === slug) {\n          return carousel.slideTo(index - 1);\n        }\n      }\n\n      /**\n       * Close if no matching element found\n       */\n      instance.plugins.Hash.hasSilentClose = true;\n\n      instance.close();\n    }\n\n    /**\n     * Attempt to start\n     */\n    Hash.startFromUrl();\n  }\n\n  /**\n   * Add event bindings that will start new Fancybox instance based in the current URL\n   */\n  static create(Fancybox) {\n    Hash.Fancybox = Fancybox;\n\n    function proceed() {\n      window.addEventListener(\"hashchange\", Hash.onHashChange, false);\n\n      Hash.startFromUrl();\n    }\n\n    if (canUseDOM) {\n      window.requestAnimationFrame(() => {\n        if (/complete|interactive|loaded/.test(document.readyState)) {\n          proceed();\n        } else {\n          document.addEventListener(\"DOMContentLoaded\", proceed);\n        }\n      });\n    }\n  }\n\n  static destroy() {\n    window.removeEventListener(\"hashchange\", Hash.onHashChange, false);\n  }\n\n  /**\n   * Helper method to split URL hash into useful pieces\n   */\n  static getParsedURL() {\n    const hash = window.location.hash.substr(1),\n      tmp = hash.split(\"-\"),\n      index = tmp.length > 1 && /^\\+?\\d+$/.test(tmp[tmp.length - 1]) ? parseInt(tmp.pop(-1), 10) || null : null,\n      slug = tmp.join(\"-\");\n\n    return {\n      hash,\n      slug,\n      index,\n    };\n  }\n}\n","import { extend } from \"../../../shared/utils/extend.js\";\n\nconst buildURLQuery = (src, obj) => {\n  const url = new URL(src);\n  const params = new URLSearchParams(url.search);\n\n  let rez = new URLSearchParams();\n\n  for (const [key, value] of [...params, ...Object.entries(obj)]) {\n    // Youtube\n    if (key === \"t\") {\n      rez.set(\"start\", parseInt(value));\n    } else {\n      rez.set(key, value);\n    }\n  }\n\n  // Convert to 'foo=1&bar=2&baz=3'\n  rez = rez.toString();\n\n  // Vimeo\n  // https://vimeo.zendesk.com/hc/en-us/articles/360000121668-Starting-playback-at-a-specific-timecode\n  let matches = src.match(/#t=((.*)?\\d+s)/);\n\n  if (matches) {\n    rez += `#t=${matches[1]}`;\n  }\n\n  return rez;\n};\n\nconst defaults = {\n  // General options for any video content (Youtube, Vimeo, HTML5 video)\n  video: {\n    autoplay: true,\n    ratio: 16 / 9,\n  },\n  // Youtube embed parameters\n  youtube: {\n    autohide: 1,\n    fs: 1,\n    rel: 0,\n    hd: 1,\n    wmode: \"transparent\",\n    enablejsapi: 1,\n    html5: 1,\n  },\n  // Vimeo embed parameters\n  vimeo: {\n    hd: 1,\n    show_title: 1,\n    show_byline: 1,\n    show_portrait: 0,\n    fullscreen: 1,\n  },\n  // HTML5 video parameters\n  html5video: {\n    tpl: `<video class=\"fancybox__html5video\" playsinline controls controlsList=\"nodownload\" poster=\"{{poster}}\">\n  <source src=\"{{src}}\" type=\"{{format}}\" />Sorry, your browser doesn't support embedded videos.</video>`,\n    format: \"\",\n  },\n};\n\nexport class Html {\n  constructor(fancybox) {\n    this.fancybox = fancybox;\n\n    for (const methodName of [\n      \"onInit\",\n      \"onReady\",\n\n      \"onCreateSlide\",\n      \"onRemoveSlide\",\n\n      \"onSelectSlide\",\n      \"onUnselectSlide\",\n\n      \"onRefresh\",\n\n      // For communication with iframed video (youtube/vimeo)\n      \"onMessage\",\n    ]) {\n      this[methodName] = this[methodName].bind(this);\n    }\n\n    this.events = {\n      init: this.onInit,\n      ready: this.onReady,\n\n      \"Carousel.createSlide\": this.onCreateSlide,\n      \"Carousel.removeSlide\": this.onRemoveSlide,\n\n      \"Carousel.selectSlide\": this.onSelectSlide,\n      \"Carousel.unselectSlide\": this.onUnselectSlide,\n\n      \"Carousel.refresh\": this.onRefresh,\n    };\n  }\n\n  /**\n   * Check if each gallery item has type when fancybox starts\n   */\n  onInit() {\n    for (const slide of this.fancybox.items) {\n      this.processType(slide);\n    }\n  }\n\n  /**\n   * Set content type for the slide\n   * @param {Object} slide\n   */\n  processType(slide) {\n    // Add support for `new Fancybox({items : [{html : 'smth'}]});`\n    if (slide.html) {\n      slide.src = slide.html;\n      slide.type = \"html\";\n\n      delete slide.html;\n\n      return;\n    }\n\n    const src = slide.src || \"\";\n\n    let type = slide.type || this.fancybox.options.type,\n      rez = null;\n\n    if (src && typeof src !== \"string\") {\n      return;\n    }\n\n    if (\n      (rez = src.match(\n        /(?:youtube\\.com|youtu\\.be|youtube\\-nocookie\\.com)\\/(?:watch\\?(?:.*&)?v=|v\\/|u\\/|embed\\/?)?(videoseries\\?list=(?:.*)|[\\w-]{11}|\\?listType=(?:.*)&list=(?:.*))(?:.*)/i\n      ))\n    ) {\n      const params = buildURLQuery(src, this.fancybox.option(\"Html.youtube\"));\n      const videoId = encodeURIComponent(rez[1]);\n\n      slide.videoId = videoId;\n      slide.src = `https://www.youtube-nocookie.com/embed/${videoId}?${params}`;\n      slide.thumb = slide.thumb || `https://i.ytimg.com/vi/${videoId}/mqdefault.jpg`;\n      slide.vendor = \"youtube\";\n\n      type = \"video\";\n    } else if ((rez = src.match(/^.+vimeo.com\\/(?:\\/)?([\\d]+)(.*)?/))) {\n      const params = buildURLQuery(src, this.fancybox.option(\"Html.vimeo\"));\n      const videoId = encodeURIComponent(rez[1]);\n\n      slide.videoId = videoId;\n      slide.src = `https://player.vimeo.com/video/${videoId}?${params}`;\n      slide.vendor = \"vimeo\";\n\n      type = \"video\";\n    } else if (\n      (rez = src.match(\n        /(?:maps\\.)?google\\.([a-z]{2,3}(?:\\.[a-z]{2})?)\\/(?:(?:(?:maps\\/(?:place\\/(?:.*)\\/)?\\@(.*),(\\d+.?\\d+?)z))|(?:\\?ll=))(.*)?/i\n      ))\n    ) {\n      slide.src = `//maps.google.${rez[1]}/?ll=${(rez[2]\n        ? rez[2] + \"&z=\" + Math.floor(rez[3]) + (rez[4] ? rez[4].replace(/^\\//, \"&\") : \"\")\n        : rez[4] + \"\"\n      ).replace(/\\?/, \"&\")}&output=${rez[4] && rez[4].indexOf(\"layer=c\") > 0 ? \"svembed\" : \"embed\"}`;\n\n      type = \"map\";\n    } else if ((rez = src.match(/(?:maps\\.)?google\\.([a-z]{2,3}(?:\\.[a-z]{2})?)\\/(?:maps\\/search\\/)(.*)/i))) {\n      slide.src = `//maps.google.${rez[1]}/maps?q=${rez[2].replace(\"query=\", \"q=\").replace(\"api=1\", \"\")}&output=embed`;\n\n      type = \"map\";\n    }\n\n    // Guess content type\n    if (!type) {\n      if (src.charAt(0) === \"#\") {\n        type = \"inline\";\n      } else if ((rez = src.match(/\\.(mp4|mov|ogv|webm)((\\?|#).*)?$/i))) {\n        type = \"html5video\";\n\n        slide.format = slide.format || \"video/\" + (rez[1] === \"ogv\" ? \"ogg\" : rez[1]);\n      } else if (src.match(/(^data:image\\/[a-z0-9+\\/=]*,)|(\\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\\?|#).*)?$)/i)) {\n        type = \"image\";\n      } else if (src.match(/\\.(pdf)((\\?|#).*)?$/i)) {\n        type = \"pdf\";\n      }\n    }\n\n    slide.type = type || this.fancybox.option(\"defaultType\", \"image\");\n\n    if (type === \"html5video\" || type === \"video\") {\n      slide.video = extend({}, this.fancybox.option(\"Html.video\"), slide.video);\n\n      if (slide._width && slide._height) {\n        slide.ratio = parseFloat(slide._width) / parseFloat(slide._height);\n      } else {\n        slide.ratio = slide.ratio || slide.video.ratio || defaults.video.ratio;\n      }\n    }\n  }\n\n  /**\n   * Start loading content when Fancybox is ready\n   */\n  onReady() {\n    this.fancybox.Carousel.slides.forEach((slide) => {\n      if (slide.$el) {\n        this.setContent(slide);\n\n        if (slide.index === this.fancybox.getSlide().index) {\n          this.playVideo(slide);\n        }\n      }\n    });\n  }\n\n  /**\n   * Process `Carousel.createSlide` event to create image content\n   * @param {Object} fancybox\n   * @param {Object} carousel\n   * @param {Object} slide\n   */\n  onCreateSlide(fancybox, carousel, slide) {\n    if (this.fancybox.state !== \"ready\") {\n      return;\n    }\n\n    this.setContent(slide);\n  }\n\n  /**\n   * Retrieve and set slide content\n   * @param {Object} slide\n   */\n  loadInlineContent(slide) {\n    let $content;\n\n    if (slide.src instanceof HTMLElement) {\n      $content = slide.src;\n    } else if (typeof slide.src === \"string\") {\n      const tmp = slide.src.split(\"#\", 2);\n      const id = tmp.length === 2 && tmp[0] === \"\" ? tmp[1] : tmp[0];\n\n      $content = document.getElementById(id);\n    }\n\n    if ($content) {\n      if (slide.type === \"clone\" || $content.$placeHolder) {\n        $content = $content.cloneNode(true);\n        let attrId = $content.getAttribute(\"id\");\n\n        attrId = attrId ? `${attrId}--clone` : `clone-${this.fancybox.id}-${slide.index}`;\n\n        $content.setAttribute(\"id\", attrId);\n      } else {\n        const $placeHolder = document.createElement(\"div\");\n        $placeHolder.classList.add(\"fancybox-placeholder\");\n        $content.parentNode.insertBefore($placeHolder, $content);\n        $content.$placeHolder = $placeHolder;\n      }\n\n      this.fancybox.setContent(slide, $content);\n    } else {\n      this.fancybox.setError(slide, \"{{ELEMENT_NOT_FOUND}}\");\n    }\n  }\n\n  /**\n   * Makes AJAX request and sets response as slide content\n   * @param {Object} slide\n   */\n  loadAjaxContent(slide) {\n    const fancybox = this.fancybox;\n    const xhr = new XMLHttpRequest();\n\n    fancybox.showLoading(slide);\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        if (fancybox.state === \"ready\") {\n          fancybox.hideLoading(slide);\n\n          if (xhr.status === 200) {\n            fancybox.setContent(slide, xhr.responseText);\n          } else {\n            fancybox.setError(slide, xhr.status === 404 ? \"{{AJAX_NOT_FOUND}}\" : \"{{AJAX_FORBIDDEN}}\");\n          }\n        }\n      }\n    };\n\n    xhr.open(\"GET\", slide.src);\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n    xhr.send(slide.ajax || null);\n\n    slide.xhr = xhr;\n  }\n\n  /**\n   * Creates iframe as slide content, preloads if needed before displaying\n   * @param {Object} slide\n   */\n  loadIframeContent(slide) {\n    const fancybox = this.fancybox;\n    const $iframe = document.createElement(\"iframe\");\n\n    $iframe.className = \"fancybox__iframe\";\n\n    $iframe.setAttribute(\"id\", `fancybox__iframe_${fancybox.id}_${slide.index}`);\n\n    $iframe.setAttribute(\"allow\", \"autoplay; fullscreen\");\n    $iframe.setAttribute(\"scrolling\", \"auto\");\n\n    slide.$iframe = $iframe;\n\n    if (slide.type !== \"iframe\" || slide.preload === false) {\n      $iframe.setAttribute(\"src\", slide.src);\n\n      this.fancybox.setContent(slide, $iframe);\n\n      this.resizeIframe(slide);\n\n      return;\n    }\n\n    fancybox.showLoading(slide);\n\n    const $content = document.createElement(\"div\");\n    $content.style.visibility = \"hidden\";\n\n    this.fancybox.setContent(slide, $content);\n\n    $content.appendChild($iframe);\n\n    $iframe.onerror = () => {\n      fancybox.setError(slide, \"{{IFRAME_ERROR}}\");\n    };\n\n    $iframe.onload = () => {\n      fancybox.hideLoading(slide);\n\n      let isFirstLoad = false;\n\n      if (!$iframe.isReady) {\n        $iframe.isReady = true;\n        isFirstLoad = true;\n      }\n\n      if (!$iframe.src.length) {\n        return;\n      }\n\n      $iframe.parentNode.style.visibility = \"\";\n\n      this.resizeIframe(slide);\n\n      if (isFirstLoad) {\n        fancybox.revealContent(slide);\n      }\n    };\n\n    $iframe.setAttribute(\"src\", slide.src);\n  }\n\n  /**\n   * Set CSS max/min width/height properties of the content to have the correct aspect ratio\n   * @param {Object} slide\n   */\n  setAspectRatio(slide) {\n    const $content = slide.$content;\n    const ratio = slide.ratio;\n\n    if (!$content) {\n      return;\n    }\n\n    let width = slide._width;\n    let height = slide._height;\n\n    if (ratio || (width && height)) {\n      Object.assign($content.style, {\n        width: width && height ? \"100%\" : \"\",\n        height: width && height ? \"100%\" : \"\",\n        maxWidth: \"\",\n        maxHeight: \"\",\n      });\n\n      let maxWidth = $content.offsetWidth;\n      let maxHeight = $content.offsetHeight;\n\n      width = width || maxWidth;\n      height = height || maxHeight;\n\n      // Resize to fit\n      if (width > maxWidth || height > maxHeight) {\n        let maxRatio = Math.min(maxWidth / width, maxHeight / height);\n\n        width = width * maxRatio;\n        height = height * maxRatio;\n      }\n\n      // Recheck ratio\n      if (Math.abs(width / height - ratio) > 0.01) {\n        if (ratio < width / height) {\n          width = height * ratio;\n        } else {\n          height = width / ratio;\n        }\n      }\n\n      Object.assign($content.style, {\n        width: `${width}px`,\n        height: `${height}px`,\n      });\n    }\n  }\n\n  /**\n   * Adjust the width and height of the iframe according to the content dimensions, or defined sizes\n   * @param {Object} slide\n   */\n  resizeIframe(slide) {\n    const $iframe = slide.$iframe;\n\n    if (!$iframe) {\n      return;\n    }\n\n    let width_ = slide._width || 0;\n    let height_ = slide._height || 0;\n\n    if (width_ && height_) {\n      slide.autoSize = false;\n    }\n\n    const $parent = $iframe.parentNode;\n    const parentStyle = $parent && $parent.style;\n\n    if (slide.preload !== false && slide.autoSize !== false && parentStyle) {\n      try {\n        const compStyles = window.getComputedStyle($parent),\n          paddingX = parseFloat(compStyles.paddingLeft) + parseFloat(compStyles.paddingRight),\n          paddingY = parseFloat(compStyles.paddingTop) + parseFloat(compStyles.paddingBottom);\n\n        const document = $iframe.contentWindow.document,\n          $html = document.getElementsByTagName(\"html\")[0],\n          $body = document.body;\n\n        // Allow content to expand horizontally\n        parentStyle.width = \"\";\n\n        // Get rid of vertical scrollbar\n        $body.style.overflow = \"hidden\";\n\n        width_ = width_ || $html.scrollWidth + paddingX;\n\n        parentStyle.width = `${width_}px`;\n\n        $body.style.overflow = \"\";\n\n        parentStyle.flex = \"0 0 auto\";\n        parentStyle.height = `${$body.scrollHeight}px`;\n\n        height_ = $html.scrollHeight + paddingY;\n      } catch (error) {\n        //\n      }\n    }\n\n    if (width_ || height_) {\n      const newStyle = {\n        flex: \"0 1 auto\",\n      };\n\n      if (width_) {\n        newStyle.width = `${width_}px`;\n      }\n\n      if (height_) {\n        newStyle.height = `${height_}px`;\n      }\n\n      Object.assign(parentStyle, newStyle);\n    }\n  }\n\n  /**\n   * Process `Carousel.onRefresh` event,\n   * trigger iframe autosizing and set content aspect ratio for each slide\n   * @param {Object} fancybox\n   * @param {Object} carousel\n   */\n  onRefresh(fancybox, carousel) {\n    carousel.slides.forEach((slide) => {\n      if (!slide.$el) {\n        return;\n      }\n\n      if (slide.$iframe) {\n        this.resizeIframe(slide);\n      }\n\n      if (slide.ratio) {\n        this.setAspectRatio(slide);\n      }\n    });\n  }\n\n  /**\n   * Process `Carousel.onCreateSlide` event to set content\n   * @param {Object} fancybox\n   * @param {Object} carousel\n   * @param {Object} slide\n   */\n  setContent(slide) {\n    if (!slide || slide.isDom) {\n      return;\n    }\n\n    switch (slide.type) {\n      case \"html\":\n        this.fancybox.setContent(slide, slide.src);\n        break;\n\n      case \"html5video\":\n        this.fancybox.setContent(\n          slide,\n          this.fancybox\n            .option(\"Html.html5video.tpl\")\n            .replace(/\\{\\{src\\}\\}/gi, slide.src)\n            .replace(\"{{format}}\", slide.format || (slide.html5video && slide.html5video.format) || \"\")\n            .replace(\"{{poster}}\", slide.poster || slide.thumb || \"\")\n        );\n\n        break;\n\n      case \"inline\":\n      case \"clone\":\n        this.loadInlineContent(slide);\n        break;\n\n      case \"ajax\":\n        this.loadAjaxContent(slide);\n        break;\n\n      case \"pdf\":\n      case \"video\":\n      case \"map\":\n        slide.preload = false;\n\n      case \"iframe\":\n        this.loadIframeContent(slide);\n\n        break;\n    }\n\n    if (slide.ratio) {\n      this.setAspectRatio(slide);\n    }\n  }\n\n  /**\n   * Process `Carousel.onSelectSlide` event to start video\n   * @param {Object} fancybox\n   * @param {Object} carousel\n   * @param {Object} slide\n   */\n  onSelectSlide(fancybox, carousel, slide) {\n    if (fancybox.state === \"ready\") {\n      this.playVideo(slide);\n    }\n  }\n\n  /**\n   * Attempts to begin playback of the media\n   * @param {Object} slide\n   */\n  playVideo(slide) {\n    if (slide.type === \"html5video\" && slide.video.autoplay) {\n      try {\n        const $video = slide.$el.querySelector(\"video\");\n\n        if ($video) {\n          const promise = $video.play();\n\n          if (promise !== undefined) {\n            promise\n              .then(() => {\n                // Autoplay started\n              })\n              .catch((error) => {\n                // Autoplay was prevented.\n                $video.muted = true;\n                $video.play();\n              });\n          }\n        }\n      } catch (err) {}\n    }\n\n    if (slide.type !== \"video\" || !(slide.$iframe && slide.$iframe.contentWindow)) {\n      return;\n    }\n\n    // This function will be repeatedly called to check\n    // if video iframe has been loaded to send message to start the video\n    const poller = () => {\n      if (slide.state === \"done\" && slide.$iframe && slide.$iframe.contentWindow) {\n        let command;\n\n        if (slide.$iframe.isReady) {\n          if (slide.video && slide.video.autoplay) {\n            if (slide.vendor == \"youtube\") {\n              command = {\n                event: \"command\",\n                func: \"playVideo\",\n              };\n            } else {\n              command = {\n                method: \"play\",\n                value: \"true\",\n              };\n            }\n          }\n\n          if (command) {\n            slide.$iframe.contentWindow.postMessage(JSON.stringify(command), \"*\");\n          }\n\n          return;\n        }\n\n        if (slide.vendor === \"youtube\") {\n          command = {\n            event: \"listening\",\n            id: slide.$iframe.getAttribute(\"id\"),\n          };\n\n          slide.$iframe.contentWindow.postMessage(JSON.stringify(command), \"*\");\n        }\n      }\n\n      slide.poller = setTimeout(poller, 250);\n    };\n\n    poller();\n  }\n\n  /**\n   * Process `Carousel.onUnselectSlide` event to pause video\n   * @param {Object} fancybox\n   * @param {Object} carousel\n   * @param {Object} slide\n   */\n  onUnselectSlide(fancybox, carousel, slide) {\n    if (slide.type === \"html5video\") {\n      try {\n        slide.$el.querySelector(\"video\").pause();\n      } catch (error) {}\n\n      return;\n    }\n\n    let command = false;\n\n    if (slide.vendor == \"vimeo\") {\n      command = {\n        method: \"pause\",\n        value: \"true\",\n      };\n    } else if (slide.vendor === \"youtube\") {\n      command = {\n        event: \"command\",\n        func: \"pauseVideo\",\n      };\n    }\n\n    if (command && slide.$iframe && slide.$iframe.contentWindow) {\n      slide.$iframe.contentWindow.postMessage(JSON.stringify(command), \"*\");\n    }\n\n    clearTimeout(slide.poller);\n  }\n\n  /**\n   * Process `Carousel.onRemoveSlide` event to do clean up\n   * @param {Object} fancybox\n   * @param {Object} carousel\n   * @param {Object} slide\n   */\n  onRemoveSlide(fancybox, carousel, slide) {\n    // Abort ajax request if exists\n    if (slide.xhr) {\n      slide.xhr.abort();\n      slide.xhr = null;\n    }\n\n    // Unload iframe content if exists\n    if (slide.$iframe) {\n      slide.$iframe.onload = slide.$iframe.onerror = null;\n\n      slide.$iframe.src = \"//about:blank\";\n      slide.$iframe = null;\n    }\n\n    // Clear inline content\n    const $content = slide.$content;\n\n    if (slide.type === \"inline\" && $content) {\n      $content.classList.remove(\"fancybox__content\");\n\n      if ($content.style.display !== \"none\") {\n        $content.style.display = \"none\";\n      }\n    }\n\n    if (slide.$closeButton) {\n      slide.$closeButton.remove();\n      slide.$closeButton = null;\n    }\n\n    const $placeHolder = $content && $content.$placeHolder;\n\n    if ($placeHolder) {\n      $placeHolder.parentNode.insertBefore($content, $placeHolder);\n      $placeHolder.remove();\n      $content.$placeHolder = null;\n    }\n  }\n\n  /**\n   * Process `window.message` event to mark video iframe element as `ready`\n   * @param {Object} e - Event\n   */\n  onMessage(e) {\n    try {\n      let data = JSON.parse(e.data);\n\n      if (e.origin === \"https://player.vimeo.com\") {\n        if (data.event === \"ready\") {\n          for (let $iframe of document.getElementsByClassName(\"fancybox__iframe\")) {\n            if ($iframe.contentWindow === e.source) {\n              $iframe.isReady = 1;\n            }\n          }\n        }\n      } else if (e.origin === \"https://www.youtube-nocookie.com\") {\n        if (data.event === \"onReady\") {\n          document.getElementById(data.id).isReady = 1;\n        }\n      }\n    } catch (ex) {}\n  }\n\n  attach() {\n    this.fancybox.on(this.events);\n\n    window.addEventListener(\"message\", this.onMessage, false);\n  }\n\n  detach() {\n    this.fancybox.off(this.events);\n\n    window.removeEventListener(\"message\", this.onMessage, false);\n  }\n}\n\n// Expose defaults\nHtml.defaults = defaults;\n","import { extend } from \"../../../shared/utils/extend.js\";\r\n\r\nimport { Panzoom } from \"../../../Panzoom/Panzoom.js\";\r\n\r\nconst defaults = {\r\n  // Class name for slide element indicating that content can be zoomed in\r\n  canZoomInClass: \"can-zoom_in\",\r\n\r\n  // Class name for slide element indicating that content can be zoomed out\r\n  canZoomOutClass: \"can-zoom_out\",\r\n\r\n  // Do zoom animation from thumbnail image when starting or closing fancybox\r\n  zoom: true,\r\n\r\n  // Animate opacity while zooming\r\n  zoomOpacity: \"auto\", // \"auto\" | true | false,\r\n\r\n  // Zoom animation friction\r\n  zoomFriction: 0.82,\r\n\r\n  // Disable zoom animation if thumbnail is visible only partly\r\n  ignoreCoveredThumbnail: false,\r\n\r\n  // Enable guestures\r\n  touch: true,\r\n\r\n  // Action to be performed when user clicks on the image\r\n  click: \"toggleZoom\", // \"toggleZoom\" | \"next\" | \"close\" | null\r\n\r\n  // Action to be performed when double-click event is detected on the image\r\n  doubleClick: null, // \"toggleZoom\" | null\r\n\r\n  // Action to be performed when user rotates a wheel button on a pointing device\r\n  wheel: \"zoom\", // \"zoom\" | \"slide\" | \"close\" | null\r\n\r\n  // How image should be resized to fit its container\r\n  fit: \"contain\", // \"contain\" | \"contain-w\" | \"cover\"\r\n\r\n  // Should create wrapping element around the image\r\n  wrap: false,\r\n\r\n  // Custom Panzoom options\r\n  Panzoom: {\r\n    ratio: 1,\r\n  },\r\n};\r\n\r\nexport class Image {\r\n  constructor(fancybox) {\r\n    this.fancybox = fancybox;\r\n\r\n    for (const methodName of [\r\n      // Fancybox\r\n      \"onReady\",\r\n      \"onClosing\",\r\n      \"onDone\",\r\n\r\n      // Fancybox.Carousel\r\n      \"onPageChange\",\r\n      \"onCreateSlide\",\r\n      \"onRemoveSlide\",\r\n\r\n      // Image load/error\r\n      \"onImageStatusChange\",\r\n    ]) {\r\n      this[methodName] = this[methodName].bind(this);\r\n    }\r\n\r\n    this.events = {\r\n      ready: this.onReady,\r\n      closing: this.onClosing,\r\n      done: this.onDone,\r\n\r\n      \"Carousel.change\": this.onPageChange,\r\n      \"Carousel.createSlide\": this.onCreateSlide,\r\n      \"Carousel.removeSlide\": this.onRemoveSlide,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Handle `ready` event to start loading content\r\n   */\r\n  onReady() {\r\n    this.fancybox.Carousel.slides.forEach((slide) => {\r\n      if (slide.$el) {\r\n        this.setContent(slide);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle `done` event to update cursor\r\n   * @param {Object} fancybox\r\n   * @param {Object} slide\r\n   */\r\n  onDone(fancybox, slide) {\r\n    this.handleCursor(slide);\r\n  }\r\n\r\n  /**\r\n   * Handle `closing` event to clean up all slides and to start zoom-out animation\r\n   * @param {Object} fancybox\r\n   */\r\n  onClosing(fancybox) {\r\n    clearTimeout(this.clickTimer);\r\n    this.clickTimer = null;\r\n\r\n    // Remove events\r\n    fancybox.Carousel.slides.forEach((slide) => {\r\n      if (slide.$image) {\r\n        slide.state = \"destroy\";\r\n      }\r\n\r\n      if (slide.Panzoom) {\r\n        slide.Panzoom.detachEvents();\r\n      }\r\n    });\r\n\r\n    // If possible, start the zoom animation, it will interrupt the default closing process\r\n    if (this.fancybox.state === \"closing\" && this.canZoom(fancybox.getSlide())) {\r\n      this.zoomOut();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Process `Carousel.createSlide` event to create image content\r\n   * @param {Object} fancybox\r\n   * @param {Object} carousel\r\n   * @param {Object} slide\r\n   */\r\n  onCreateSlide(fancybox, carousel, slide) {\r\n    if (this.fancybox.state !== \"ready\") {\r\n      return;\r\n    }\r\n\r\n    this.setContent(slide);\r\n  }\r\n\r\n  /**\r\n   * Handle `Carousel.removeSlide` event to do clean up the slide\r\n   * @param {Object} fancybox\r\n   * @param {Object} carousel\r\n   * @param {Object} slide\r\n   */\r\n  onRemoveSlide(fancybox, carousel, slide) {\r\n    if (slide.$image) {\r\n      slide.$el.classList.remove(fancybox.option(\"Image.canZoomInClass\"));\r\n\r\n      slide.$image.remove();\r\n      slide.$image = null;\r\n    }\r\n\r\n    if (slide.Panzoom) {\r\n      slide.Panzoom.destroy();\r\n      slide.Panzoom = null;\r\n    }\r\n\r\n    if (slide.$el && slide.$el.dataset) {\r\n      delete slide.$el.dataset.imageFit;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Build DOM elements and add event listeners\r\n   * @param {Object} slide\r\n   */\r\n  setContent(slide) {\r\n    // Check if this slide should contain an image\r\n    if (slide.isDom || slide.html || (slide.type && slide.type !== \"image\")) {\r\n      return;\r\n    }\r\n\r\n    if (slide.$image) {\r\n      return;\r\n    }\r\n\r\n    slide.type = \"image\";\r\n    slide.state = \"loading\";\r\n\r\n    // * Build layout\r\n    // Container\r\n    const $content = document.createElement(\"div\");\r\n    $content.style.visibility = \"hidden\";\r\n\r\n    // Image element\r\n    const $image = document.createElement(\"img\");\r\n\r\n    $image.addEventListener(\"load\", (event) => {\r\n      event.stopImmediatePropagation();\r\n\r\n      this.onImageStatusChange(slide);\r\n    });\r\n\r\n    $image.addEventListener(\"error\", () => {\r\n      this.onImageStatusChange(slide);\r\n    });\r\n\r\n    $image.src = slide.src;\r\n    $image.alt = \"\";\r\n    $image.draggable = false;\r\n\r\n    $image.classList.add(\"fancybox__image\");\r\n\r\n    if (slide.srcset) {\r\n      $image.setAttribute(\"srcset\", slide.srcset);\r\n    }\r\n\r\n    if (slide.sizes) {\r\n      $image.setAttribute(\"sizes\", slide.sizes);\r\n    }\r\n\r\n    slide.$image = $image;\r\n\r\n    const shouldWrap = this.fancybox.option(\"Image.wrap\");\r\n\r\n    if (shouldWrap) {\r\n      const $wrap = document.createElement(\"div\");\r\n      $wrap.classList.add(typeof shouldWrap === \"string\" ? shouldWrap : \"fancybox__image-wrap\");\r\n\r\n      $wrap.appendChild($image);\r\n\r\n      $content.appendChild($wrap);\r\n\r\n      slide.$wrap = $wrap;\r\n    } else {\r\n      $content.appendChild($image);\r\n    }\r\n\r\n    // Set data attribute if other that default\r\n    // for example, set `[data-image-fit=\"contain-w\"]`\r\n    slide.$el.dataset.imageFit = this.fancybox.option(\"Image.fit\");\r\n\r\n    // Append content\r\n    this.fancybox.setContent(slide, $content);\r\n\r\n    // Display loading icon\r\n    if ($image.complete || $image.error) {\r\n      this.onImageStatusChange(slide);\r\n    } else {\r\n      this.fancybox.showLoading(slide);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle image state change, display error or start revealing image\r\n   * @param {Object} slide\r\n   */\r\n  onImageStatusChange(slide) {\r\n    const $image = slide.$image;\r\n\r\n    if (!$image || slide.state !== \"loading\") {\r\n      return;\r\n    }\r\n\r\n    if (!($image.complete && $image.naturalWidth && $image.naturalHeight)) {\r\n      this.fancybox.setError(slide, \"{{IMAGE_ERROR}}\");\r\n\r\n      return;\r\n    }\r\n\r\n    this.fancybox.hideLoading(slide);\r\n\r\n    if (this.fancybox.option(\"Image.fit\") === \"contain\") {\r\n      this.initSlidePanzoom(slide);\r\n    }\r\n\r\n    // Add `wheel` and `click` event handler\r\n    slide.$el.addEventListener(\"wheel\", (event) => this.onWheel(slide, event), { passive: false });\r\n    slide.$content.addEventListener(\"click\", (event) => this.onClick(slide, event), { passive: false });\r\n\r\n    this.revealContent(slide);\r\n  }\r\n\r\n  /**\r\n   * Make image zoomable and draggable using Panzoom\r\n   * @param {Object} slide\r\n   */\r\n  initSlidePanzoom(slide) {\r\n    if (slide.Panzoom) {\r\n      return;\r\n    }\r\n\r\n    //* Initialize Panzoom\r\n    slide.Panzoom = new Panzoom(\r\n      slide.$el,\r\n      extend(true, this.fancybox.option(\"Image.Panzoom\", {}), {\r\n        viewport: slide.$wrap,\r\n        content: slide.$image,\r\n\r\n        width: slide._width,\r\n        height: slide._height,\r\n\r\n        wrapInner: false,\r\n\r\n        // Allow to select caption text\r\n        textSelection: true,\r\n\r\n        // Toggle gestures\r\n        touch: this.fancybox.option(\"Image.touch\"),\r\n\r\n        // This will prevent click conflict with fancybox main carousel\r\n        panOnlyZoomed: true,\r\n\r\n        // Disable default click / wheel events as custom event listeners will replace them,\r\n        // because click and wheel events should work without Panzoom\r\n        click: false,\r\n        wheel: false,\r\n      })\r\n    );\r\n\r\n    slide.Panzoom.on(\"startAnimation\", () => {\r\n      this.fancybox.trigger(\"Image.startAnimation\", slide);\r\n    });\r\n\r\n    slide.Panzoom.on(\"endAnimation\", () => {\r\n      if (slide.state === \"zoomIn\") {\r\n        this.fancybox.done(slide);\r\n      }\r\n\r\n      this.handleCursor(slide);\r\n\r\n      this.fancybox.trigger(\"Image.endAnimation\", slide);\r\n    });\r\n\r\n    slide.Panzoom.on(\"afterUpdate\", () => {\r\n      this.handleCursor(slide);\r\n\r\n      this.fancybox.trigger(\"Image.afterUpdate\", slide);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Start zoom-in animation if possible, or simply reveal content\r\n   * @param {Object} slide\r\n   */\r\n  revealContent(slide) {\r\n    // Animate only on first run\r\n    if (\r\n      this.fancybox.Carousel.prevPage === null &&\r\n      slide.index === this.fancybox.options.startIndex &&\r\n      this.canZoom(slide)\r\n    ) {\r\n      this.zoomIn();\r\n    } else {\r\n      this.fancybox.revealContent(slide);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get zoom info for selected slide\r\n   * @param {Object} slide\r\n   */\r\n  getZoomInfo(slide) {\r\n    const $thumb = slide.$thumb,\r\n      thumbRect = $thumb.getBoundingClientRect(),\r\n      thumbWidth = thumbRect.width,\r\n      thumbHeight = thumbRect.height,\r\n      //\r\n      contentRect = slide.$content.getBoundingClientRect(),\r\n      contentWidth = contentRect.width,\r\n      contentHeight = contentRect.height,\r\n      //\r\n      shiftedTop = contentRect.top - thumbRect.top,\r\n      shiftedLeft = contentRect.left - thumbRect.left;\r\n\r\n    // Check if need to update opacity\r\n    let opacity = this.fancybox.option(\"Image.zoomOpacity\");\r\n\r\n    if (opacity === \"auto\") {\r\n      opacity = Math.abs(thumbWidth / thumbHeight - contentWidth / contentHeight) > 0.1;\r\n    }\r\n\r\n    return {\r\n      top: shiftedTop,\r\n      left: shiftedLeft,\r\n      scale: contentWidth && thumbWidth ? thumbWidth / contentWidth : 1,\r\n      opacity: opacity,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Determine if it is possible to do zoom-in animation\r\n   */\r\n  canZoom(slide) {\r\n    const fancybox = this.fancybox,\r\n      $container = fancybox.$container;\r\n\r\n    if (window.visualViewport && window.visualViewport.scale !== 1) {\r\n      return false;\r\n    }\r\n\r\n    if (slide.Panzoom && !slide.Panzoom.content.width) {\r\n      return false;\r\n    }\r\n\r\n    if (!fancybox.option(\"Image.zoom\") || fancybox.option(\"Image.fit\") !== \"contain\") {\r\n      return false;\r\n    }\r\n\r\n    const $thumb = slide.$thumb;\r\n\r\n    if (!$thumb || slide.state === \"loading\") {\r\n      return false;\r\n    }\r\n\r\n    // * Check if thumbnail image is really visible\r\n    $container.classList.add(\"fancybox__no-click\");\r\n\r\n    const rect = $thumb.getBoundingClientRect();\r\n\r\n    let rez;\r\n\r\n    // Check if thumbnail image is actually visible on the screen\r\n    if (this.fancybox.option(\"Image.ignoreCoveredThumbnail\")) {\r\n      const visibleTopLeft = document.elementFromPoint(rect.left + 1, rect.top + 1) === $thumb;\r\n      const visibleBottomRight = document.elementFromPoint(rect.right - 1, rect.bottom - 1) === $thumb;\r\n\r\n      rez = visibleTopLeft && visibleBottomRight;\r\n    } else {\r\n      rez = document.elementFromPoint(rect.left + rect.width * 0.5, rect.top + rect.height * 0.5) === $thumb;\r\n    }\r\n\r\n    $container.classList.remove(\"fancybox__no-click\");\r\n\r\n    return rez;\r\n  }\r\n\r\n  /**\r\n   * Perform zoom-in animation\r\n   */\r\n  zoomIn() {\r\n    const fancybox = this.fancybox,\r\n      slide = fancybox.getSlide(),\r\n      Panzoom = slide.Panzoom;\r\n\r\n    const { top, left, scale, opacity } = this.getZoomInfo(slide);\r\n\r\n    fancybox.trigger(\"reveal\", slide);\r\n\r\n    // Scale and move to start position\r\n    Panzoom.panTo({\r\n      x: left * -1,\r\n      y: top * -1,\r\n      scale: scale,\r\n      friction: 0,\r\n      ignoreBounds: true,\r\n    });\r\n\r\n    slide.$content.style.visibility = \"\";\r\n\r\n    slide.state = \"zoomIn\";\r\n\r\n    if (opacity === true) {\r\n      Panzoom.on(\"afterTransform\", (panzoom) => {\r\n        if (slide.state === \"zoomIn\" || slide.state === \"zoomOut\") {\r\n          panzoom.$content.style.opacity = Math.min(1, 1 - (1 - panzoom.content.scale) / (1 - scale));\r\n        }\r\n      });\r\n    }\r\n\r\n    // Animate back to original position\r\n    Panzoom.panTo({\r\n      x: 0,\r\n      y: 0,\r\n      scale: 1,\r\n      friction: this.fancybox.option(\"Image.zoomFriction\"),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Perform zoom-out animation\r\n   */\r\n  zoomOut() {\r\n    const fancybox = this.fancybox,\r\n      slide = fancybox.getSlide(),\r\n      Panzoom = slide.Panzoom;\r\n\r\n    if (!Panzoom) {\r\n      return;\r\n    }\r\n\r\n    slide.state = \"zoomOut\";\r\n    fancybox.state = \"customClosing\";\r\n\r\n    if (slide.$caption) {\r\n      slide.$caption.style.visibility = \"hidden\";\r\n    }\r\n\r\n    let friction = this.fancybox.option(\"Image.zoomFriction\");\r\n\r\n    const animatePosition = (event) => {\r\n      const { top, left, scale, opacity } = this.getZoomInfo(slide);\r\n\r\n      // Increase speed on the first run if opacity is not animated\r\n      if (!event && !opacity) {\r\n        friction *= 0.82;\r\n      }\r\n\r\n      Panzoom.panTo({\r\n        x: left * -1,\r\n        y: top * -1,\r\n        scale,\r\n        friction,\r\n        ignoreBounds: true,\r\n      });\r\n\r\n      // Gradually increase speed\r\n      friction *= 0.98;\r\n    };\r\n\r\n    // Page scrolling will cause thumbnail to change position on the display,\r\n    // therefore animation end position has to be recalculated after each page scroll\r\n    window.addEventListener(\"scroll\", animatePosition);\r\n\r\n    Panzoom.once(\"endAnimation\", () => {\r\n      window.removeEventListener(\"scroll\", animatePosition);\r\n      fancybox.destroy();\r\n    });\r\n\r\n    animatePosition();\r\n  }\r\n\r\n  /**\r\n   * Set the type of mouse cursor to indicate if content is zoomable\r\n   * @param {Object} slide\r\n   */\r\n  handleCursor(slide) {\r\n    if (slide.type !== \"image\" || !slide.$el) {\r\n      return;\r\n    }\r\n\r\n    const panzoom = slide.Panzoom;\r\n    const clickAction = this.fancybox.option(\"Image.click\", false, slide);\r\n    const touchIsEnabled = this.fancybox.option(\"Image.touch\");\r\n\r\n    const classList = slide.$el.classList;\r\n\r\n    const zoomInClass = this.fancybox.option(\"Image.canZoomInClass\");\r\n    const zoomOutClass = this.fancybox.option(\"Image.canZoomOutClass\");\r\n\r\n    classList.remove(zoomOutClass);\r\n    classList.remove(zoomInClass);\r\n\r\n    if (panzoom && clickAction === \"toggleZoom\") {\r\n      const canZoomIn =\r\n        panzoom && panzoom.content.scale === 1 && panzoom.option(\"maxScale\") - panzoom.content.scale > 0.01;\r\n\r\n      if (canZoomIn) {\r\n        classList.add(zoomInClass);\r\n      } else if (panzoom.content.scale > 1 && !touchIsEnabled) {\r\n        classList.add(zoomOutClass);\r\n      }\r\n    } else if (clickAction === \"close\") {\r\n      classList.add(zoomOutClass);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle `wheel` event\r\n   * @param {Object} slide\r\n   * @param {Object} event\r\n   */\r\n  onWheel(slide, event) {\r\n    if (this.fancybox.state !== \"ready\") {\r\n      return;\r\n    }\r\n\r\n    if (this.fancybox.trigger(\"Image.wheel\", event) === false) {\r\n      return;\r\n    }\r\n\r\n    switch (this.fancybox.option(\"Image.wheel\")) {\r\n      case \"zoom\":\r\n        if (slide.state === \"done\") {\r\n          slide.Panzoom && slide.Panzoom.zoomWithWheel(event);\r\n        }\r\n\r\n        break;\r\n\r\n      case \"close\":\r\n        this.fancybox.close();\r\n\r\n        break;\r\n\r\n      case \"slide\":\r\n        this.fancybox[event.deltaY < 0 ? \"prev\" : \"next\"]();\r\n\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle `click` and `dblclick` events\r\n   * @param {Object} slide\r\n   * @param {Object} event\r\n   */\r\n  onClick(slide, event) {\r\n    // Check that clicks should be allowed\r\n    if (this.fancybox.state !== \"ready\") {\r\n      return;\r\n    }\r\n\r\n    const panzoom = slide.Panzoom;\r\n\r\n    if (\r\n      panzoom &&\r\n      (panzoom.dragPosition.midPoint ||\r\n        panzoom.dragOffset.x !== 0 ||\r\n        panzoom.dragOffset.y !== 0 ||\r\n        panzoom.dragOffset.scale !== 1)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (this.fancybox.Carousel.Panzoom.lockAxis) {\r\n      return false;\r\n    }\r\n\r\n    const process = (action) => {\r\n      switch (action) {\r\n        case \"toggleZoom\":\r\n          event.stopPropagation();\r\n\r\n          slide.Panzoom && slide.Panzoom.zoomWithClick(event);\r\n\r\n          break;\r\n\r\n        case \"close\":\r\n          this.fancybox.close();\r\n\r\n          break;\r\n\r\n        case \"next\":\r\n          event.stopPropagation();\r\n\r\n          this.fancybox.next();\r\n\r\n          break;\r\n      }\r\n    };\r\n\r\n    const clickAction = this.fancybox.option(\"Image.click\");\r\n    const dblclickAction = this.fancybox.option(\"Image.doubleClick\");\r\n\r\n    if (dblclickAction) {\r\n      if (this.clickTimer) {\r\n        clearTimeout(this.clickTimer);\r\n        this.clickTimer = null;\r\n\r\n        process(dblclickAction);\r\n      } else {\r\n        this.clickTimer = setTimeout(() => {\r\n          this.clickTimer = null;\r\n          process(clickAction);\r\n        }, 300);\r\n      }\r\n    } else {\r\n      process(clickAction);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle `Carousel.change` event to reset zoom level for any zoomed in/out content\r\n   * and to revel content of the current page\r\n   * @param {Object} fancybox\r\n   * @param {Object} carousel\r\n   */\r\n  onPageChange(fancybox, carousel) {\r\n    const currSlide = fancybox.getSlide();\r\n\r\n    carousel.slides.forEach((slide) => {\r\n      if (!slide.Panzoom || slide.state !== \"done\") {\r\n        return;\r\n      }\r\n\r\n      if (slide.index !== currSlide.index) {\r\n        slide.Panzoom.panTo({\r\n          x: 0,\r\n          y: 0,\r\n          scale: 1,\r\n          friction: 0.8,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  attach() {\r\n    this.fancybox.on(this.events);\r\n  }\r\n\r\n  detach() {\r\n    this.fancybox.off(this.events);\r\n  }\r\n}\r\n\r\n// Expose defaults\r\nImage.defaults = defaults;\r\n","import { isScrollable } from \"../../../../src/shared/utils/isScrollable.js\";\n\nexport class ScrollLock {\n  constructor(fancybox) {\n    this.fancybox = fancybox;\n    this.viewport = null;\n\n    this.pendingUpdate = null;\n\n    for (const methodName of [\"onReady\", \"onResize\", \"onTouchstart\", \"onTouchmove\"]) {\n      this[methodName] = this[methodName].bind(this);\n    }\n  }\n\n  /**\n   * Process `initLayout` event to attach event listeners and resize viewport if needed\n   */\n  onReady() {\n    //* Support Visual Viewport API\n    // https://developer.mozilla.org/en-US/docs/Web/API/Visual_Viewport_API\n    const viewport = window.visualViewport;\n\n    if (viewport) {\n      this.viewport = viewport;\n      this.startY = 0;\n\n      viewport.addEventListener(\"resize\", this.onResize);\n\n      this.updateViewport();\n    }\n\n    //* Prevent bouncing while scrolling on mobile devices\n    window.addEventListener(\"touchstart\", this.onTouchstart, { passive: false });\n    window.addEventListener(\"touchmove\", this.onTouchmove, { passive: false });\n\n    //* Prevent window scrolling with mouse wheel\n    window.addEventListener(\"wheel\", this.onWheel, { passive: false });\n  }\n\n  /**\n   * Handle `resize` event to call `updateViewport`\n   */\n  onResize() {\n    this.updateViewport();\n  }\n\n  /**\n   * Scale $container proportionally to actually fit inside browser,\n   * e.g., disable viewport zooming\n   */\n  updateViewport() {\n    const fancybox = this.fancybox,\n      viewport = this.viewport,\n      scale = viewport.scale || 1,\n      $container = fancybox.$container;\n\n    if (!$container) {\n      return;\n    }\n\n    let width = \"\",\n      height = \"\",\n      transform = \"\";\n\n    if (scale - 1 > 0.1) {\n      width = `${viewport.width * scale}px`;\n      height = `${viewport.height * scale}px`;\n      transform = `translate3d(${viewport.offsetLeft}px, ${viewport.offsetTop}px, 0) scale(${1 / scale})`;\n    }\n\n    $container.style.width = width;\n    $container.style.height = height;\n    $container.style.transform = transform;\n  }\n\n  /**\n   * Handle `touchstart` event to mark drag start position\n   * @param {Object} event\n   */\n  onTouchstart(event) {\n    this.startY = event.touches ? event.touches[0].screenY : event.screenY;\n  }\n\n  /**\n   * Handle `touchmove` event to fix scrolling on mobile devices (iOS)\n   * @param {Object} event\n   */\n  onTouchmove(event) {\n    const startY = this.startY;\n    const zoom = window.innerWidth / window.document.documentElement.clientWidth;\n\n    if (!event.cancelable) {\n      return;\n    }\n\n    if (event.touches.length > 1 || zoom !== 1) {\n      return;\n    }\n\n    const el = isScrollable(event.composedPath()[0]);\n\n    if (!el) {\n      event.preventDefault();\n      return;\n    }\n\n    const style = window.getComputedStyle(el);\n    const height = parseInt(style.getPropertyValue(\"height\"), 10);\n\n    const curY = event.touches ? event.touches[0].screenY : event.screenY;\n\n    const isAtTop = startY <= curY && el.scrollTop === 0;\n    const isAtBottom = startY >= curY && el.scrollHeight - el.scrollTop === height;\n\n    if (isAtTop || isAtBottom) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Handle `wheel` event\n   */\n  onWheel(event) {\n    if (!isScrollable(event.composedPath()[0])) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Clean everything up\n   */\n  cleanup() {\n    if (this.pendingUpdate) {\n      cancelAnimationFrame(this.pendingUpdate);\n      this.pendingUpdate = null;\n    }\n\n    const viewport = this.viewport;\n\n    if (viewport) {\n      viewport.removeEventListener(\"resize\", this.onResize);\n      this.viewport = null;\n    }\n\n    window.removeEventListener(\"touchstart\", this.onTouchstart, false);\n    window.removeEventListener(\"touchmove\", this.onTouchmove, false);\n\n    window.removeEventListener(\"wheel\", this.onWheel, { passive: false });\n  }\n\n  attach() {\n    this.fancybox.on(\"initLayout\", this.onReady);\n  }\n\n  detach() {\n    this.fancybox.off(\"initLayout\", this.onReady);\n\n    this.cleanup();\n  }\n}\n","import { extend } from \"../../../shared/utils/extend.js\";\nimport { Carousel } from \"../../../Carousel/Carousel.js\";\n\nconst defaults = {\n  // The minimum number of images in the gallery to display thumbnails\n  minSlideCount: 2,\n\n  // Minimum screen height to display thumbnails\n  minScreenHeight: 500,\n\n  // Automatically show thumbnails when opened\n  autoStart: true,\n\n  // Keyboard shortcut to toggle thumbnail container\n  key: \"t\",\n\n  // Customize Carousel instance\n  Carousel: {},\n};\n\nexport class Thumbs {\n  constructor(fancybox) {\n    this.fancybox = fancybox;\n\n    this.$container = null;\n    this.state = \"init\";\n\n    for (const methodName of [\"onPrepare\", \"onClosing\", \"onKeydown\"]) {\n      this[methodName] = this[methodName].bind(this);\n    }\n\n    this.events = {\n      prepare: this.onPrepare,\n      closing: this.onClosing,\n      keydown: this.onKeydown,\n    };\n  }\n\n  /**\n   * Process `prepare` event to build the layout\n   */\n  onPrepare() {\n    // Get slides, skip if the total number is less than the minimum\n    const slides = this.getSlides();\n\n    if (slides.length < this.fancybox.option(\"Thumbs.minSlideCount\")) {\n      this.state = \"disabled\";\n      return;\n    }\n\n    if (\n      this.fancybox.option(\"Thumbs.autoStart\") === true &&\n      this.fancybox.Carousel.Panzoom.content.height >= this.fancybox.option(\"Thumbs.minScreenHeight\")\n    ) {\n      this.build();\n    }\n  }\n\n  /**\n   * Process `closing` event to disable all events\n   */\n  onClosing() {\n    if (this.Carousel) {\n      this.Carousel.Panzoom.detachEvents();\n    }\n  }\n\n  /**\n   * Process `keydown` event to enable thumbnail list toggling using keyboard key\n   * @param {Object} fancybox\n   * @param {String} key\n   */\n  onKeydown(fancybox, key) {\n    if (key === fancybox.option(\"Thumbs.key\")) {\n      this.toggle();\n    }\n  }\n\n  /**\n   * Build layout and init thumbnail Carousel\n   */\n  build() {\n    if (this.$container) {\n      return;\n    }\n\n    // Create wrapping element and append to layout\n    const $container = document.createElement(\"div\");\n\n    $container.classList.add(\"fancybox__thumbs\");\n\n    this.fancybox.$carousel.parentNode.insertBefore($container, this.fancybox.$carousel.nextSibling);\n\n    // Initialise thumbnail carousel with all slides\n    this.Carousel = new Carousel(\n      $container,\n      extend(\n        true,\n        {\n          Dots: false,\n          Navigation: false,\n          Sync: {\n            friction: 0,\n          },\n          infinite: false,\n          center: true,\n          fill: true,\n          dragFree: true,\n          slidesPerPage: 1,\n          preload: 1,\n        },\n        this.fancybox.option(\"Thumbs.Carousel\"),\n        {\n          Sync: {\n            target: this.fancybox.Carousel,\n          },\n          slides: this.getSlides(),\n        }\n      )\n    );\n\n    // Slide carousel on wheel event\n    this.Carousel.Panzoom.on(\"wheel\", (panzoom, event) => {\n      event.preventDefault();\n\n      this.fancybox[event.deltaY < 0 ? \"prev\" : \"next\"]();\n    });\n\n    this.$container = $container;\n\n    this.state = \"visible\";\n  }\n\n  /**\n   * Process all fancybox slides to get all thumbnail images\n   */\n  getSlides() {\n    const slides = [];\n\n    for (const slide of this.fancybox.items) {\n      const thumb = slide.thumb;\n\n      if (thumb) {\n        slides.push({\n          html: `<div class=\"fancybox__thumb\" style=\"background-image:url('${thumb}')\"></div>`,\n          customClass: `has-thumb has-${slide.type || \"image\"}`,\n        });\n      }\n    }\n\n    return slides;\n  }\n\n  /**\n   * Toggle visibility of thumbnail list\n   * Tip: you can use `Fancybox.getInstance().plugins.Thumbs.toggle()` from anywhere in your code\n   */\n  toggle() {\n    if (this.state === \"visible\") {\n      this.hide();\n    } else if (this.state === \"hidden\") {\n      this.show();\n    } else {\n      this.build();\n    }\n  }\n\n  /**\n   * Show thumbnail list\n   */\n  show() {\n    if (this.state === \"hidden\") {\n      this.$container.style.display = \"\";\n\n      this.Carousel.Panzoom.attachEvents();\n\n      this.state = \"visible\";\n    }\n  }\n\n  /**\n   * Hide thumbnail list\n   */\n  hide() {\n    if (this.state === \"visible\") {\n      this.Carousel.Panzoom.detachEvents();\n\n      this.$container.style.display = \"none\";\n\n      this.state = \"hidden\";\n    }\n  }\n\n  /**\n   * Reset the state\n   */\n  cleanup() {\n    if (this.Carousel) {\n      this.Carousel.destroy();\n      this.Carousel = null;\n    }\n\n    if (this.$container) {\n      this.$container.remove();\n      this.$container = null;\n    }\n\n    this.state = \"init\";\n  }\n\n  attach() {\n    this.fancybox.on(this.events);\n  }\n\n  detach() {\n    this.fancybox.off(this.events);\n\n    this.cleanup();\n  }\n}\n\n// Expose defaults\nThumbs.defaults = defaults;\n","import { isPlainObject } from \"../../../shared/utils/isPlainObject.js\";\r\nimport { extend } from \"../../../shared/utils/extend.js\";\r\n\r\nimport { Fullscreen } from \"../../../shared/utils/Fullscreen.js\";\r\nimport { Slideshow } from \"../../../shared/utils/Slideshow.js\";\r\n\r\nconst defaults = {\r\n  // What toolbar items to display\r\n  display: [\r\n    \"counter\",\r\n    //\"prev\",\r\n    //\"next\",\r\n    //\"download\",\r\n    \"zoom\",\r\n    \"slideshow\",\r\n    \"fullscreen\",\r\n    \"thumbs\",\r\n    \"close\",\r\n  ],\r\n\r\n  // Only create a toolbar item if there is at least one image in the group\r\n  autoEnable: true,\r\n\r\n  // Toolbar items; can be links, buttons or `div` elements\r\n  items: {\r\n    counter: {\r\n      position: \"left\",\r\n      type: \"div\",\r\n      class: \"fancybox__counter\",\r\n      html: '<span data-fancybox-index=\"\"></span>&nbsp;/&nbsp;<span data-fancybox-count=\"\"></span>',\r\n      attr: { tabindex: -1 },\r\n    },\r\n    prev: {\r\n      type: \"button\",\r\n      class: \"fancybox__button--prev\",\r\n      label: \"PREV\",\r\n      html: '<svg viewBox=\"0 0 24 24\"><path d=\"M15 4l-8 8 8 8\"/></svg>',\r\n      attr: { \"data-fancybox-prev\": \"\" },\r\n    },\r\n    next: {\r\n      type: \"button\",\r\n      class: \"fancybox__button--next\",\r\n      label: \"NEXT\",\r\n      html: '<svg viewBox=\"0 0 24 24\"><path d=\"M8 4l8 8-8 8\"/></svg>',\r\n      attr: { \"data-fancybox-next\": \"\" },\r\n    },\r\n    fullscreen: {\r\n      type: \"button\",\r\n      class: \"fancybox__button--fullscreen\",\r\n      label: \"TOGGLE_FULLSCREEN\",\r\n      html: `<svg viewBox=\"0 0 24 24\">\r\n                <g><path d=\"M3 8 V3h5\"></path><path d=\"M21 8V3h-5\"></path><path d=\"M8 21H3v-5\"></path><path d=\"M16 21h5v-5\"></path></g>\r\n                <g><path d=\"M7 2v5H2M17 2v5h5M2 17h5v5M22 17h-5v5\"/></g>\r\n            </svg>`,\r\n      click: function (event) {\r\n        event.preventDefault();\r\n\r\n        if (Fullscreen.element()) {\r\n          Fullscreen.deactivate();\r\n        } else {\r\n          Fullscreen.activate(this.fancybox.$container);\r\n        }\r\n      },\r\n    },\r\n    slideshow: {\r\n      type: \"button\",\r\n      class: \"fancybox__button--slideshow\",\r\n      label: \"TOGGLE_SLIDESHOW\",\r\n      html: `<svg viewBox=\"0 0 24 24\">\r\n                <g><path d=\"M6 4v16\"/><path d=\"M20 12L6 20\"/><path d=\"M20 12L6 4\"/></g>\r\n                <g><path d=\"M7 4v15M17 4v15\"/></g>\r\n            </svg>`,\r\n      click: function (event) {\r\n        event.preventDefault();\r\n\r\n        this.Slideshow.toggle();\r\n      },\r\n    },\r\n    zoom: {\r\n      type: \"button\",\r\n      class: \"fancybox__button--zoom\",\r\n      label: \"TOGGLE_ZOOM\",\r\n      html: '<svg viewBox=\"0 0 24 24\"><circle cx=\"10\" cy=\"10\" r=\"7\"></circle><path d=\"M16 16 L21 21\"></svg>',\r\n      click: function (event) {\r\n        event.preventDefault();\r\n\r\n        const panzoom = this.fancybox.getSlide().Panzoom;\r\n\r\n        if (panzoom) {\r\n          panzoom.toggleZoom();\r\n        }\r\n      },\r\n    },\r\n    download: {\r\n      type: \"link\",\r\n      label: \"DOWNLOAD\",\r\n      class: \"fancybox__button--download\",\r\n      html: '<svg viewBox=\"0 0 24 24\"><path d=\"M12 15V3m0 12l-4-4m4 4l4-4M2 17l.62 2.48A2 2 0 004.56 21h14.88a2 2 0 001.94-1.51L22 17\"/></svg>',\r\n      click: function (event) {\r\n        event.stopPropagation();\r\n      },\r\n    },\r\n    thumbs: {\r\n      type: \"button\",\r\n      label: \"TOGGLE_THUMBS\",\r\n      class: \"fancybox__button--thumbs\",\r\n      html: '<svg viewBox=\"0 0 24 24\"><circle cx=\"4\" cy=\"4\" r=\"1\" /><circle cx=\"12\" cy=\"4\" r=\"1\" transform=\"rotate(90 12 4)\"/><circle cx=\"20\" cy=\"4\" r=\"1\" transform=\"rotate(90 20 4)\"/><circle cx=\"4\" cy=\"12\" r=\"1\" transform=\"rotate(90 4 12)\"/><circle cx=\"12\" cy=\"12\" r=\"1\" transform=\"rotate(90 12 12)\"/><circle cx=\"20\" cy=\"12\" r=\"1\" transform=\"rotate(90 20 12)\"/><circle cx=\"4\" cy=\"20\" r=\"1\" transform=\"rotate(90 4 20)\"/><circle cx=\"12\" cy=\"20\" r=\"1\" transform=\"rotate(90 12 20)\"/><circle cx=\"20\" cy=\"20\" r=\"1\" transform=\"rotate(90 20 20)\"/></svg>',\r\n      click: function (event) {\r\n        event.stopPropagation();\r\n\r\n        const thumbs = this.fancybox.plugins.Thumbs;\r\n\r\n        if (thumbs) {\r\n          thumbs.toggle();\r\n        }\r\n      },\r\n    },\r\n    close: {\r\n      type: \"button\",\r\n      label: \"CLOSE\",\r\n      class: \"fancybox__button--close\",\r\n      html: '<svg viewBox=\"0 0 24 24\"><path d=\"M20 20L4 4m16 0L4 20\"></path></svg>',\r\n      attr: { \"data-fancybox-close\": \"\", tabindex: 0 },\r\n    },\r\n  },\r\n};\r\n\r\nexport class Toolbar {\r\n  constructor(fancybox) {\r\n    this.fancybox = fancybox;\r\n\r\n    this.$container = null;\r\n    this.state = \"init\";\r\n\r\n    for (const methodName of [\r\n      \"onInit\",\r\n      \"onPrepare\",\r\n      \"onDone\",\r\n      \"onKeydown\",\r\n      \"onClosing\",\r\n      \"onChange\",\r\n      \"onSettle\",\r\n      \"onRefresh\",\r\n    ]) {\r\n      this[methodName] = this[methodName].bind(this);\r\n    }\r\n\r\n    this.events = {\r\n      init: this.onInit,\r\n      prepare: this.onPrepare,\r\n      done: this.onDone,\r\n      keydown: this.onKeydown,\r\n      closing: this.onClosing,\r\n\r\n      // Clear Slideshow when user strts to change current slide\r\n      \"Carousel.change\": this.onChange,\r\n\r\n      // Set timer after carousel changes current slide; deactive if last slide is reached\r\n      \"Carousel.settle\": this.onSettle,\r\n\r\n      // Deactivate Slideshow on user interaction\r\n      \"Carousel.Panzoom.touchStart\": () => this.onRefresh(),\r\n\r\n      \"Image.startAnimation\": (fancybox, slide) => this.onRefresh(slide),\r\n      \"Image.afterUpdate\": (fancybox, slide) => this.onRefresh(slide),\r\n    };\r\n  }\r\n\r\n  onInit() {\r\n    // Disable self if current group does not contain at least one image\r\n    if (this.fancybox.option(\"Toolbar.autoEnable\")) {\r\n      let hasImage = false;\r\n\r\n      for (const item of this.fancybox.items) {\r\n        if (item.type === \"image\") {\r\n          hasImage = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!hasImage) {\r\n        this.state = \"disabled\";\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Disable the creation of a close button, if one exists in the toolbar\r\n    for (const key of this.fancybox.option(\"Toolbar.display\")) {\r\n      const id = isPlainObject(key) ? key.id : key;\r\n\r\n      if (id === \"close\") {\r\n        this.fancybox.options.closeButton = false;\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  onPrepare() {\r\n    const fancybox = this.fancybox;\r\n    // Skip if disabled\r\n    if (this.state !== \"init\") {\r\n      return;\r\n    }\r\n\r\n    this.build();\r\n\r\n    this.update();\r\n\r\n    this.Slideshow = new Slideshow(fancybox);\r\n\r\n    if (!fancybox.Carousel.prevPage) {\r\n      if (fancybox.option(\"slideshow.autoStart\")) {\r\n        this.Slideshow.activate();\r\n      }\r\n\r\n      if (fancybox.option(\"fullscreen.autoStart\") && !Fullscreen.element()) {\r\n        try {\r\n          Fullscreen.activate(fancybox.$container);\r\n        } catch (error) {}\r\n      }\r\n    }\r\n  }\r\n\r\n  onFsChange() {\r\n    window.scrollTo(Fullscreen.pageXOffset, Fullscreen.pageYOffset);\r\n  }\r\n\r\n  onSettle() {\r\n    const fancybox = this.fancybox;\r\n    const slideshow = this.Slideshow;\r\n\r\n    if (slideshow && slideshow.isActive()) {\r\n      if (fancybox.getSlide().index === fancybox.Carousel.slides.length - 1 && !fancybox.option(\"infinite\")) {\r\n        slideshow.deactivate();\r\n      } else if (fancybox.getSlide().state === \"done\") {\r\n        slideshow.setTimer();\r\n      }\r\n    }\r\n  }\r\n\r\n  onChange() {\r\n    this.update();\r\n\r\n    if (this.Slideshow && this.Slideshow.isActive()) {\r\n      this.Slideshow.clearTimer();\r\n    }\r\n  }\r\n\r\n  onDone(fancybox, slide) {\r\n    const slideshow = this.Slideshow;\r\n\r\n    if (slide.index === fancybox.getSlide().index) {\r\n      this.update();\r\n\r\n      if (slideshow && slideshow.isActive()) {\r\n        if (!fancybox.option(\"infinite\") && slide.index === fancybox.Carousel.slides.length - 1) {\r\n          slideshow.deactivate();\r\n        } else {\r\n          slideshow.setTimer();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onRefresh(slide) {\r\n    if (!slide || slide.index === this.fancybox.getSlide().index) {\r\n      this.update();\r\n\r\n      if (this.Slideshow && this.Slideshow.isActive() && (!slide || slide.state === \"done\")) {\r\n        this.Slideshow.deactivate();\r\n      }\r\n    }\r\n  }\r\n\r\n  onKeydown(fancybox, key, event) {\r\n    if (key === \" \" && this.Slideshow) {\r\n      this.Slideshow.toggle();\r\n\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  onClosing() {\r\n    if (this.Slideshow) {\r\n      this.Slideshow.deactivate();\r\n    }\r\n\r\n    document.removeEventListener(\"fullscreenchange\", this.onFsChange);\r\n  }\r\n\r\n  /**\r\n   * Create link, button or `div` element for the toolbar\r\n   * @param {Object} obj\r\n   * @returns HTMLElement\r\n   */\r\n  createElement(obj) {\r\n    let $el;\r\n\r\n    if (obj.type === \"div\") {\r\n      $el = document.createElement(\"div\");\r\n    } else {\r\n      $el = document.createElement(obj.type === \"link\" ? \"a\" : \"button\");\r\n      $el.classList.add(\"carousel__button\");\r\n    }\r\n\r\n    $el.innerHTML = obj.html;\r\n\r\n    $el.setAttribute(\"tabindex\", obj.tabindex || 0);\r\n\r\n    if (obj.class) {\r\n      $el.classList.add(...obj.class.split(\" \"));\r\n    }\r\n\r\n    for (const prop in obj.attr) {\r\n      $el.setAttribute(prop, obj.attr[prop]);\r\n    }\r\n\r\n    if (obj.label) {\r\n      $el.setAttribute(\"title\", this.fancybox.localize(`{{${obj.label}}}`));\r\n    }\r\n\r\n    if (obj.click) {\r\n      $el.addEventListener(\"click\", obj.click.bind(this));\r\n    }\r\n\r\n    if (obj.id === \"prev\") {\r\n      $el.setAttribute(\"data-fancybox-prev\", \"\");\r\n    }\r\n\r\n    if (obj.id === \"next\") {\r\n      $el.setAttribute(\"data-fancybox-next\", \"\");\r\n    }\r\n\r\n    const $svg = $el.querySelector(\"svg\");\r\n\r\n    if ($svg) {\r\n      $svg.setAttribute(\"role\", \"img\");\r\n      $svg.setAttribute(\"tabindex\", \"-1\");\r\n      $svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\r\n    }\r\n\r\n    return $el;\r\n  }\r\n\r\n  /**\r\n   * Create all DOM elements\r\n   */\r\n  build() {\r\n    this.cleanup();\r\n\r\n    const all_items = this.fancybox.option(\"Toolbar.items\");\r\n    const all_groups = [\r\n      {\r\n        position: \"left\",\r\n        items: [],\r\n      },\r\n      {\r\n        position: \"center\",\r\n        items: [],\r\n      },\r\n      {\r\n        position: \"right\",\r\n        items: [],\r\n      },\r\n    ];\r\n\r\n    const thumbs = this.fancybox.plugins.Thumbs;\r\n\r\n    // 1st step - group toolbar elements by position\r\n    for (const key of this.fancybox.option(\"Toolbar.display\")) {\r\n      let id, item;\r\n\r\n      if (isPlainObject(key)) {\r\n        id = key.id;\r\n        item = extend({}, all_items[id], key);\r\n      } else {\r\n        id = key;\r\n        item = all_items[id];\r\n      }\r\n\r\n      if ([\"counter\", \"next\", \"prev\", \"slideshow\"].includes(id) && this.fancybox.items.length < 2) {\r\n        continue;\r\n      }\r\n\r\n      if (id === \"fullscreen\") {\r\n        if (!document.fullscreenEnabled || window.fullScreen) {\r\n          continue;\r\n        }\r\n\r\n        document.addEventListener(\"fullscreenchange\", this.onFsChange);\r\n      }\r\n\r\n      if (id === \"thumbs\" && (!thumbs || thumbs.state === \"disabled\")) {\r\n        continue;\r\n      }\r\n\r\n      if (!item) {\r\n        continue;\r\n      }\r\n\r\n      let position = item.position || \"right\";\r\n\r\n      let group = all_groups.find((obj) => obj.position === position);\r\n\r\n      if (group) {\r\n        group.items.push(item);\r\n      }\r\n    }\r\n\r\n    // 2st step - create DOM elements\r\n    const $container = document.createElement(\"div\");\r\n    $container.classList.add(\"fancybox__toolbar\");\r\n\r\n    for (const group of all_groups) {\r\n      if (group.items.length) {\r\n        const $wrap = document.createElement(\"div\");\r\n        $wrap.classList.add(\"fancybox__toolbar__items\");\r\n        $wrap.classList.add(`fancybox__toolbar__items--${group.position}`);\r\n\r\n        for (const obj of group.items) {\r\n          $wrap.appendChild(this.createElement(obj));\r\n        }\r\n\r\n        $container.appendChild($wrap);\r\n      }\r\n    }\r\n\r\n    // Add toolbar container to DOM\r\n    this.fancybox.$carousel.parentNode.insertBefore($container, this.fancybox.$carousel);\r\n\r\n    this.$container = $container;\r\n  }\r\n\r\n  /**\r\n   * Update element state depending on index of current slide\r\n   */\r\n  update() {\r\n    const slide = this.fancybox.getSlide();\r\n    const idx = slide.index;\r\n    const cnt = this.fancybox.items.length;\r\n\r\n    // Download links\r\n    // ====\r\n    const src = slide.downloadSrc || (slide.type === \"image\" && !slide.error ? slide.src : null);\r\n\r\n    for (const $el of this.fancybox.$container.querySelectorAll(\"a.fancybox__button--download\")) {\r\n      if (src) {\r\n        $el.removeAttribute(\"disabled\");\r\n        $el.removeAttribute(\"tabindex\");\r\n\r\n        $el.setAttribute(\"href\", src);\r\n        $el.setAttribute(\"download\", src);\r\n        $el.setAttribute(\"target\", \"_blank\");\r\n      } else {\r\n        $el.setAttribute(\"disabled\", \"\");\r\n        $el.setAttribute(\"tabindex\", -1);\r\n\r\n        $el.removeAttribute(\"href\");\r\n        $el.removeAttribute(\"download\");\r\n      }\r\n    }\r\n\r\n    // Zoom button\r\n    // ===\r\n    const panzoom = slide.Panzoom;\r\n    const canZoom = panzoom && panzoom.option(\"maxScale\") > panzoom.option(\"baseScale\");\r\n\r\n    for (const $el of this.fancybox.$container.querySelectorAll(\".fancybox__button--zoom\")) {\r\n      if (canZoom) {\r\n        $el.removeAttribute(\"disabled\");\r\n      } else {\r\n        $el.setAttribute(\"disabled\", \"\");\r\n      }\r\n    }\r\n\r\n    // Counter\r\n    // ====\r\n    for (const $el of this.fancybox.$container.querySelectorAll(\"[data-fancybox-index]\")) {\r\n      $el.innerHTML = slide.index + 1;\r\n    }\r\n\r\n    for (const $el of this.fancybox.$container.querySelectorAll(\"[data-fancybox-count]\")) {\r\n      $el.innerHTML = cnt;\r\n    }\r\n\r\n    // Disable previous/next links if gallery is not infinite and has reached start/end\r\n    // ===\r\n    if (!this.fancybox.option(\"infinite\")) {\r\n      for (const $el of this.fancybox.$container.querySelectorAll(\"[data-fancybox-prev]\")) {\r\n        if (idx === 0) {\r\n          $el.setAttribute(\"disabled\", \"\");\r\n        } else {\r\n          $el.removeAttribute(\"disabled\");\r\n        }\r\n      }\r\n\r\n      for (const $el of this.fancybox.$container.querySelectorAll(\"[data-fancybox-next]\")) {\r\n        if (idx === cnt - 1) {\r\n          $el.setAttribute(\"disabled\", \"\");\r\n        } else {\r\n          $el.removeAttribute(\"disabled\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  cleanup() {\r\n    if (this.Slideshow && this.Slideshow.isActive()) {\r\n      this.Slideshow.clearTimer();\r\n    }\r\n\r\n    if (this.$container) {\r\n      this.$container.remove();\r\n    }\r\n\r\n    this.$container = null;\r\n  }\r\n\r\n  attach() {\r\n    this.fancybox.on(this.events);\r\n  }\r\n\r\n  detach() {\r\n    this.fancybox.off(this.events);\r\n\r\n    this.cleanup();\r\n  }\r\n}\r\n\r\n// Expose defaults\r\nToolbar.defaults = defaults;\r\n","import { ScrollLock } from \"./ScrollLock/ScrollLock.js\";\nimport { Thumbs } from \"./Thumbs/Thumbs.js\";\nimport { Html } from \"./Html/Html.js\";\nimport { Image } from \"./Image/Image.js\";\nimport { Hash } from \"./Hash/Hash.js\";\nimport { Toolbar } from \"./Toolbar/Toolbar.js\";\n\nexport const Plugins = {\n  ScrollLock,\n  Thumbs,\n  Html,\n  Toolbar,\n  Image,\n  Hash,\n};\n","import { extend } from \"../shared/utils/extend.js\";\nimport { round } from \"../shared/utils/round.js\";\nimport { isScrollable } from \"../shared/utils/isScrollable.js\";\n\nimport { ResizeObserver } from \"../shared/utils/ResizeObserver.js\";\nimport { PointerTracker, getMidpoint, getDistance } from \"../shared/utils/PointerTracker.js\";\n\nimport { getTextNodeFromPoint } from \"../shared/utils/getTextNodeFromPoint.js\";\n\nimport { getFullWidth, getFullHeight, calculateAspectRatioFit } from \"../shared/utils/getDimensions.js\";\n\nimport { Base } from \"../shared/Base/Base.js\";\n\nimport { Plugins } from \"./plugins/index.js\";\n\nconst defaults = {\n  // Enable touch guestures\n  touch: true,\n\n  // Enable zooming\n  zoom: true,\n\n  // Enable pinch gesture to zoom in/out using two fingers\n  pinchToZoom: true,\n\n  // Disable dragging if scale level is equal to value of `baseScale` option\n  panOnlyZoomed: false,\n\n  // Lock axis while dragging,\n  // possible values: false | \"x\" | \"y\" | \"xy\"\n  lockAxis: false,\n\n  // * All friction values are inside [0, 1) interval,\n  // * where 0 would change instantly, but 0.99 would update extremely slowly\n\n  // Friction while panning/dragging\n  friction: 0.64,\n\n  // Friction while decelerating after drag end\n  decelFriction: 0.88,\n\n  // Friction while scaling\n  zoomFriction: 0.74,\n\n  // Bounciness after hitting the edge\n  bounceForce: 0.2,\n\n  // Initial scale level\n  baseScale: 1,\n\n  // Minimum scale level\n  minScale: 1,\n\n  // Maximum scale level\n  maxScale: 2,\n\n  // Default scale step while zooming\n  step: 0.5,\n\n  // Allow to select text,\n  // if enabled, dragging will be disabled when text selection is detected\n  textSelection: false,\n\n  // Add `click` event listener,\n  // possible values: true | false | function | \"toggleZoom\"\n  click: \"toggleZoom\",\n\n  // Add `wheel` event listener,\n  // possible values: true | false | function |  \"zoom\"\n  wheel: \"zoom\",\n\n  // Value for zoom on mouse wheel\n  wheelFactor: 42,\n\n  // Number of wheel events after which it should stop preventing default behaviour of mouse wheel\n  wheelLimit: 5,\n\n  // Class name added to `$viewport` element to indicate if content is draggable\n  draggableClass: \"is-draggable\",\n\n  // Class name added to `$viewport` element to indicate that user is currently dragging\n  draggingClass: \"is-dragging\",\n\n  // Content will be scaled by this number,\n  // this can also be a function which should return a number, for example:\n  // ratio: function() { return 1 / (window.devicePixelRatio || 1) }\n  ratio: 1,\n};\n\nexport class Panzoom extends Base {\n  /**\n   * Panzoom constructor\n   * @constructs Panzoom\n   * @param {HTMLElement} $viewport Panzoom container\n   * @param {Object} [options] Options for Panzoom\n   */\n  constructor($container, options = {}) {\n    super(extend(true, {}, defaults, options));\n\n    this.state = \"init\";\n\n    this.$container = $container;\n\n    // Bind event handlers for referencability\n    for (const methodName of [\"onLoad\", \"onWheel\", \"onClick\"]) {\n      this[methodName] = this[methodName].bind(this);\n    }\n\n    this.initLayout();\n\n    this.resetValues();\n\n    this.attachPlugins(Panzoom.Plugins);\n\n    this.trigger(\"init\");\n\n    this.updateMetrics();\n\n    this.attachEvents();\n\n    this.trigger(\"ready\");\n\n    if (this.option(\"centerOnStart\") === false) {\n      this.state = \"ready\";\n    } else {\n      this.panTo({\n        friction: 0,\n      });\n    }\n\n    $container.__Panzoom = this;\n  }\n\n  /**\n   * Create references to container, viewport and content elements\n   */\n  initLayout() {\n    const $container = this.$container;\n\n    // Make sure content element exists\n    if (!($container instanceof HTMLElement)) {\n      throw new Error(\"Panzoom: Container not found\");\n    }\n\n    const $content = this.option(\"content\") || $container.querySelector(\".panzoom__content\");\n\n    // Make sure content element exists\n    if (!$content) {\n      throw new Error(\"Panzoom: Content not found\");\n    }\n\n    this.$content = $content;\n\n    let $viewport = this.option(\"viewport\") || $container.querySelector(\".panzoom__viewport\");\n\n    if (!$viewport && this.option(\"wrapInner\") !== false) {\n      $viewport = document.createElement(\"div\");\n      $viewport.classList.add(\"panzoom__viewport\");\n\n      $viewport.append(...$container.childNodes);\n\n      $container.appendChild($viewport);\n    }\n\n    this.$viewport = $viewport || $content.parentNode;\n  }\n\n  /**\n   * Restore instance variables to default values\n   */\n  resetValues() {\n    this.updateRate = this.option(\"updateRate\", /iPhone|iPad|iPod|Android/i.test(navigator.userAgent) ? 250 : 24);\n\n    this.container = {\n      width: 0,\n      height: 0,\n    };\n\n    this.viewport = {\n      width: 0,\n      height: 0,\n    };\n\n    this.content = {\n      // Full content dimensions (naturalWidth/naturalHeight for images)\n      origWidth: 0,\n      origHeight: 0,\n\n      // Current dimensions of the content\n      width: 0,\n      height: 0,\n\n      // Current position; these values reflect CSS `transform` value\n      x: this.option(\"x\", 0),\n      y: this.option(\"y\", 0),\n\n      // Current scale; does not reflect CSS `transform` value\n      scale: this.option(\"baseScale\"),\n    };\n\n    // End values of current pan / zoom animation\n    this.transform = {\n      x: 0,\n      y: 0,\n      scale: 1,\n    };\n\n    this.resetDragPosition();\n  }\n\n  /**\n   * Handle `load` event\n   * @param {Event} event\n   */\n  onLoad(event) {\n    this.updateMetrics();\n\n    this.panTo({ scale: this.option(\"baseScale\"), friction: 0 });\n\n    this.trigger(\"load\", event);\n  }\n\n  /**\n   * Handle `click` event\n   * @param {Event} event\n   */\n  onClick(event) {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    // Skip if text is selected\n    if (this.option(\"textSelection\") && window.getSelection().toString().length) {\n      event.stopPropagation();\n      return;\n    }\n\n    const rect = this.$content.getClientRects()[0];\n\n    // Check if container has changed position (for example, when current instance is inside another one)\n    if (this.state !== \"ready\") {\n      if (\n        this.dragPosition.midPoint ||\n        Math.abs(rect.top - this.dragStart.rect.top) > 1 ||\n        Math.abs(rect.left - this.dragStart.rect.left) > 1\n      ) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        return;\n      }\n    }\n\n    if (this.trigger(\"click\", event) === false) {\n      return;\n    }\n\n    if (this.option(\"zoom\") && this.option(\"click\") === \"toggleZoom\") {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.zoomWithClick(event);\n    }\n  }\n\n  /**\n   * Handle `wheel` event\n   * @param {Event} event\n   */\n  onWheel(event) {\n    if (this.trigger(\"wheel\", event) === false) {\n      return;\n    }\n\n    if (this.option(\"zoom\") && this.option(\"wheel\")) {\n      this.zoomWithWheel(event);\n    }\n  }\n\n  /**\n   * Change zoom level depending on scroll direction\n   * @param {Event} event `wheel` event\n   */\n  zoomWithWheel(event) {\n    if (this.changedDelta === undefined) {\n      this.changedDelta = 0;\n    }\n\n    const delta = Math.max(-1, Math.min(1, -event.deltaY || -event.deltaX || event.wheelDelta || -event.detail));\n    const scale = this.content.scale;\n\n    let newScale = (scale * (100 + delta * this.option(\"wheelFactor\"))) / 100;\n\n    if (\n      (delta < 0 && Math.abs(scale - this.option(\"minScale\")) < 0.01) ||\n      (delta > 0 && Math.abs(scale - this.option(\"maxScale\")) < 0.01)\n    ) {\n      this.changedDelta += Math.abs(delta);\n      newScale = scale;\n    } else {\n      this.changedDelta = 0;\n      newScale = Math.max(Math.min(newScale, this.option(\"maxScale\")), this.option(\"minScale\"));\n    }\n\n    if (this.changedDelta > this.option(\"wheelLimit\")) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (newScale === scale) {\n      return;\n    }\n\n    const rect = this.$content.getBoundingClientRect();\n\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    this.zoomTo(newScale, { x, y });\n  }\n\n  /**\n   * Change zoom level depending on click coordinates\n   * @param {Event} event `click` event\n   */\n  zoomWithClick(event) {\n    const rect = this.$content.getClientRects()[0];\n\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    this.toggleZoom({ x, y });\n  }\n\n  /**\n   * Attach load, wheel and click event listeners, initialize `resizeObserver` and `PointerTracker`\n   */\n  attachEvents() {\n    this.$content.addEventListener(\"load\", this.onLoad);\n\n    this.$container.addEventListener(\"wheel\", this.onWheel, { passive: false });\n    this.$container.addEventListener(\"click\", this.onClick, { passive: false });\n\n    this.initObserver();\n\n    const pointerTracker = new PointerTracker(this.$container, {\n      start: (pointer, event) => {\n        if (!this.option(\"touch\")) {\n          return false;\n        }\n\n        if (this.velocity.scale < 0) {\n          return false;\n        }\n\n        const target = event.composedPath()[0];\n\n        if (!pointerTracker.currentPointers.length) {\n          const ignoreClickedElement =\n            [\"BUTTON\", \"TEXTAREA\", \"OPTION\", \"INPUT\", \"SELECT\", \"VIDEO\"].indexOf(target.nodeName) !== -1;\n\n          if (ignoreClickedElement) {\n            return false;\n          }\n\n          // Allow text selection\n          if (this.option(\"textSelection\") && getTextNodeFromPoint(target, pointer.clientX, pointer.clientY)) {\n            return false;\n          }\n        }\n\n        if (isScrollable(target)) {\n          return false;\n        }\n\n        if (this.trigger(\"touchStart\", event) === false) {\n          return false;\n        }\n\n        if (event.type === \"mousedown\") {\n          event.preventDefault();\n        }\n\n        this.state = \"pointerdown\";\n\n        this.resetDragPosition();\n\n        this.dragPosition.midPoint = null;\n        this.dragPosition.time = Date.now();\n\n        return true;\n      },\n      move: (previousPointers, currentPointers, event) => {\n        if (this.state !== \"pointerdown\") {\n          return;\n        }\n\n        if (this.trigger(\"touchMove\", event) === false) {\n          event.preventDefault();\n          return;\n        }\n\n        // Disable touch action if current zoom level is below base level\n        if (\n          currentPointers.length < 2 &&\n          this.option(\"panOnlyZoomed\") === true &&\n          this.content.width <= this.viewport.width &&\n          this.content.height <= this.viewport.height &&\n          this.transform.scale <= this.option(\"baseScale\")\n        ) {\n          return;\n        }\n\n        if (currentPointers.length > 1 && (!this.option(\"zoom\") || this.option(\"pinchToZoom\") === false)) {\n          return;\n        }\n\n        const prevMidpoint = getMidpoint(previousPointers[0], previousPointers[1]);\n        const newMidpoint = getMidpoint(currentPointers[0], currentPointers[1]);\n\n        const panX = newMidpoint.clientX - prevMidpoint.clientX;\n        const panY = newMidpoint.clientY - prevMidpoint.clientY;\n\n        const prevDistance = getDistance(previousPointers[0], previousPointers[1]);\n        const newDistance = getDistance(currentPointers[0], currentPointers[1]);\n\n        const scaleDiff = prevDistance && newDistance ? newDistance / prevDistance : 1;\n\n        this.dragOffset.x += panX;\n        this.dragOffset.y += panY;\n\n        this.dragOffset.scale *= scaleDiff;\n\n        this.dragOffset.time = Date.now() - this.dragPosition.time;\n\n        const axisToLock = this.dragStart.scale === 1 && this.option(\"lockAxis\");\n\n        if (axisToLock && !this.lockAxis) {\n          if (Math.abs(this.dragOffset.x) < 6 && Math.abs(this.dragOffset.y) < 6) {\n            event.preventDefault();\n            return;\n          }\n\n          const angle = Math.abs((Math.atan2(this.dragOffset.y, this.dragOffset.x) * 180) / Math.PI);\n\n          this.lockAxis = angle > 45 && angle < 135 ? \"y\" : \"x\";\n        }\n\n        if (axisToLock !== \"xy\" && this.lockAxis === \"y\") {\n          return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        event.stopImmediatePropagation();\n\n        if (this.lockAxis) {\n          this.dragOffset[this.lockAxis === \"x\" ? \"y\" : \"x\"] = 0;\n        }\n\n        this.$container.classList.add(this.option(\"draggingClass\"));\n\n        if (!(this.transform.scale === this.option(\"baseScale\") && this.lockAxis === \"y\")) {\n          this.dragPosition.x = this.dragStart.x + this.dragOffset.x;\n        }\n\n        if (!(this.transform.scale === this.option(\"baseScale\") && this.lockAxis === \"x\")) {\n          this.dragPosition.y = this.dragStart.y + this.dragOffset.y;\n        }\n\n        this.dragPosition.scale = this.dragStart.scale * this.dragOffset.scale;\n\n        if (currentPointers.length > 1) {\n          const startPoint = getMidpoint(pointerTracker.startPointers[0], pointerTracker.startPointers[1]);\n\n          const xPos = startPoint.clientX - this.dragStart.rect.x;\n          const yPos = startPoint.clientY - this.dragStart.rect.y;\n\n          const { deltaX, deltaY } = this.getZoomDelta(this.content.scale * this.dragOffset.scale, xPos, yPos);\n\n          this.dragPosition.x -= deltaX;\n          this.dragPosition.y -= deltaY;\n\n          this.dragPosition.midPoint = newMidpoint;\n        } else {\n          this.setDragResistance();\n        }\n\n        // Update final position\n        this.transform = {\n          x: this.dragPosition.x,\n          y: this.dragPosition.y,\n          scale: this.dragPosition.scale,\n        };\n\n        this.startAnimation();\n      },\n      end: (pointer, event) => {\n        if (this.state !== \"pointerdown\") {\n          return;\n        }\n\n        this._dragOffset = { ...this.dragOffset };\n\n        if (pointerTracker.currentPointers.length) {\n          this.resetDragPosition();\n\n          return;\n        }\n\n        this.state = \"decel\";\n        this.friction = this.option(\"decelFriction\");\n\n        this.recalculateTransform();\n\n        this.$container.classList.remove(this.option(\"draggingClass\"));\n\n        if (this.trigger(\"touchEnd\", event) === false) {\n          return;\n        }\n\n        if (this.state !== \"decel\") {\n          return;\n        }\n\n        // * Check if scaled content past limits\n\n        // Below minimum\n        const minScale = this.option(\"minScale\");\n\n        if (this.transform.scale < minScale) {\n          this.zoomTo(minScale, { friction: 0.64 });\n\n          return;\n        }\n\n        // Exceed maximum\n        const maxScale = this.option(\"maxScale\");\n\n        if (this.transform.scale - maxScale > 0.01) {\n          const last = this.dragPosition.midPoint || pointer;\n          const rect = this.$content.getClientRects()[0];\n\n          this.zoomTo(maxScale, {\n            friction: 0.64,\n            x: last.clientX - rect.left,\n            y: last.clientY - rect.top,\n          });\n\n          return;\n        }\n      },\n    });\n\n    this.pointerTracker = pointerTracker;\n  }\n\n  initObserver() {\n    if (this.resizeObserver) {\n      return;\n    }\n\n    this.resizeObserver = new ResizeObserver(() => {\n      if (this.updateTimer) {\n        return;\n      }\n\n      this.updateTimer = setTimeout(() => {\n        const rect = this.$container.getBoundingClientRect();\n\n        if (!(rect.width && rect.height)) {\n          this.updateTimer = null;\n          return;\n        }\n\n        // Check to see if there are any changes\n        if (Math.abs(rect.width - this.container.width) > 1 || Math.abs(rect.height - this.container.height) > 1) {\n          if (this.isAnimating()) {\n            this.endAnimation(true);\n          }\n\n          this.updateMetrics();\n\n          this.panTo({\n            x: this.content.x,\n            y: this.content.y,\n            scale: this.option(\"baseScale\"),\n            friction: 0,\n          });\n        }\n\n        this.updateTimer = null;\n      }, this.updateRate);\n    });\n\n    this.resizeObserver.observe(this.$container);\n  }\n\n  /**\n   * Restore drag related variables to default values\n   */\n  resetDragPosition() {\n    this.lockAxis = null;\n    this.friction = this.option(\"friction\");\n\n    this.velocity = {\n      x: 0,\n      y: 0,\n      scale: 0,\n    };\n\n    const { x, y, scale } = this.content;\n\n    this.dragStart = {\n      rect: this.$content.getBoundingClientRect(),\n      x,\n      y,\n      scale,\n    };\n\n    this.dragPosition = {\n      ...this.dragPosition,\n      x,\n      y,\n      scale,\n    };\n\n    this.dragOffset = {\n      x: 0,\n      y: 0,\n      scale: 1,\n      time: 0,\n    };\n  }\n\n  /**\n   * Trigger update events before/after resizing content and viewport\n   * @param {Boolean} silently Should trigger `afterUpdate` event at the end\n   */\n  updateMetrics(silently) {\n    if (silently !== true) {\n      this.trigger(\"beforeUpdate\");\n    }\n\n    const $container = this.$container;\n    const $content = this.$content;\n    const $viewport = this.$viewport;\n\n    const contentIsImage = $content instanceof HTMLImageElement;\n    const contentIsZoomable = this.option(\"zoom\");\n    const shouldResizeParent = this.option(\"resizeParent\", contentIsZoomable);\n\n    let width = this.option(\"width\");\n    let height = this.option(\"height\");\n\n    let origWidth = width || getFullWidth($content);\n    let origHeight = height || getFullHeight($content);\n\n    Object.assign($content.style, {\n      width: width ? `${width}px` : \"\",\n      height: height ? `${height}px` : \"\",\n      maxWidth: \"\",\n      maxHeight: \"\",\n    });\n\n    if (shouldResizeParent) {\n      Object.assign($viewport.style, { width: \"\", height: \"\" });\n    }\n\n    const ratio = this.option(\"ratio\");\n\n    origWidth = round(origWidth * ratio);\n    origHeight = round(origHeight * ratio);\n\n    width = origWidth;\n    height = origHeight;\n\n    const contentRect = $content.getBoundingClientRect();\n    const viewportRect = $viewport.getBoundingClientRect();\n\n    const containerRect = $viewport == $container ? viewportRect : $container.getBoundingClientRect();\n\n    let viewportWidth = Math.max($viewport.offsetWidth, round(viewportRect.width));\n    let viewportHeight = Math.max($viewport.offsetHeight, round(viewportRect.height));\n\n    let viewportStyles = window.getComputedStyle($viewport);\n    viewportWidth -= parseFloat(viewportStyles.paddingLeft) + parseFloat(viewportStyles.paddingRight);\n    viewportHeight -= parseFloat(viewportStyles.paddingTop) + parseFloat(viewportStyles.paddingBottom);\n\n    this.viewport.width = viewportWidth;\n    this.viewport.height = viewportHeight;\n\n    if (contentIsZoomable) {\n      if (Math.abs(origWidth - contentRect.width) > 0.1 || Math.abs(origHeight - contentRect.height) > 0.1) {\n        const rez = calculateAspectRatioFit(\n          origWidth,\n          origHeight,\n          Math.min(origWidth, contentRect.width),\n          Math.min(origHeight, contentRect.height)\n        );\n\n        width = round(rez.width);\n        height = round(rez.height);\n      }\n\n      Object.assign($content.style, {\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: \"\",\n      });\n    }\n\n    if (shouldResizeParent) {\n      Object.assign($viewport.style, { width: `${width}px`, height: `${height}px` });\n\n      this.viewport = { ...this.viewport, width, height };\n    }\n\n    if (contentIsImage && contentIsZoomable && typeof this.options.maxScale !== \"function\") {\n      const maxScale = this.option(\"maxScale\");\n\n      this.options.maxScale = function () {\n        return this.content.origWidth > 0 && this.content.fitWidth > 0\n          ? this.content.origWidth / this.content.fitWidth\n          : maxScale;\n      };\n    }\n\n    this.content = {\n      ...this.content,\n      origWidth,\n      origHeight,\n      fitWidth: width,\n      fitHeight: height,\n      width,\n      height,\n      scale: 1,\n      isZoomable: contentIsZoomable,\n    };\n\n    this.container = { width: containerRect.width, height: containerRect.height };\n\n    if (silently !== true) {\n      this.trigger(\"afterUpdate\");\n    }\n  }\n\n  /**\n   * Increase zoom level\n   * @param {Number} [step] Zoom ratio; `0.5` would increase scale from 1 to 1.5\n   */\n  zoomIn(step) {\n    this.zoomTo(this.content.scale + (step || this.option(\"step\")));\n  }\n\n  /**\n   * Decrease zoom level\n   * @param {Number} [step] Zoom ratio; `0.5` would decrease scale from 1.5 to 1\n   */\n  zoomOut(step) {\n    this.zoomTo(this.content.scale - (step || this.option(\"step\")));\n  }\n\n  /**\n   * Toggles zoom level between max and base levels\n   * @param {Object} [options] Additional options\n   */\n  toggleZoom(props = {}) {\n    const maxScale = this.option(\"maxScale\");\n    const baseScale = this.option(\"baseScale\");\n\n    const scale = this.content.scale > baseScale + (maxScale - baseScale) * 0.5 ? baseScale : maxScale;\n\n    this.zoomTo(scale, props);\n  }\n\n  /**\n   * Animate to given zoom level\n   * @param {Number} scale New zoom level\n   * @param {Object} [options] Additional options\n   */\n  zoomTo(scale = this.option(\"baseScale\"), { x = null, y = null } = {}) {\n    scale = Math.max(Math.min(scale, this.option(\"maxScale\")), this.option(\"minScale\"));\n\n    // Adjust zoom position\n    const currentScale = round(this.content.scale / (this.content.width / this.content.fitWidth), 10000000);\n\n    if (x === null) {\n      x = this.content.width * currentScale * 0.5;\n    }\n\n    if (y === null) {\n      y = this.content.height * currentScale * 0.5;\n    }\n\n    const { deltaX, deltaY } = this.getZoomDelta(scale, x, y);\n\n    x = this.content.x - deltaX;\n    y = this.content.y - deltaY;\n\n    this.panTo({ x, y, scale, friction: this.option(\"zoomFriction\") });\n  }\n\n  /**\n   * Calculate difference for top/left values if content would scale at given coordinates\n   * @param {Number} scale\n   * @param {Number} x\n   * @param {Number} y\n   * @returns {Object}\n   */\n  getZoomDelta(scale, x = 0, y = 0) {\n    const currentWidth = this.content.fitWidth * this.content.scale;\n    const currentHeight = this.content.fitHeight * this.content.scale;\n\n    const percentXInCurrentBox = x > 0 && currentWidth ? x / currentWidth : 0;\n    const percentYInCurrentBox = y > 0 && currentHeight ? y / currentHeight : 0;\n\n    const nextWidth = this.content.fitWidth * scale;\n    const nextHeight = this.content.fitHeight * scale;\n\n    const deltaX = (nextWidth - currentWidth) * percentXInCurrentBox;\n    const deltaY = (nextHeight - currentHeight) * percentYInCurrentBox;\n\n    return { deltaX, deltaY };\n  }\n\n  /**\n   * Animate to given positon and/or zoom level\n   * @param {Object} [options] Additional options\n   */\n  panTo({\n    x = this.content.x,\n    y = this.content.y,\n    scale,\n    friction = this.option(\"friction\"),\n    ignoreBounds = false,\n  } = {}) {\n    scale = scale || this.content.scale || 1;\n\n    if (!ignoreBounds) {\n      const { boundX, boundY } = this.getBounds(scale);\n\n      if (boundX) {\n        x = Math.max(Math.min(x, boundX.to), boundX.from);\n      }\n\n      if (boundY) {\n        y = Math.max(Math.min(y, boundY.to), boundY.from);\n      }\n    }\n\n    this.friction = friction;\n\n    this.transform = {\n      ...this.transform,\n      x,\n      y,\n      scale,\n    };\n\n    if (friction) {\n      this.state = \"panning\";\n\n      this.velocity = {\n        x: (1 / this.friction - 1) * (x - this.content.x),\n        y: (1 / this.friction - 1) * (y - this.content.y),\n        scale: (1 / this.friction - 1) * (scale - this.content.scale),\n      };\n\n      this.startAnimation();\n    } else {\n      this.endAnimation();\n    }\n  }\n\n  /**\n   * Start animation loop\n   */\n  startAnimation() {\n    if (!this.rAF) {\n      this.trigger(\"startAnimation\");\n    } else {\n      cancelAnimationFrame(this.rAF);\n    }\n\n    this.rAF = requestAnimationFrame(() => this.animate());\n  }\n\n  /**\n   * Process animation frame\n   */\n  animate() {\n    this.setEdgeForce();\n    this.setDragForce();\n\n    this.velocity.x *= this.friction;\n    this.velocity.y *= this.friction;\n\n    this.velocity.scale *= this.friction;\n\n    this.content.x += this.velocity.x;\n    this.content.y += this.velocity.y;\n\n    this.content.scale += this.velocity.scale;\n\n    if (this.isAnimating()) {\n      this.setTransform();\n    } else if (this.state !== \"pointerdown\") {\n      this.endAnimation();\n\n      return;\n    }\n\n    this.rAF = requestAnimationFrame(() => this.animate());\n  }\n\n  /**\n   * Calculate boundaries\n   */\n  getBounds(scale) {\n    let boundX = this.boundX;\n    let boundY = this.boundY;\n\n    if (boundX !== undefined && boundY !== undefined) {\n      return { boundX, boundY };\n    }\n\n    boundX = { from: 0, to: 0 };\n    boundY = { from: 0, to: 0 };\n\n    scale = scale || this.transform.scale;\n\n    const width = this.content.fitWidth * scale;\n    const height = this.content.fitHeight * scale;\n\n    const viewportWidth = this.viewport.width;\n    const viewportHeight = this.viewport.height;\n\n    if (width < viewportWidth) {\n      const deltaX = round((viewportWidth - width) * 0.5);\n\n      boundX.from = deltaX;\n      boundX.to = deltaX;\n    } else {\n      boundX.from = round(viewportWidth - width);\n    }\n\n    if (height < viewportHeight) {\n      const deltaY = (viewportHeight - height) * 0.5;\n\n      boundY.from = deltaY;\n      boundY.to = deltaY;\n    } else {\n      boundY.from = round(viewportHeight - height);\n    }\n\n    return { boundX, boundY };\n  }\n\n  /**\n   * Change animation velocity if boundary is reached\n   */\n  setEdgeForce() {\n    if (this.state !== \"decel\") {\n      return;\n    }\n\n    const bounceForce = this.option(\"bounceForce\");\n\n    const { boundX, boundY } = this.getBounds(Math.max(this.transform.scale, this.content.scale));\n\n    let pastLeft, pastRight, pastTop, pastBottom;\n\n    if (boundX) {\n      pastLeft = this.content.x < boundX.from;\n      pastRight = this.content.x > boundX.to;\n    }\n\n    if (boundY) {\n      pastTop = this.content.y < boundY.from;\n      pastBottom = this.content.y > boundY.to;\n    }\n\n    if (pastLeft || pastRight) {\n      const bound = pastLeft ? boundX.from : boundX.to;\n      const distance = bound - this.content.x;\n\n      let force = distance * bounceForce;\n\n      const restX = this.content.x + (this.velocity.x + force) / this.friction;\n\n      if (restX >= boundX.from && restX <= boundX.to) {\n        force += this.velocity.x;\n      }\n\n      this.velocity.x = force;\n\n      this.recalculateTransform();\n    }\n\n    if (pastTop || pastBottom) {\n      const bound = pastTop ? boundY.from : boundY.to;\n      const distance = bound - this.content.y;\n\n      let force = distance * bounceForce;\n\n      const restY = this.content.y + (force + this.velocity.y) / this.friction;\n\n      if (restY >= boundY.from && restY <= boundY.to) {\n        force += this.velocity.y;\n      }\n\n      this.velocity.y = force;\n\n      this.recalculateTransform();\n    }\n  }\n\n  /**\n   * Change dragging position if boundary is reached\n   */\n  setDragResistance() {\n    if (this.state !== \"pointerdown\") {\n      return;\n    }\n\n    const { boundX, boundY } = this.getBounds(this.dragPosition.scale);\n\n    let pastLeft, pastRight, pastTop, pastBottom;\n\n    if (boundX) {\n      pastLeft = this.dragPosition.x < boundX.from;\n      pastRight = this.dragPosition.x > boundX.to;\n    }\n\n    if (boundY) {\n      pastTop = this.dragPosition.y < boundY.from;\n      pastBottom = this.dragPosition.y > boundY.to;\n    }\n\n    if ((pastLeft || pastRight) && !(pastLeft && pastRight)) {\n      const bound = pastLeft ? boundX.from : boundX.to;\n      const distance = bound - this.dragPosition.x;\n\n      this.dragPosition.x = bound - distance * 0.3;\n    }\n\n    if ((pastTop || pastBottom) && !(pastTop && pastBottom)) {\n      const bound = pastTop ? boundY.from : boundY.to;\n      const distance = bound - this.dragPosition.y;\n\n      this.dragPosition.y = bound - distance * 0.3;\n    }\n  }\n\n  /**\n   * Set velocity to move content to drag position\n   */\n  setDragForce() {\n    if (this.state === \"pointerdown\") {\n      this.velocity.x = this.dragPosition.x - this.content.x;\n      this.velocity.y = this.dragPosition.y - this.content.y;\n      this.velocity.scale = this.dragPosition.scale - this.content.scale;\n    }\n  }\n\n  /**\n   * Update end values based on current velocity and friction;\n   */\n  recalculateTransform() {\n    this.transform.x = this.content.x + this.velocity.x / (1 / this.friction - 1);\n    this.transform.y = this.content.y + this.velocity.y / (1 / this.friction - 1);\n    this.transform.scale = this.content.scale + this.velocity.scale / (1 / this.friction - 1);\n  }\n\n  /**\n   * Check if content is currently animating\n   * @returns {Boolean}\n   */\n  isAnimating() {\n    return !!(\n      this.friction &&\n      (Math.abs(this.velocity.x) > 0.05 || Math.abs(this.velocity.y) > 0.05 || Math.abs(this.velocity.scale) > 0.05)\n    );\n  }\n\n  /**\n   * Set content `style.transform` value based on current animation frame\n   */\n  setTransform(final) {\n    let x, y, scale;\n\n    if (final) {\n      x = round(this.transform.x);\n      y = round(this.transform.y);\n\n      scale = this.transform.scale;\n\n      this.content = { ...this.content, x, y, scale };\n    } else {\n      x = round(this.content.x);\n      y = round(this.content.y);\n\n      scale = this.content.scale / (this.content.width / this.content.fitWidth);\n\n      this.content = { ...this.content, x, y };\n    }\n\n    this.trigger(\"beforeTransform\");\n\n    x = round(this.content.x);\n    y = round(this.content.y);\n\n    if (final && this.option(\"zoom\")) {\n      let width;\n      let height;\n\n      width = round(this.content.fitWidth * scale);\n      height = round(this.content.fitHeight * scale);\n\n      this.content.width = width;\n      this.content.height = height;\n\n      this.transform = { ...this.transform, width, height, scale };\n\n      Object.assign(this.$content.style, {\n        width: `${width}px`,\n        height: `${height}px`,\n        maxWidth: \"none\",\n        maxHeight: \"none\",\n        transform: `translate3d(${x}px, ${y}px, 0) scale(1)`,\n      });\n    } else {\n      this.$content.style.transform = `translate3d(${x}px, ${y}px, 0) scale(${scale})`;\n    }\n\n    this.trigger(\"afterTransform\");\n  }\n\n  /**\n   * Stop animation loop\n   */\n  endAnimation(silently) {\n    cancelAnimationFrame(this.rAF);\n    this.rAF = null;\n\n    this.velocity = {\n      x: 0,\n      y: 0,\n      scale: 0,\n    };\n\n    this.setTransform(true);\n\n    this.state = \"ready\";\n\n    this.handleCursor();\n\n    if (silently !== true) {\n      this.trigger(\"endAnimation\");\n    }\n  }\n\n  /**\n   * Update the class name depending on whether the content is scaled\n   */\n  handleCursor() {\n    const draggableClass = this.option(\"draggableClass\");\n\n    if (!draggableClass || !this.option(\"touch\")) {\n      return;\n    }\n\n    if (\n      this.option(\"panOnlyZoomed\") == true &&\n      this.content.width <= this.viewport.width &&\n      this.content.height <= this.viewport.height &&\n      this.transform.scale <= this.option(\"baseScale\")\n    ) {\n      this.$container.classList.remove(draggableClass);\n    } else {\n      this.$container.classList.add(draggableClass);\n    }\n  }\n\n  /**\n   * Remove observation and detach event listeners\n   */\n  detachEvents() {\n    this.$content.removeEventListener(\"load\", this.onLoad);\n\n    this.$container.removeEventListener(\"wheel\", this.onWheel, { passive: false });\n    this.$container.removeEventListener(\"click\", this.onClick, { passive: false });\n\n    if (this.pointerTracker) {\n      this.pointerTracker.stop();\n      this.pointerTracker = null;\n    }\n\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n      this.resizeObserver = null;\n    }\n  }\n\n  /**\n   * Clean up\n   */\n  destroy() {\n    if (this.state === \"destroy\") {\n      return;\n    }\n\n    this.state = \"destroy\";\n\n    clearTimeout(this.updateTimer);\n    this.updateTimer = null;\n\n    cancelAnimationFrame(this.rAF);\n    this.rAF = null;\n\n    this.detachEvents();\n\n    this.detachPlugins();\n\n    this.resetDragPosition();\n  }\n}\n\n// Expose version\nPanzoom.version = \"__VERSION__\";\n\n// Static properties are a recent addition that dont work in all browsers yet\nPanzoom.Plugins = Plugins;\n","export const Plugins = {};\n","import { extend } from \"../utils/extend.js\";\nimport { resolve } from \"../utils/resolve.js\";\nimport { isPlainObject } from \"../utils/isPlainObject.js\";\n\n/**\n * Base class, all components inherit from this class\n */\nexport class Base {\n  /**\n   * Base constructor\n   * @param {Object} [options] - Options as `key: value` pairs\n   */\n  constructor(options = {}) {\n    this.options = extend(true, {}, options);\n\n    this.plugins = [];\n    this.events = {};\n\n    // * Prefill with initial events\n    for (const type of [\"on\", \"once\"]) {\n      for (const args of Object.entries(this.options[type] || {})) {\n        this[type](...args);\n      }\n    }\n  }\n\n  /**\n   * Retrieve option value by key, supports subkeys\n   * @param {String} key Option name\n   * @param {*} [fallback] Fallback value for non-existing key\n   * @returns {*}\n   */\n  option(key, fallback, ...rest) {\n    // Make sure it is string\n    key = String(key);\n\n    let value = resolve(key, this.options);\n\n    // Allow to have functions as options\n    if (typeof value === \"function\") {\n      value = value.call(this, this, ...rest);\n    }\n\n    return value === undefined ? fallback : value;\n  }\n\n  /**\n   * Simple l10n support - replaces object keys\n   * found in template with corresponding values\n   * @param {String} str String containing values to localize\n   * @param {Array} params Substitute parameters\n   * @returns {String}\n   */\n  localize(str, params = []) {\n    str = String(str).replace(/\\{\\{(\\w+).?(\\w+)?\\}\\}/g, (match, key, subkey) => {\n      let rez = \"\";\n\n      // Plugins have `Plugin.l10n.KEY`\n      if (subkey) {\n        rez = this.option(`${key[0] + key.toLowerCase().substring(1)}.l10n.${subkey}`);\n      } else if (key) {\n        rez = this.option(`l10n.${key}`);\n      }\n\n      if (!rez) {\n        rez = match;\n      }\n\n      for (let index = 0; index < params.length; index++) {\n        rez = rez.split(params[index][0]).join(params[index][1]);\n      }\n\n      return rez;\n    });\n\n    str = str.replace(/\\{\\{(.*)\\}\\}/, (match, key) => {\n      return key;\n    });\n\n    return str;\n  }\n\n  /**\n   * Subscribe to an event\n   * @param {String} name\n   * @param {Function} callback\n   * @returns {Object}\n   */\n  on(name, callback) {\n    if (isPlainObject(name)) {\n      for (const args of Object.entries(name)) {\n        this.on(...args);\n      }\n\n      return this;\n    }\n\n    String(name)\n      .split(\" \")\n      .forEach((item) => {\n        const listeners = (this.events[item] = this.events[item] || []);\n\n        if (listeners.indexOf(callback) == -1) {\n          listeners.push(callback);\n        }\n      });\n\n    return this;\n  }\n\n  /**\n   * Subscribe to an event only once\n   * @param {String} name\n   * @param {Function} callback\n   * @returns {Object}\n   */\n  once(name, callback) {\n    if (isPlainObject(name)) {\n      for (const args of Object.entries(name)) {\n        this.once(...args);\n      }\n\n      return this;\n    }\n\n    String(name)\n      .split(\" \")\n      .forEach((item) => {\n        const listener = (...details) => {\n          this.off(item, listener);\n          callback.call(this, this, ...details);\n        };\n\n        listener._ = callback;\n\n        this.on(item, listener);\n      });\n\n    return this;\n  }\n\n  /**\n   * Unsubscribe event with name and callback\n   * @param {String} name\n   * @param {Function} callback\n   * @returns {Object}\n   */\n  off(name, callback) {\n    if (isPlainObject(name)) {\n      for (const args of Object.entries(name)) {\n        this.off(...args);\n      }\n\n      return;\n    }\n\n    name.split(\" \").forEach((item) => {\n      const listeners = this.events[item];\n\n      if (!listeners || !listeners.length) {\n        return this;\n      }\n\n      let index = -1;\n\n      for (let i = 0, len = listeners.length; i < len; i++) {\n        const listener = listeners[i];\n\n        if (listener && (listener === callback || listener._ === callback)) {\n          index = i;\n          break;\n        }\n      }\n\n      if (index != -1) {\n        listeners.splice(index, 1);\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Emit an event.\n   * If present, `\"*\"` handlers are invoked after name-matched handlers.\n   * @param {String} name\n   * @param  {...any} details\n   * @returns {Boolean}\n   */\n  trigger(name, ...details) {\n    for (const listener of [...(this.events[name] || [])].slice()) {\n      if (listener && listener.call(this, this, ...details) === false) {\n        return false;\n      }\n    }\n\n    // A wildcard \"*\" event type\n    for (const listener of [...(this.events[\"*\"] || [])].slice()) {\n      if (listener && listener.call(this, name, this, ...details) === false) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Add given plugins to this instance,\n   * this will end up calling `attach` method of each plugin\n   * @param {Object} Plugins\n   * @returns {Object}\n   */\n  attachPlugins(plugins) {\n    const newPlugins = {};\n\n    for (const [key, Plugin] of Object.entries(plugins || {})) {\n      // Check if this plugin is not disabled by option\n      if (this.options[key] !== false && !this.plugins[key]) {\n        // Populate options with defaults from the plugin\n        this.options[key] = extend({}, Plugin.defaults || {}, this.options[key]);\n\n        // Initialise plugin\n        newPlugins[key] = new Plugin(this);\n      }\n    }\n\n    for (const [key, plugin] of Object.entries(newPlugins)) {\n      plugin.attach(this);\n    }\n\n    this.plugins = Object.assign({}, this.plugins, newPlugins);\n\n    return this;\n  }\n\n  /**\n   * Remove all plugin instances from this instance,\n   * this will end up calling `detach` method of each plugin\n   * @returns {Object}\n   */\n  detachPlugins() {\n    for (const key in this.plugins) {\n      let plugin;\n\n      if ((plugin = this.plugins[key]) && typeof plugin.detach === \"function\") {\n        plugin.detach(this);\n      }\n    }\n\n    this.plugins = {};\n\n    return this;\n  }\n}\n","export const Fullscreen = {\r\n  pageXOffset: 0,\r\n  pageYOffset: 0,\r\n\r\n  element() {\r\n    return document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n  },\r\n\r\n  activate(element) {\r\n    Fullscreen.pageXOffset = window.pageXOffset;\r\n    Fullscreen.pageYOffset = window.pageYOffset;\r\n\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen(); // W3C spec\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen(); // Firefox\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen(); // Safari\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen(); // IE/Edge\r\n    }\r\n  },\r\n\r\n  deactivate() {\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    }\r\n  },\r\n};\r\n","class Pointer {\r\n  constructor(nativePointer) {\r\n    this.id = self.Touch && nativePointer instanceof Touch ? nativePointer.identifier : -1;\r\n\r\n    this.pageX = nativePointer.pageX;\r\n    this.pageY = nativePointer.pageY;\r\n\r\n    this.clientX = nativePointer.clientX;\r\n    this.clientY = nativePointer.clientY;\r\n  }\r\n}\r\n\r\nconst getDistance = (a, b) => {\r\n  if (!b) {\r\n    return 0;\r\n  }\r\n\r\n  return Math.sqrt((b.clientX - a.clientX) ** 2 + (b.clientY - a.clientY) ** 2);\r\n};\r\n\r\nconst getMidpoint = (a, b) => {\r\n  if (!b) {\r\n    return a;\r\n  }\r\n\r\n  return {\r\n    clientX: (a.clientX + b.clientX) / 2,\r\n    clientY: (a.clientY + b.clientY) / 2,\r\n  };\r\n};\r\n\r\nconst isTouchEvent = (event) => \"changedTouches\" in event;\r\n\r\nclass PointerTracker {\r\n  constructor(_element, { start = () => true, move = () => {}, end = () => {} } = {}) {\r\n    this._element = _element;\r\n\r\n    this.startPointers = [];\r\n    this.currentPointers = [];\r\n\r\n    this._pointerStart = (event) => {\r\n      if (event.buttons > 0 && event.button !== 0) {\r\n        return;\r\n      }\r\n\r\n      const pointer = new Pointer(event);\r\n\r\n      if (this.currentPointers.some((p) => p.id === pointer.id)) {\r\n        return;\r\n      }\r\n\r\n      if (!this._triggerPointerStart(pointer, event)) {\r\n        return;\r\n      }\r\n\r\n      window.addEventListener(\"mousemove\", this._move);\r\n      window.addEventListener(\"mouseup\", this._pointerEnd);\r\n    };\r\n\r\n    this._touchStart = (event) => {\r\n      for (const touch of Array.from(event.changedTouches || [])) {\r\n        this._triggerPointerStart(new Pointer(touch), event);\r\n      }\r\n    };\r\n\r\n    this._move = (event) => {\r\n      const previousPointers = this.currentPointers.slice();\r\n      const changedPointers = isTouchEvent(event)\r\n        ? Array.from(event.changedTouches).map((t) => new Pointer(t))\r\n        : [new Pointer(event)];\r\n\r\n      const trackedChangedPointers = [];\r\n\r\n      for (const pointer of changedPointers) {\r\n        const index = this.currentPointers.findIndex((p) => p.id === pointer.id);\r\n\r\n        if (index < 0) {\r\n          continue;\r\n        }\r\n\r\n        trackedChangedPointers.push(pointer);\r\n\r\n        this.currentPointers[index] = pointer;\r\n      }\r\n\r\n      this._moveCallback(previousPointers, this.currentPointers.slice(), event);\r\n    };\r\n\r\n    this._triggerPointerEnd = (pointer, event) => {\r\n      const index = this.currentPointers.findIndex((p) => p.id === pointer.id);\r\n\r\n      if (index < 0) {\r\n        return false;\r\n      }\r\n\r\n      this.currentPointers.splice(index, 1);\r\n      this.startPointers.splice(index, 1);\r\n\r\n      this._endCallback(pointer, event);\r\n\r\n      return true;\r\n    };\r\n\r\n    this._pointerEnd = (event) => {\r\n      if (event.buttons > 0 && event.button !== 0) {\r\n        return;\r\n      }\r\n\r\n      if (!this._triggerPointerEnd(new Pointer(event), event)) {\r\n        return;\r\n      }\r\n\r\n      window.removeEventListener(\"mousemove\", this._move, { passive: false });\r\n      window.removeEventListener(\"mouseup\", this._pointerEnd, { passive: false });\r\n    };\r\n\r\n    this._touchEnd = (event) => {\r\n      for (const touch of Array.from(event.changedTouches || [])) {\r\n        this._triggerPointerEnd(new Pointer(touch), event);\r\n      }\r\n    };\r\n\r\n    this._startCallback = start;\r\n    this._moveCallback = move;\r\n    this._endCallback = end;\r\n\r\n    this._element.addEventListener(\"mousedown\", this._pointerStart, { passive: false });\r\n    this._element.addEventListener(\"touchstart\", this._touchStart, { passive: false });\r\n    this._element.addEventListener(\"touchmove\", this._move, { passive: false });\r\n    this._element.addEventListener(\"touchend\", this._touchEnd);\r\n    this._element.addEventListener(\"touchcancel\", this._touchEnd);\r\n  }\r\n\r\n  stop() {\r\n    this._element.removeEventListener(\"mousedown\", this._pointerStart, { passive: false });\r\n    this._element.removeEventListener(\"touchstart\", this._touchStart, { passive: false });\r\n    this._element.removeEventListener(\"touchmove\", this._move, { passive: false });\r\n    this._element.removeEventListener(\"touchend\", this._touchEnd);\r\n    this._element.removeEventListener(\"touchcancel\", this._touchEnd);\r\n\r\n    window.removeEventListener(\"mousemove\", this._move);\r\n    window.removeEventListener(\"mouseup\", this._pointerEnd);\r\n  }\r\n\r\n  _triggerPointerStart(pointer, event) {\r\n    if (!this._startCallback(pointer, event)) {\r\n      return false;\r\n    }\r\n\r\n    this.currentPointers.push(pointer);\r\n    this.startPointers.push(pointer);\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nexport { PointerTracker, getDistance, getMidpoint };\r\n","/**\n * ResizeObserver Polyfill\n */\nexport const ResizeObserver =\n  (typeof window !== \"undefined\" && window.ResizeObserver) ||\n  class {\n    constructor(callback) {\n      this.observables = [];\n      // Array of observed elements that looks like this:\n      // [{\n      //   el: domNode,\n      //   size: {height: x, width: y}\n      // }]\n      this.boundCheck = this.check.bind(this);\n      this.boundCheck();\n      this.callback = callback;\n    }\n\n    observe(el) {\n      if (this.observables.some((observable) => observable.el === el)) {\n        return;\n      }\n\n      const newObservable = {\n        el: el,\n        size: {\n          height: el.clientHeight,\n          width: el.clientWidth,\n        },\n      };\n\n      this.observables.push(newObservable);\n    }\n\n    unobserve(el) {\n      this.observables = this.observables.filter((obj) => obj.el !== el);\n    }\n\n    disconnect() {\n      this.observables = [];\n    }\n\n    check() {\n      const changedEntries = this.observables\n        .filter((obj) => {\n          const currentHeight = obj.el.clientHeight;\n          const currentWidth = obj.el.clientWidth;\n          if (obj.size.height !== currentHeight || obj.size.width !== currentWidth) {\n            obj.size.height = currentHeight;\n            obj.size.width = currentWidth;\n            return true;\n          }\n        })\n        .map((obj) => obj.el);\n\n      if (changedEntries.length > 0) {\n        this.callback(changedEntries);\n      }\n\n      window.requestAnimationFrame(this.boundCheck);\n    }\n  };\n","export class Slideshow {\r\n  constructor(fancybox) {\r\n    this.fancybox = fancybox;\r\n    this.active = false;\r\n\r\n    this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\r\n  }\r\n\r\n  isActive() {\r\n    return this.active;\r\n  }\r\n\r\n  setTimer() {\r\n    if (!this.active || this.timer) {\r\n      return;\r\n    }\r\n\r\n    const delay = this.fancybox.option(\"slideshow.delay\", 3000);\r\n\r\n    this.timer = setTimeout(() => {\r\n      this.timer = null;\r\n\r\n      if (\r\n        !this.fancybox.option(\"infinite\") &&\r\n        this.fancybox.getSlide().index === this.fancybox.Carousel.slides.length - 1\r\n      ) {\r\n        this.fancybox.jumpTo(0, { friction: 0 });\r\n      } else {\r\n        this.fancybox.next();\r\n      }\r\n    }, delay);\r\n\r\n    let $progress = this.$progress;\r\n\r\n    if (!$progress) {\r\n      $progress = document.createElement(\"div\");\r\n      $progress.classList.add(\"fancybox__progress\");\r\n\r\n      this.fancybox.$carousel.parentNode.insertBefore($progress, this.fancybox.$carousel);\r\n\r\n      this.$progress = $progress;\r\n\r\n      $progress.offsetHeight; /* trigger reflow */\r\n    }\r\n\r\n    $progress.style.transitionDuration = `${delay}ms`;\r\n    $progress.style.transform = \"scaleX(1)\";\r\n  }\r\n\r\n  clearTimer() {\r\n    clearTimeout(this.timer);\r\n    this.timer = null;\r\n\r\n    if (this.$progress) {\r\n      this.$progress.style.transitionDuration = \"\";\r\n      this.$progress.style.transform = \"\";\r\n\r\n      this.$progress.offsetHeight; /* trigger reflow */\r\n    }\r\n  }\r\n\r\n  activate() {\r\n    if (this.active) {\r\n      return;\r\n    }\r\n\r\n    this.active = true;\r\n    this.fancybox.$container.classList.add(\"has-slideshow\");\r\n\r\n    if (this.fancybox.getSlide().state === \"done\") {\r\n      this.setTimer();\r\n    }\r\n\r\n    document.addEventListener(\"visibilitychange\", this.handleVisibilityChange, false);\r\n  }\r\n\r\n  handleVisibilityChange() {\r\n    this.deactivate();\r\n  }\r\n\r\n  deactivate() {\r\n    this.active = false;\r\n\r\n    this.clearTimer();\r\n\r\n    this.fancybox.$container.classList.remove(\"has-slideshow\");\r\n\r\n    document.removeEventListener(\"visibilitychange\", this.handleVisibilityChange, false);\r\n  }\r\n\r\n  toggle() {\r\n    if (this.active) {\r\n      this.deactivate();\r\n    } else if (this.fancybox.Carousel.slides.length > 1) {\r\n      this.activate();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Detect if rendering from the client or the server\r\n */\r\nexport const canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\r\n","import { isPlainObject } from \"./isPlainObject.js\";\n\n/**\n * Merge the contents of two or more objects together into the first object.\n * If passing \"true\" for first argument, the merge becomes recursive (aka. deep copy).\n * @param  {...any} args\n * @returns {Object}\n */\nexport const extend = (...args) => {\n  let deep = false;\n\n  if (typeof args[0] == \"boolean\") {\n    deep = args.shift();\n  }\n\n  let result = args[0];\n\n  if (!result || typeof result !== \"object\") {\n    throw new Error(\"extendee must be an object\");\n  }\n\n  const extenders = args.slice(1);\n  const len = extenders.length;\n\n  for (let i = 0; i < len; i++) {\n    const extender = extenders[i];\n\n    for (let key in extender) {\n      if (extender.hasOwnProperty(key)) {\n        const value = extender[key];\n\n        if (deep && (Array.isArray(value) || isPlainObject(value))) {\n          const base = Array.isArray(value) ? [] : {};\n\n          result[key] = extend(true, result.hasOwnProperty(key) ? result[key] : base, value);\n        } else {\n          result[key] = value;\n        }\n      }\n    }\n  }\n\n  return result;\n};\n","/**\n * Get actual width of the element, regardless of how much of content is currently visible\n * @param {Element} elem\n * @returns {Integer}\n */\nexport const getFullWidth = (elem) => {\n  return Math.max(\n    parseFloat(elem.naturalWidth || 0),\n    parseFloat((elem.width && elem.width.baseVal && elem.width.baseVal.value) || 0),\n    parseFloat(elem.offsetWidth || 0),\n    parseFloat(elem.scrollWidth || 0)\n  );\n};\n\n/**\n * Get actual height of the element, regardless of how much of content is currently visible\n * @param {Element} elem\n * @returns {Integer}\n */\nexport const getFullHeight = (elem) => {\n  return Math.max(\n    parseFloat(elem.naturalHeight || 0),\n    parseFloat((elem.height && elem.height.baseVal && elem.height.baseVal.value) || 0),\n    parseFloat(elem.offsetHeight || 0),\n    parseFloat(elem.scrollHeight || 0)\n  );\n};\n\n/**\n * Calculate bounding size to fit dimensions while preserving aspect ratio\n * @param {Number} srcWidth\n * @param {Number} srcHeight\n * @param {Number} maxWidth\n * @param {Number} maxHeight\n * @returns {Object}\n */\nexport const calculateAspectRatioFit = (srcWidth, srcHeight, maxWidth, maxHeight) => {\n  const ratio = Math.min(maxWidth / srcWidth || 0, maxHeight / srcHeight);\n\n  return { width: srcWidth * ratio || 0, height: srcHeight * ratio || 0 };\n};\n","/**\n * Get element child node at the given coordinates\n * @param {Element} HTML element\n * @param {Float|Integer} x\n * @param {Float|Integer} y\n * @returns {Node|Boolean}}\n */\nexport const getTextNodeFromPoint = (element, x, y) => {\n  const nodes = element.childNodes;\n  const range = document.createRange();\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n\n    if (node.nodeType !== Node.TEXT_NODE) {\n      continue;\n    }\n\n    range.selectNodeContents(node);\n\n    const rect = range.getBoundingClientRect();\n\n    if (x >= rect.left && y >= rect.top && x <= rect.right && y <= rect.bottom) {\n      return node;\n    }\n  }\n\n  return false;\n};\n","/**\n * Check to see if an object is a plain object (created using \"{}\" or \"new Object\").\n * @param {*} obj Variable of any type\n * @returns {Boolean}\n */\nexport const isPlainObject = (obj) => {\n  return (\n    // separate from primitives\n    typeof obj === \"object\" &&\n    // is obvious\n    obj !== null &&\n    // separate instances (Array, DOM, ...)\n    obj.constructor === Object &&\n    // separate build-in like Math\n    Object.prototype.toString.call(obj) === \"[object Object]\"\n  );\n};\n","/**\n * Check if  element has scrollable content\n * @param {Node} node\n * @returns {Boolean}\n */\nexport const hasScrollbars = function (node) {\n  const overflowY = getComputedStyle(node)[\"overflow-y\"],\n    overflowX = getComputedStyle(node)[\"overflow-x\"],\n    vertical = (overflowY === \"scroll\" || overflowY === \"auto\") && Math.abs(node.scrollHeight - node.clientHeight) > 1,\n    horizontal = (overflowX === \"scroll\" || overflowX === \"auto\") && Math.abs(node.scrollWidth - node.clientWidth) > 1;\n\n  return vertical || horizontal;\n};\n\n/**\n * Check if element or one of the parents is scrollable\n * @param {Node} node  DOM Node element\n * @returns {Boolean}\n */\nexport const isScrollable = function (node) {\n  if (!node || !(typeof node === \"object\" && node instanceof Element) || node === document.body) {\n    return false;\n  }\n\n  if (node.__Panzoom) {\n    return false;\n  }\n\n  if (hasScrollbars(node)) {\n    return node;\n  }\n\n  return isScrollable(node.parentNode);\n};\n","/**\n * Access nested JavaScript objects by string path.\n * Example: `resolve(\"a.b.c\", {a:{b:{c:\"d\"}})` would return `d`\n * @param {String} path\n * @param {Object} obj\n * @returns {*}\n */\nexport const resolve = function (path, obj) {\n  return path.split(\".\").reduce(function (prev, curr) {\n    return prev && prev[curr];\n  }, obj);\n};\n","/**\n * Round half up; to be more specific and to ensure things like 1.005 round correctly\n * @param {Float} value\n * @param {Integer} precision\n * @returns {Float}\n */\nexport const round = (value, precision = 10000) => {\n  value = parseFloat(value) || 0;\n\n  return Math.round((value + Number.EPSILON) * precision) / precision;\n};\n","import { canUseDOM } from \"./canUseDOM.js\";\r\n\r\nlet preventScrollSupported = null;\r\n\r\nexport const FOCUSABLE_ELEMENTS = [\r\n  \"a[href]\",\r\n  \"area[href]\",\r\n  'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])',\r\n  \"select:not([disabled]):not([aria-hidden])\",\r\n  \"textarea:not([disabled]):not([aria-hidden])\",\r\n  \"button:not([disabled]):not([aria-hidden])\",\r\n  \"iframe\",\r\n  \"object\",\r\n  \"embed\",\r\n  \"video\",\r\n  \"audio\",\r\n  \"[contenteditable]\",\r\n  '[tabindex]:not([tabindex^=\"-\"]):not([disabled]):not([aria-hidden])',\r\n];\r\n\r\nexport const setFocusOn = (node) => {\r\n  if (!node || !canUseDOM) {\r\n    return;\r\n  }\r\n\r\n  if (preventScrollSupported === null) {\r\n    document.createElement(\"div\").focus({\r\n      get preventScroll() {\r\n        preventScrollSupported = true;\r\n\r\n        return false;\r\n      },\r\n    });\r\n  }\r\n\r\n  try {\r\n    if (node.setActive) {\r\n      // IE/Edge\r\n      node.setActive();\r\n    } else if (preventScrollSupported) {\r\n      // Modern browsers\r\n      node.focus({ preventScroll: true });\r\n    } else {\r\n      // Safari does not support `preventScroll` option\r\n      // https://bugs.webkit.org/show_bug.cgi?id=178583\r\n\r\n      // Save position\r\n      const scrollTop = window.pageXOffset || document.body.scrollTop;\r\n      const scrollLeft = window.pageYOffset || document.body.scrollLeft;\r\n\r\n      node.focus();\r\n\r\n      document.body.scrollTo({\r\n        top: scrollTop,\r\n        left: scrollLeft,\r\n        behavior: \"auto\",\r\n      });\r\n    }\r\n  } catch (e) {}\r\n};\r\n","/**\n * Throttling enforces a maximum number of times a function can be called over time\n * @param {Function} func Callback function\n * @param {Integer} limit Milliseconds\n * @returns {Function}\n */\nexport const throttle = (func, limit) => {\n  let lastCall = 0;\n\n  return function (...args) {\n    const now = new Date().getTime();\n\n    if (now - lastCall < limit) {\n      return;\n    }\n\n    lastCall = now;\n\n    return func(...args);\n  };\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/** ============================================================================\n * fancybox\n *\n * @version   1.0.1\n * @author    RIESTER <wordpress@riester.com>\n * @copyright 2022 RIESTER\n * ========================================================================== */\n\nimport { Fancybox } from '@fancyapps/ui/src/Fancybox/Fancybox.js';\nrwp = typeof rwp === 'undefined' ? {} : rwp;\n\nrwp.modal = (selector = '[data-fancybox]', args = {}) => {\n\tconst defaults = {\n\t\ttemplate: '<div class=\"spinner-border\" role=\"status\"><span class=\"visually-hidden\">Loading...</span></div>',\n\t\ton: {\n\t\t\tload: (instance, slide) => {\n\t\t\t\tconsole.log(`#${slide.index} slide is loaded!`);\n\t\t\t\tconsole.log(`This slide is selected: ${instance.getSlide().index === slide.index}`);\n\t\t\t},\n\t\t},\n\t};\n\n\tif (!rwp.isEmpty(args)) {\n\t\targs = rwp.defaultsDeep(args, defaults);\n\t} else {\n\t\targs = defaults;\n\t}\n\n\tif (!rwp.isEmpty(selector)) {\n\t\tlet modal = new Fancybox(selector, args);\n\n\t\treturn modal;\n\t}\n};\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":["Fancybox","rwp","modal","selector","args","defaults","template","on","load","instance","slide","console","log","index","getSlide","isEmpty","defaultsDeep"],"sourceRoot":""}