<?php

// scoper-autoload.php @generated by PhpScoper

$loader = require_once __DIR__.'/autoload.php';

// Aliases for the whitelisted classes. For more information see:
// https://github.com/humbug/php-scoper/blob/master/README.md#class-whitelisting
if (!class_exists('Extended_Taxonomy_Admin', false) && !interface_exists('Extended_Taxonomy_Admin', false) && !trait_exists('Extended_Taxonomy_Admin', false)) {
    spl_autoload_call('RWP\Vendor\Extended_Taxonomy_Admin');
}
if (!class_exists('Walker_ExtendedTaxonomyRadios', false) && !interface_exists('Walker_ExtendedTaxonomyRadios', false) && !trait_exists('Walker_ExtendedTaxonomyRadios', false)) {
    spl_autoload_call('RWP\Vendor\Walker_ExtendedTaxonomyRadios');
}
if (!class_exists('Extended_CPT_Admin', false) && !interface_exists('Extended_CPT_Admin', false) && !trait_exists('Extended_CPT_Admin', false)) {
    spl_autoload_call('RWP\Vendor\Extended_CPT_Admin');
}
if (!class_exists('Extended_CPT_Rewrite_Testing', false) && !interface_exists('Extended_CPT_Rewrite_Testing', false) && !trait_exists('Extended_CPT_Rewrite_Testing', false)) {
    spl_autoload_call('RWP\Vendor\Extended_CPT_Rewrite_Testing');
}
if (!class_exists('Extended_Taxonomy_Rewrite_Testing', false) && !interface_exists('Extended_Taxonomy_Rewrite_Testing', false) && !trait_exists('Extended_Taxonomy_Rewrite_Testing', false)) {
    spl_autoload_call('RWP\Vendor\Extended_Taxonomy_Rewrite_Testing');
}
if (!class_exists('Walker_ExtendedTaxonomyDropdown', false) && !interface_exists('Walker_ExtendedTaxonomyDropdown', false) && !trait_exists('Walker_ExtendedTaxonomyDropdown', false)) {
    spl_autoload_call('RWP\Vendor\Walker_ExtendedTaxonomyDropdown');
}
if (!class_exists('Walker_ExtendedTaxonomyCheckboxes', false) && !interface_exists('Walker_ExtendedTaxonomyCheckboxes', false) && !trait_exists('Walker_ExtendedTaxonomyCheckboxes', false)) {
    spl_autoload_call('RWP\Vendor\Walker_ExtendedTaxonomyCheckboxes');
}
if (!class_exists('Extended_CPT', false) && !interface_exists('Extended_CPT', false) && !trait_exists('Extended_CPT', false)) {
    spl_autoload_call('RWP\Vendor\Extended_CPT');
}
if (!class_exists('Extended_Taxonomy', false) && !interface_exists('Extended_Taxonomy', false) && !trait_exists('Extended_Taxonomy', false)) {
    spl_autoload_call('RWP\Vendor\Extended_Taxonomy');
}
if (!class_exists('Extended_Rewrite_Testing', false) && !interface_exists('Extended_Rewrite_Testing', false) && !trait_exists('Extended_Rewrite_Testing', false)) {
    spl_autoload_call('RWP\Vendor\Extended_Rewrite_Testing');
}
if (!class_exists('ComposerAutoloaderInit5ab0c780e7760cbac96137825efefa78', false) && !interface_exists('ComposerAutoloaderInit5ab0c780e7760cbac96137825efefa78', false) && !trait_exists('ComposerAutoloaderInit5ab0c780e7760cbac96137825efefa78', false)) {
    spl_autoload_call('RWP\Vendor\ComposerAutoloaderInit5ab0c780e7760cbac96137825efefa78');
}
if (!class_exists('JsonException', false) && !interface_exists('JsonException', false) && !trait_exists('JsonException', false)) {
    spl_autoload_call('RWP\Vendor\JsonException');
}
if (!class_exists('ValueError', false) && !interface_exists('ValueError', false) && !trait_exists('ValueError', false)) {
    spl_autoload_call('RWP\Vendor\ValueError');
}
if (!class_exists('Attribute', false) && !interface_exists('Attribute', false) && !trait_exists('Attribute', false)) {
    spl_autoload_call('RWP\Vendor\Attribute');
}
if (!class_exists('UnhandledMatchError', false) && !interface_exists('UnhandledMatchError', false) && !trait_exists('UnhandledMatchError', false)) {
    spl_autoload_call('RWP\Vendor\UnhandledMatchError');
}
if (!class_exists('Stringable', false) && !interface_exists('Stringable', false) && !trait_exists('Stringable', false)) {
    spl_autoload_call('RWP\Vendor\Stringable');
}

// Functions whitelisting. For more information see:
// https://github.com/humbug/php-scoper/blob/master/README.md#functions-whitelisting
if (!function_exists('stripslashes_deep')) {
    function stripslashes_deep() {
        return \RWP\Vendor\stripslashes_deep(...func_get_args());
    }
}
if (!function_exists('register_extended_post_type')) {
    function register_extended_post_type() {
        return \RWP\Vendor\register_extended_post_type(...func_get_args());
    }
}

if (!function_exists('register_extended_taxonomy')) {
    function register_extended_taxonomy() {
        return \RWP\Vendor\register_extended_taxonomy(...func_get_args());
    }
}

if (!function_exists('includeIfExists')) {
    function includeIfExists() {
        return \RWP\Vendor\includeIfExists(...func_get_args());
    }
}

if (!function_exists('dump')) {
    function dump() {
        return \RWP\Vendor\dump(...func_get_args());
    }
}
if (!function_exists('dd')) {
    function dd() {
        return \RWP\Vendor\dd(...func_get_args());
    }
}
if (!function_exists('trigger_deprecation')) {
    function trigger_deprecation() {
        return \RWP\Vendor\trigger_deprecation(...func_get_args());
    }
}
if (!function_exists('collect')) {
    function collect() {
        return \RWP\Vendor\collect(...func_get_args());
    }
}
if (!function_exists('data_fill')) {
    function data_fill() {
        return \RWP\Vendor\data_fill(...func_get_args());
    }
}
if (!function_exists('data_set')) {
    function data_set() {
        return \RWP\Vendor\data_set(...func_get_args());
    }
}
if (!function_exists('data_get')) {
    function data_get() {
        return \RWP\Vendor\data_get(...func_get_args());
    }
}
if (!function_exists('value')) {
    function value() {
        return \RWP\Vendor\value(...func_get_args());
    }
}
if (!function_exists('head')) {
    function head() {
        return \RWP\Vendor\head(...func_get_args());
    }
}
if (!function_exists('last')) {
    function last() {
        return \RWP\Vendor\last(...func_get_args());
    }
}
if (!function_exists('h')) {
    function h() {
        return \RWP\Vendor\h(...func_get_args());
    }
}
if (!function_exists('getExceptionMsg')) {
    function getExceptionMsg() {
        return \RWP\Vendor\getExceptionMsg(...func_get_args());
    }
}
if (!function_exists('sendPage')) {
    function sendPage() {
        return \RWP\Vendor\sendPage(...func_get_args());
    }
}

if (!\function_exists('fdiv')) {
    function fdiv() {
        return \RWP\Vendor\fdiv(...func_get_args());
    }
}
if (!\function_exists('preg_last_error_msg')) {
    function preg_last_error_msg() {
        return \RWP\Vendor\preg_last_error_msg(...func_get_args());
    }
}
if (!\function_exists('str_contains')) {
    function str_contains() {
        return \RWP\Vendor\str_contains(...func_get_args());
    }
}
if (!\function_exists('str_starts_with')) {
    function str_starts_with() {
        return \RWP\Vendor\str_starts_with(...func_get_args());
    }
}
if (!\function_exists('str_ends_with')) {
    function str_ends_with() {
        return \RWP\Vendor\str_ends_with(...func_get_args());
    }
}
if (!\function_exists('get_debug_type')) {
    function get_debug_type() {
        return \RWP\Vendor\get_debug_type(...func_get_args());
    }
}
if (!\function_exists('get_resource_id')) {
    function get_resource_id() {
        return \RWP\Vendor\get_resource_id(...func_get_args());
    }
}


return $loader;
