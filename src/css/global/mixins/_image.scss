// Image Mixins
// - Responsive image
// - Retina image

// Responsive image

// Keep images from scaling beyond the width of their parents.

@mixin img-fluid() {
	// Part 1: Set a maximum relative to the parent
	max-width: 100%;

	// Part 2: Override the height to auto, otherwise images will be stretched
	// when setting a width and height attribute on the img element.

	height: auto;
}

@mixin cover-absolute($important: false) {
	@if $important {
		position: absolute !important;
		top: 0 !important;
		left: 0 !important;
		right: 0 !important;
		bottom: 0 !important;
		width: 100% !important;
		height: 100% !important;
		min-width: 100% !important;
		min-height: 100% !important;
	} @else {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		width: 100%;
		height: 100%;
		min-width: 100%;
		min-height: 100%;
	}
}

@mixin img-cover() {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	width: 100% !important;
	height: 100% !important;
	display: block;
	object-fit: cover;
	font-family: 'object-fit: cover';
}

@mixin center-absolute() {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

@mixin center-relative() {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

@mixin cover-relative() {
	display: flex;
	flex-direction: column;

	> * {
		flex: 1 1 auto;
	}
}

@mixin media-breakpoints($breakpoints: $media-breakpoints) {
	$description: '--media-thumbnail: (max-width: 119.8px) | --media-small: (min-width: 120px) and (max-width: 319.8px)';
	@each $name, $breakpoint in $breakpoints {
		$min: breakpoint-min($breakpoint, $grid-breakpoints);
		$max: breakpoint-max($breakpoint, $grid-breakpoints);
		$property: --media-#{$name};
		$value: '';

		@if $min != null and $max != null {
			@if $name != 'full' {
				$value: '(min-width: #{$min}) and (max-width: #{$max})';
			} @else {
				$value: '(min-width: #{$min})';
			}
		} @else if $max == null {
			$value: '(min-width: #{$min})';
		} @else if $min == null {
			$value: '(max-width: #{$max})';
		}

		@if $value != '' {
			@if $description != '' {
				$description: $description + ' | ';
			}

			$description: $description + $property + ': ' + inspect($value);
		}
	}

	display: none;
	content: $description;
}
